   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"uart.c"
  21              	.Ltext0:
  22              		.file 1 "../uart.c"
 1682              		.align	2
 1683              		.global	uart0_init
 1685              	uart0_init:
 1686              	.LFB0:
   1:../uart.c     **** 
   2:../uart.c     **** #include <s3c44b0x.h>
   3:../uart.c     **** #include <uart.h>
   4:../uart.c     **** 
   5:../uart.c     **** void uart0_init( void )
   6:../uart.c     **** {
 1687              		.loc 1 6 0
 1688              		.cfi_startproc
 1689              		@ Function supports interworking.
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692 0000 0DC0A0E1 		mov	ip, sp
 1693              	.LCFI0:
 1694              		.cfi_def_cfa_register 12
 1695 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1696 0008 04B04CE2 		sub	fp, ip, #4
 1697              		.cfi_offset 14, -8
 1698              		.cfi_offset 13, -12
 1699              		.cfi_offset 11, -16
 1700              	.LCFI1:
 1701              		.cfi_def_cfa 11, 4
   7:../uart.c     ****     UFCON0 = 0x1;
 1702              		.loc 1 7 0
 1703 000c 40309FE5 		ldr	r3, .L2
 1704 0010 0120A0E3 		mov	r2, #1
 1705 0014 002083E5 		str	r2, [r3, #0]
   8:../uart.c     ****     UMCON0 = 0x0;
 1706              		.loc 1 8 0
 1707 0018 38309FE5 		ldr	r3, .L2+4
 1708 001c 0020A0E3 		mov	r2, #0
 1709 0020 002083E5 		str	r2, [r3, #0]
   9:../uart.c     ****     ULCON0 = 0x3;
 1710              		.loc 1 9 0
 1711 0024 1D36A0E3 		mov	r3, #30408704
 1712 0028 0320A0E3 		mov	r2, #3
 1713 002c 002083E5 		str	r2, [r3, #0]
  10:../uart.c     ****     UBRDIV0 = 0x22;
 1714              		.loc 1 10 0
 1715 0030 24309FE5 		ldr	r3, .L2+8
 1716 0034 2220A0E3 		mov	r2, #34
 1717 0038 002083E5 		str	r2, [r3, #0]
  11:../uart.c     ****     UCON0 = 0x5;
 1718              		.loc 1 11 0
 1719 003c 1C309FE5 		ldr	r3, .L2+12
 1720 0040 0520A0E3 		mov	r2, #5
 1721 0044 002083E5 		str	r2, [r3, #0]
  12:../uart.c     **** }
 1722              		.loc 1 12 0
 1723 0048 0CD04BE2 		sub	sp, fp, #12
 1724 004c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1725 0050 1EFF2FE1 		bx	lr
 1726              	.L3:
 1727              		.align	2
 1728              	.L2:
 1729 0054 0800D001 		.word	30408712
 1730 0058 0C00D001 		.word	30408716
 1731 005c 2800D001 		.word	30408744
 1732 0060 0400D001 		.word	30408708
 1733              		.cfi_endproc
 1734              	.LFE0:
 1736              		.align	2
 1737              		.global	uart0_putchar
 1739              	uart0_putchar:
 1740              	.LFB1:
  13:../uart.c     **** 
  14:../uart.c     **** void uart0_putchar( char ch )
  15:../uart.c     **** {
 1741              		.loc 1 15 0
 1742              		.cfi_startproc
 1743              		@ Function supports interworking.
 1744              		@ args = 0, pretend = 0, frame = 8
 1745              		@ frame_needed = 1, uses_anonymous_args = 0
 1746 0064 0DC0A0E1 		mov	ip, sp
 1747              	.LCFI2:
 1748              		.cfi_def_cfa_register 12
 1749 0068 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1750 006c 04B04CE2 		sub	fp, ip, #4
 1751              		.cfi_offset 14, -8
 1752              		.cfi_offset 13, -12
 1753              		.cfi_offset 11, -16
 1754              	.LCFI3:
 1755              		.cfi_def_cfa 11, 4
 1756 0070 08D04DE2 		sub	sp, sp, #8
 1757 0074 0030A0E1 		mov	r3, r0
 1758 0078 0D304BE5 		strb	r3, [fp, #-13]
  16:../uart.c     **** 	while(UFSTAT0 & (1<<9));
 1759              		.loc 1 16 0
 1760 007c 0000A0E1 		mov	r0, r0	@ nop
 1761              	.L5:
 1762              		.loc 1 16 0 is_stmt 0 discriminator 1
 1763 0080 24309FE5 		ldr	r3, .L6
 1764 0084 003093E5 		ldr	r3, [r3, #0]
 1765 0088 023C03E2 		and	r3, r3, #512
 1766 008c 000053E3 		cmp	r3, #0
 1767 0090 FAFFFF1A 		bne	.L5
  17:../uart.c     ****     UTXH0 = ch;
 1768              		.loc 1 17 0 is_stmt 1
 1769 0094 14309FE5 		ldr	r3, .L6+4
 1770 0098 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1771 009c 002083E5 		str	r2, [r3, #0]
  18:../uart.c     **** }
 1772              		.loc 1 18 0
 1773 00a0 0CD04BE2 		sub	sp, fp, #12
 1774 00a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1775 00a8 1EFF2FE1 		bx	lr
 1776              	.L7:
 1777              		.align	2
 1778              	.L6:
 1779 00ac 1800D001 		.word	30408728
 1780 00b0 2000D001 		.word	30408736
 1781              		.cfi_endproc
 1782              	.LFE1:
 1784              		.align	2
 1785              		.global	uart0_getchar
 1787              	uart0_getchar:
 1788              	.LFB2:
  19:../uart.c     **** 
  20:../uart.c     **** char uart0_getchar( void )
  21:../uart.c     **** {
 1789              		.loc 1 21 0
 1790              		.cfi_startproc
 1791              		@ Function supports interworking.
 1792              		@ args = 0, pretend = 0, frame = 0
 1793              		@ frame_needed = 1, uses_anonymous_args = 0
 1794 00b4 0DC0A0E1 		mov	ip, sp
 1795              	.LCFI4:
 1796              		.cfi_def_cfa_register 12
 1797 00b8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1798 00bc 04B04CE2 		sub	fp, ip, #4
 1799              		.cfi_offset 14, -8
 1800              		.cfi_offset 13, -12
 1801              		.cfi_offset 11, -16
 1802              	.LCFI5:
 1803              		.cfi_def_cfa 11, 4
  22:../uart.c     ****     while((UFSTAT0 & 0xF) == 0);
 1804              		.loc 1 22 0
 1805 00c0 0000A0E1 		mov	r0, r0	@ nop
 1806              	.L9:
 1807              		.loc 1 22 0 is_stmt 0 discriminator 1
 1808 00c4 28309FE5 		ldr	r3, .L10
 1809 00c8 003093E5 		ldr	r3, [r3, #0]
 1810 00cc 0F3003E2 		and	r3, r3, #15
 1811 00d0 000053E3 		cmp	r3, #0
 1812 00d4 FAFFFF0A 		beq	.L9
  23:../uart.c     ****     return URXH0;
 1813              		.loc 1 23 0 is_stmt 1
 1814 00d8 18309FE5 		ldr	r3, .L10+4
 1815 00dc 003093E5 		ldr	r3, [r3, #0]
 1816 00e0 FF3003E2 		and	r3, r3, #255
  24:../uart.c     **** }
 1817              		.loc 1 24 0
 1818 00e4 0300A0E1 		mov	r0, r3
 1819 00e8 0CD04BE2 		sub	sp, fp, #12
 1820 00ec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1821 00f0 1EFF2FE1 		bx	lr
 1822              	.L11:
 1823              		.align	2
 1824              	.L10:
 1825 00f4 1800D001 		.word	30408728
 1826 00f8 2400D001 		.word	30408740
 1827              		.cfi_endproc
 1828              	.LFE2:
 1830              		.align	2
 1831              		.global	uart0_puts
 1833              	uart0_puts:
 1834              	.LFB3:
  25:../uart.c     **** 
  26:../uart.c     **** void uart0_puts( char *s )
  27:../uart.c     **** {
 1835              		.loc 1 27 0
 1836              		.cfi_startproc
 1837              		@ Function supports interworking.
 1838              		@ args = 0, pretend = 0, frame = 16
 1839              		@ frame_needed = 1, uses_anonymous_args = 0
 1840 00fc 0DC0A0E1 		mov	ip, sp
 1841              	.LCFI6:
 1842              		.cfi_def_cfa_register 12
 1843 0100 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1844 0104 04B04CE2 		sub	fp, ip, #4
 1845              		.cfi_offset 14, -8
 1846              		.cfi_offset 13, -12
 1847              		.cfi_offset 11, -16
 1848              	.LCFI7:
 1849              		.cfi_def_cfa 11, 4
 1850 0108 10D04DE2 		sub	sp, sp, #16
 1851 010c 18000BE5 		str	r0, [fp, #-24]
  28:../uart.c     **** 	int i=0;
 1852              		.loc 1 28 0
 1853 0110 0030A0E3 		mov	r3, #0
 1854 0114 10300BE5 		str	r3, [fp, #-16]
  29:../uart.c     ****     while(s[i] != '\0'){
 1855              		.loc 1 29 0
 1856 0118 080000EA 		b	.L13
 1857              	.L14:
  30:../uart.c     ****     	uart0_putchar(s[i++]);
 1858              		.loc 1 30 0
 1859 011c 10301BE5 		ldr	r3, [fp, #-16]
 1860 0120 18201BE5 		ldr	r2, [fp, #-24]
 1861 0124 033082E0 		add	r3, r2, r3
 1862 0128 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1863 012c 10201BE5 		ldr	r2, [fp, #-16]
 1864 0130 012082E2 		add	r2, r2, #1
 1865 0134 10200BE5 		str	r2, [fp, #-16]
 1866 0138 0300A0E1 		mov	r0, r3
 1867 013c FEFFFFEB 		bl	uart0_putchar
 1868              	.L13:
  29:../uart.c     ****     while(s[i] != '\0'){
 1869              		.loc 1 29 0 discriminator 1
 1870 0140 10301BE5 		ldr	r3, [fp, #-16]
 1871 0144 18201BE5 		ldr	r2, [fp, #-24]
 1872 0148 033082E0 		add	r3, r2, r3
 1873 014c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1874 0150 000053E3 		cmp	r3, #0
 1875 0154 F0FFFF1A 		bne	.L14
  31:../uart.c     ****     }
  32:../uart.c     **** }
 1876              		.loc 1 32 0
 1877 0158 0CD04BE2 		sub	sp, fp, #12
 1878 015c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1879 0160 1EFF2FE1 		bx	lr
 1880              		.cfi_endproc
 1881              	.LFE3:
 1883              		.align	2
 1884              		.global	uart0_putint
 1886              	uart0_putint:
 1887              	.LFB4:
  33:../uart.c     **** 
  34:../uart.c     **** void uart0_putint( int32 i )
  35:../uart.c     **** {
 1888              		.loc 1 35 0
 1889              		.cfi_startproc
 1890              		@ Function supports interworking.
 1891              		@ args = 0, pretend = 0, frame = 32
 1892              		@ frame_needed = 1, uses_anonymous_args = 0
 1893 0164 0DC0A0E1 		mov	ip, sp
 1894              	.LCFI8:
 1895              		.cfi_def_cfa_register 12
 1896 0168 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1897 016c 04B04CE2 		sub	fp, ip, #4
 1898              		.cfi_offset 14, -8
 1899              		.cfi_offset 13, -12
 1900              		.cfi_offset 11, -16
 1901              	.LCFI9:
 1902              		.cfi_def_cfa 11, 4
 1903 0170 20D04DE2 		sub	sp, sp, #32
 1904 0174 28000BE5 		str	r0, [fp, #-40]
  36:../uart.c     **** 	char buf[11 + 1];
  37:../uart.c     **** 	char *p = buf + 11;
 1905              		.loc 1 37 0
 1906 0178 20304BE2 		sub	r3, fp, #32
 1907 017c 0B3083E2 		add	r3, r3, #11
 1908 0180 10300BE5 		str	r3, [fp, #-16]
  38:../uart.c     **** 	uint8 c;
  39:../uart.c     **** 	boolean neg = (i<0);
 1909              		.loc 1 39 0
 1910 0184 28301BE5 		ldr	r3, [fp, #-40]
 1911 0188 A33FA0E1 		mov	r3, r3, lsr #31
 1912 018c 11304BE5 		strb	r3, [fp, #-17]
  40:../uart.c     **** 	*p = '\0';
 1913              		.loc 1 40 0
 1914 0190 10301BE5 		ldr	r3, [fp, #-16]
 1915 0194 0020A0E3 		mov	r2, #0
 1916 0198 0020C3E5 		strb	r2, [r3, #0]
  41:../uart.c     **** 
  42:../uart.c     **** 	if(neg) i *= -1;
 1917              		.loc 1 42 0
 1918 019c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1919 01a0 000053E3 		cmp	r3, #0
 1920 01a4 0200000A 		beq	.L16
 1921              		.loc 1 42 0 is_stmt 0 discriminator 1
 1922 01a8 28301BE5 		ldr	r3, [fp, #-40]
 1923 01ac 003063E2 		rsb	r3, r3, #0
 1924 01b0 28300BE5 		str	r3, [fp, #-40]
 1925              	.L16:
  43:../uart.c     **** 	if(i == 0)*--p = '0';
 1926              		.loc 1 43 0 is_stmt 1
 1927 01b4 28301BE5 		ldr	r3, [fp, #-40]
 1928 01b8 000053E3 		cmp	r3, #0
 1929 01bc 2200001A 		bne	.L18
 1930              		.loc 1 43 0 is_stmt 0 discriminator 1
 1931 01c0 10301BE5 		ldr	r3, [fp, #-16]
 1932 01c4 013043E2 		sub	r3, r3, #1
 1933 01c8 10300BE5 		str	r3, [fp, #-16]
 1934 01cc 10301BE5 		ldr	r3, [fp, #-16]
 1935 01d0 3020A0E3 		mov	r2, #48
 1936 01d4 0020C3E5 		strb	r2, [r3, #0]
  44:../uart.c     **** 	while(i> 0){
 1937              		.loc 1 44 0 is_stmt 1 discriminator 1
 1938 01d8 1B0000EA 		b	.L18
 1939              	.L19:
  45:../uart.c     **** 		c = i % 10;
 1940              		.loc 1 45 0
 1941 01dc 28101BE5 		ldr	r1, [fp, #-40]
 1942 01e0 A8309FE5 		ldr	r3, .L21
 1943 01e4 9123C3E0 		smull	r2, r3, r1, r3
 1944 01e8 4321A0E1 		mov	r2, r3, asr #2
 1945 01ec C13FA0E1 		mov	r3, r1, asr #31
 1946 01f0 022063E0 		rsb	r2, r3, r2
 1947 01f4 0230A0E1 		mov	r3, r2
 1948 01f8 0331A0E1 		mov	r3, r3, asl #2
 1949 01fc 023083E0 		add	r3, r3, r2
 1950 0200 8330A0E1 		mov	r3, r3, asl #1
 1951 0204 012063E0 		rsb	r2, r3, r1
 1952 0208 0230A0E1 		mov	r3, r2
 1953 020c 12304BE5 		strb	r3, [fp, #-18]
  46:../uart.c     **** 		i = i / 10;
 1954              		.loc 1 46 0
 1955 0210 28301BE5 		ldr	r3, [fp, #-40]
 1956 0214 74209FE5 		ldr	r2, .L21
 1957 0218 9312C2E0 		smull	r1, r2, r3, r2
 1958 021c 4221A0E1 		mov	r2, r2, asr #2
 1959 0220 C33FA0E1 		mov	r3, r3, asr #31
 1960 0224 023063E0 		rsb	r3, r3, r2
 1961 0228 28300BE5 		str	r3, [fp, #-40]
  47:../uart.c     **** 		*--p = '0' + c;
 1962              		.loc 1 47 0
 1963 022c 10301BE5 		ldr	r3, [fp, #-16]
 1964 0230 013043E2 		sub	r3, r3, #1
 1965 0234 10300BE5 		str	r3, [fp, #-16]
 1966 0238 12305BE5 		ldrb	r3, [fp, #-18]
 1967 023c 303083E2 		add	r3, r3, #48
 1968 0240 FF2003E2 		and	r2, r3, #255
 1969 0244 10301BE5 		ldr	r3, [fp, #-16]
 1970 0248 0020C3E5 		strb	r2, [r3, #0]
 1971              	.L18:
  44:../uart.c     **** 	while(i> 0){
 1972              		.loc 1 44 0 discriminator 1
 1973 024c 28301BE5 		ldr	r3, [fp, #-40]
 1974 0250 000053E3 		cmp	r3, #0
 1975 0254 E0FFFFCA 		bgt	.L19
  48:../uart.c     **** 	}
  49:../uart.c     **** 
  50:../uart.c     **** 	if(neg) *--p = '-';
 1976              		.loc 1 50 0
 1977 0258 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1978 025c 000053E3 		cmp	r3, #0
 1979 0260 0500000A 		beq	.L20
 1980              		.loc 1 50 0 is_stmt 0 discriminator 1
 1981 0264 10301BE5 		ldr	r3, [fp, #-16]
 1982 0268 013043E2 		sub	r3, r3, #1
 1983 026c 10300BE5 		str	r3, [fp, #-16]
 1984 0270 10301BE5 		ldr	r3, [fp, #-16]
 1985 0274 2D20A0E3 		mov	r2, #45
 1986 0278 0020C3E5 		strb	r2, [r3, #0]
 1987              	.L20:
  51:../uart.c     **** 	uart0_puts( p );
 1988              		.loc 1 51 0 is_stmt 1
 1989 027c 10001BE5 		ldr	r0, [fp, #-16]
 1990 0280 FEFFFFEB 		bl	uart0_puts
  52:../uart.c     **** }
 1991              		.loc 1 52 0
 1992 0284 0CD04BE2 		sub	sp, fp, #12
 1993 0288 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1994 028c 1EFF2FE1 		bx	lr
 1995              	.L22:
 1996              		.align	2
 1997              	.L21:
 1998 0290 67666666 		.word	1717986919
 1999              		.cfi_endproc
 2000              	.LFE4:
 2002              		.align	2
 2003              		.global	uart0_puthex
 2005              	uart0_puthex:
 2006              	.LFB5:
  53:../uart.c     **** 
  54:../uart.c     **** void uart0_puthex( uint32 i )
  55:../uart.c     **** {
 2007              		.loc 1 55 0
 2008              		.cfi_startproc
 2009              		@ Function supports interworking.
 2010              		@ args = 0, pretend = 0, frame = 24
 2011              		@ frame_needed = 1, uses_anonymous_args = 0
 2012 0294 0DC0A0E1 		mov	ip, sp
 2013              	.LCFI10:
 2014              		.cfi_def_cfa_register 12
 2015 0298 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2016 029c 04B04CE2 		sub	fp, ip, #4
 2017              		.cfi_offset 14, -8
 2018              		.cfi_offset 13, -12
 2019              		.cfi_offset 11, -16
 2020              	.LCFI11:
 2021              		.cfi_def_cfa 11, 4
 2022 02a0 18D04DE2 		sub	sp, sp, #24
 2023 02a4 20000BE5 		str	r0, [fp, #-32]
  56:../uart.c     ****     char buf[8 + 1];
  57:../uart.c     ****     char *p = buf + 8;
 2024              		.loc 1 57 0
 2025 02a8 1C304BE2 		sub	r3, fp, #28
 2026 02ac 083083E2 		add	r3, r3, #8
 2027 02b0 10300BE5 		str	r3, [fp, #-16]
  58:../uart.c     ****     uint8 c;
  59:../uart.c     **** 
  60:../uart.c     ****     *p = '\0';
 2028              		.loc 1 60 0
 2029 02b4 10301BE5 		ldr	r3, [fp, #-16]
 2030 02b8 0020A0E3 		mov	r2, #0
 2031 02bc 0020C3E5 		strb	r2, [r3, #0]
 2032              	.L26:
  61:../uart.c     **** 
  62:../uart.c     ****     do {
  63:../uart.c     ****         c = i & 0xf;
 2033              		.loc 1 63 0
 2034 02c0 20301BE5 		ldr	r3, [fp, #-32]
 2035 02c4 FF3003E2 		and	r3, r3, #255
 2036 02c8 0F3003E2 		and	r3, r3, #15
 2037 02cc 11304BE5 		strb	r3, [fp, #-17]
  64:../uart.c     ****         if( c < 10 )
 2038              		.loc 1 64 0
 2039 02d0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2040 02d4 090053E3 		cmp	r3, #9
 2041 02d8 0800008A 		bhi	.L24
  65:../uart.c     ****             *--p = '0' + c;
 2042              		.loc 1 65 0
 2043 02dc 10301BE5 		ldr	r3, [fp, #-16]
 2044 02e0 013043E2 		sub	r3, r3, #1
 2045 02e4 10300BE5 		str	r3, [fp, #-16]
 2046 02e8 11305BE5 		ldrb	r3, [fp, #-17]
 2047 02ec 303083E2 		add	r3, r3, #48
 2048 02f0 FF2003E2 		and	r2, r3, #255
 2049 02f4 10301BE5 		ldr	r3, [fp, #-16]
 2050 02f8 0020C3E5 		strb	r2, [r3, #0]
 2051 02fc 070000EA 		b	.L25
 2052              	.L24:
  66:../uart.c     ****         else
  67:../uart.c     ****             *--p = 'a' + c - 10;
 2053              		.loc 1 67 0
 2054 0300 10301BE5 		ldr	r3, [fp, #-16]
 2055 0304 013043E2 		sub	r3, r3, #1
 2056 0308 10300BE5 		str	r3, [fp, #-16]
 2057 030c 11305BE5 		ldrb	r3, [fp, #-17]
 2058 0310 573083E2 		add	r3, r3, #87
 2059 0314 FF2003E2 		and	r2, r3, #255
 2060 0318 10301BE5 		ldr	r3, [fp, #-16]
 2061 031c 0020C3E5 		strb	r2, [r3, #0]
 2062              	.L25:
  68:../uart.c     ****         i = i >> 4;
 2063              		.loc 1 68 0
 2064 0320 20301BE5 		ldr	r3, [fp, #-32]
 2065 0324 2332A0E1 		mov	r3, r3, lsr #4
 2066 0328 20300BE5 		str	r3, [fp, #-32]
  69:../uart.c     ****     } while( i );
 2067              		.loc 1 69 0
 2068 032c 20301BE5 		ldr	r3, [fp, #-32]
 2069 0330 000053E3 		cmp	r3, #0
 2070 0334 E1FFFF1A 		bne	.L26
  70:../uart.c     **** 
  71:../uart.c     ****     uart0_puts( p );
 2071              		.loc 1 71 0
 2072 0338 10001BE5 		ldr	r0, [fp, #-16]
 2073 033c FEFFFFEB 		bl	uart0_puts
  72:../uart.c     **** }
 2074              		.loc 1 72 0
 2075 0340 0CD04BE2 		sub	sp, fp, #12
 2076 0344 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2077 0348 1EFF2FE1 		bx	lr
 2078              		.cfi_endproc
 2079              	.LFE5:
 2081              		.align	2
 2082              		.global	uart0_gets
 2084              	uart0_gets:
 2085              	.LFB6:
  73:../uart.c     **** 
  74:../uart.c     **** void uart0_gets( char *s )
  75:../uart.c     **** {
 2086              		.loc 1 75 0
 2087              		.cfi_startproc
 2088              		@ Function supports interworking.
 2089              		@ args = 0, pretend = 0, frame = 8
 2090              		@ frame_needed = 1, uses_anonymous_args = 0
 2091 034c 0DC0A0E1 		mov	ip, sp
 2092              	.LCFI12:
 2093              		.cfi_def_cfa_register 12
 2094 0350 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2095 0354 04B04CE2 		sub	fp, ip, #4
 2096              		.cfi_offset 14, -8
 2097              		.cfi_offset 13, -12
 2098              		.cfi_offset 11, -16
 2099              	.LCFI13:
 2100              		.cfi_def_cfa 11, 4
 2101 0358 08D04DE2 		sub	sp, sp, #8
 2102 035c 10000BE5 		str	r0, [fp, #-16]
  76:../uart.c     ****     while((*s++ = uart0_getchar()) != '\n');
 2103              		.loc 1 76 0
 2104 0360 0000A0E1 		mov	r0, r0	@ nop
 2105              	.L28:
 2106              		.loc 1 76 0 is_stmt 0 discriminator 1
 2107 0364 FEFFFFEB 		bl	uart0_getchar
 2108 0368 0030A0E1 		mov	r3, r0
 2109 036c 0320A0E1 		mov	r2, r3
 2110 0370 10301BE5 		ldr	r3, [fp, #-16]
 2111 0374 0020C3E5 		strb	r2, [r3, #0]
 2112 0378 10301BE5 		ldr	r3, [fp, #-16]
 2113 037c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2114 0380 0A0053E3 		cmp	r3, #10
 2115 0384 0030A003 		moveq	r3, #0
 2116 0388 0130A013 		movne	r3, #1
 2117 038c FF3003E2 		and	r3, r3, #255
 2118 0390 10201BE5 		ldr	r2, [fp, #-16]
 2119 0394 012082E2 		add	r2, r2, #1
 2120 0398 10200BE5 		str	r2, [fp, #-16]
 2121 039c 000053E3 		cmp	r3, #0
 2122 03a0 EFFFFF1A 		bne	.L28
  77:../uart.c     **** 	*s = '\0';
 2123              		.loc 1 77 0 is_stmt 1
 2124 03a4 10301BE5 		ldr	r3, [fp, #-16]
 2125 03a8 0020A0E3 		mov	r2, #0
 2126 03ac 0020C3E5 		strb	r2, [r3, #0]
  78:../uart.c     **** }
 2127              		.loc 1 78 0
 2128 03b0 0CD04BE2 		sub	sp, fp, #12
 2129 03b4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2130 03b8 1EFF2FE1 		bx	lr
 2131              		.cfi_endproc
 2132              	.LFE6:
 2134              		.align	2
 2135              		.global	uart0_getint
 2137              	uart0_getint:
 2138              	.LFB7:
  79:../uart.c     **** 
  80:../uart.c     **** int32 uart0_getint( void )
  81:../uart.c     **** {
 2139              		.loc 1 81 0
 2140              		.cfi_startproc
 2141              		@ Function supports interworking.
 2142              		@ args = 0, pretend = 0, frame = 16
 2143              		@ frame_needed = 1, uses_anonymous_args = 0
 2144 03bc 0DC0A0E1 		mov	ip, sp
 2145              	.LCFI14:
 2146              		.cfi_def_cfa_register 12
 2147 03c0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2148 03c4 04B04CE2 		sub	fp, ip, #4
 2149              		.cfi_offset 14, -8
 2150              		.cfi_offset 13, -12
 2151              		.cfi_offset 11, -16
 2152              	.LCFI15:
 2153              		.cfi_def_cfa 11, 4
 2154 03c8 10D04DE2 		sub	sp, sp, #16
  82:../uart.c     ****     int32 result = 0;
 2155              		.loc 1 82 0
 2156 03cc 0030A0E3 		mov	r3, #0
 2157 03d0 10300BE5 		str	r3, [fp, #-16]
  83:../uart.c     **** 
  84:../uart.c     ****     char ch;
  85:../uart.c     ****     uint8 num;
  86:../uart.c     **** 
  87:../uart.c     **** 
  88:../uart.c     ****     uint8 i = 0;
 2158              		.loc 1 88 0
 2159 03d4 0030A0E3 		mov	r3, #0
 2160 03d8 19304BE5 		strb	r3, [fp, #-25]
  89:../uart.c     ****     int sign = 1;
 2161              		.loc 1 89 0
 2162 03dc 0130A0E3 		mov	r3, #1
 2163 03e0 18300BE5 		str	r3, [fp, #-24]
  90:../uart.c     ****     if((ch = uart0_getchar()) == '-'){
 2164              		.loc 1 90 0
 2165 03e4 FEFFFFEB 		bl	uart0_getchar
 2166 03e8 0030A0E1 		mov	r3, r0
 2167 03ec 11304BE5 		strb	r3, [fp, #-17]
 2168 03f0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2169 03f4 2D0053E3 		cmp	r3, #45
 2170 03f8 1800001A 		bne	.L31
  91:../uart.c     ****     	ch = uart0_getchar();
 2171              		.loc 1 91 0
 2172 03fc FEFFFFEB 		bl	uart0_getchar
 2173 0400 0030A0E1 		mov	r3, r0
 2174 0404 11304BE5 		strb	r3, [fp, #-17]
  92:../uart.c     ****     	sign = -1;
 2175              		.loc 1 92 0
 2176 0408 0030E0E3 		mvn	r3, #0
 2177 040c 18300BE5 		str	r3, [fp, #-24]
  93:../uart.c     ****     	i++;
 2178              		.loc 1 93 0
 2179 0410 19305BE5 		ldrb	r3, [fp, #-25]
 2180 0414 013083E2 		add	r3, r3, #1
 2181 0418 19304BE5 		strb	r3, [fp, #-25]
  94:../uart.c     ****     }
  95:../uart.c     **** 
  96:../uart.c     ****     while(ch != '\n'){
 2182              		.loc 1 96 0
 2183 041c 0F0000EA 		b	.L31
 2184              	.L32:
  97:../uart.c     ****     	num = ch - '0';
 2185              		.loc 1 97 0
 2186 0420 11305BE5 		ldrb	r3, [fp, #-17]
 2187 0424 303043E2 		sub	r3, r3, #48
 2188 0428 1A304BE5 		strb	r3, [fp, #-26]
  98:../uart.c     ****     	result *= 10;
 2189              		.loc 1 98 0
 2190 042c 10201BE5 		ldr	r2, [fp, #-16]
 2191 0430 0230A0E1 		mov	r3, r2
 2192 0434 0331A0E1 		mov	r3, r3, asl #2
 2193 0438 023083E0 		add	r3, r3, r2
 2194 043c 8330A0E1 		mov	r3, r3, asl #1
 2195 0440 10300BE5 		str	r3, [fp, #-16]
  99:../uart.c     ****     	result += num;
 2196              		.loc 1 99 0
 2197 0444 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 2198 0448 10201BE5 		ldr	r2, [fp, #-16]
 2199 044c 033082E0 		add	r3, r2, r3
 2200 0450 10300BE5 		str	r3, [fp, #-16]
 100:../uart.c     ****     	ch = uart0_getchar();
 2201              		.loc 1 100 0
 2202 0454 FEFFFFEB 		bl	uart0_getchar
 2203 0458 0030A0E1 		mov	r3, r0
 2204 045c 11304BE5 		strb	r3, [fp, #-17]
 2205              	.L31:
  96:../uart.c     ****     while(ch != '\n'){
 2206              		.loc 1 96 0 discriminator 1
 2207 0460 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2208 0464 0A0053E3 		cmp	r3, #10
 2209 0468 ECFFFF1A 		bne	.L32
 101:../uart.c     ****     }
 102:../uart.c     **** 	result *= sign;
 2210              		.loc 1 102 0
 2211 046c 10301BE5 		ldr	r3, [fp, #-16]
 2212 0470 18201BE5 		ldr	r2, [fp, #-24]
 2213 0474 920303E0 		mul	r3, r2, r3
 2214 0478 10300BE5 		str	r3, [fp, #-16]
 103:../uart.c     ****     return result;
 2215              		.loc 1 103 0
 2216 047c 10301BE5 		ldr	r3, [fp, #-16]
 104:../uart.c     **** 
 105:../uart.c     **** 	/*
 106:../uart.c     **** 	int32 salida = 0; //si no me guarda un valor anterior
 107:../uart.c     **** 	int32 sig;
 108:../uart.c     **** 	char car = uart0_getchar();
 109:../uart.c     **** 	boolean neg= FALSE;
 110:../uart.c     **** 	if(car == '-'){
 111:../uart.c     **** 		neg = TRUE;
 112:../uart.c     **** 		car = uart0_getchar();
 113:../uart.c     **** 	}
 114:../uart.c     **** 	while(car != '\n'){
 115:../uart.c     **** 		sig = car - '0';
 116:../uart.c     **** 		salida = salida*10;
 117:../uart.c     **** 		if(neg) salida-= sig;
 118:../uart.c     **** 		else salida += sig;
 119:../uart.c     **** 		car = uart0_getchar();
 120:../uart.c     **** 	}
 121:../uart.c     **** 	return salida;*/
 122:../uart.c     **** }
 2217              		.loc 1 122 0
 2218 0480 0300A0E1 		mov	r0, r3
 2219 0484 0CD04BE2 		sub	sp, fp, #12
 2220 0488 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2221 048c 1EFF2FE1 		bx	lr
 2222              		.cfi_endproc
 2223              	.LFE7:
 2225              		.align	2
 2226              		.global	uart0_gethex
 2228              	uart0_gethex:
 2229              	.LFB8:
 123:../uart.c     **** 
 124:../uart.c     **** uint32 uart0_gethex( void )
 125:../uart.c     **** {
 2230              		.loc 1 125 0
 2231              		.cfi_startproc
 2232              		@ Function supports interworking.
 2233              		@ args = 0, pretend = 0, frame = 8
 2234              		@ frame_needed = 1, uses_anonymous_args = 0
 2235 0490 0DC0A0E1 		mov	ip, sp
 2236              	.LCFI16:
 2237              		.cfi_def_cfa_register 12
 2238 0494 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2239 0498 04B04CE2 		sub	fp, ip, #4
 2240              		.cfi_offset 14, -8
 2241              		.cfi_offset 13, -12
 2242              		.cfi_offset 11, -16
 2243              	.LCFI17:
 2244              		.cfi_def_cfa 11, 4
 2245 049c 08D04DE2 		sub	sp, sp, #8
 126:../uart.c     **** 	int32 num = 0;
 2246              		.loc 1 126 0
 2247 04a0 0030A0E3 		mov	r3, #0
 2248 04a4 10300BE5 		str	r3, [fp, #-16]
 127:../uart.c     **** 	char caracter;
 128:../uart.c     **** 
 129:../uart.c     **** 	while((caracter = uart0_getchar()) != '\n'){
 2249              		.loc 1 129 0
 2250 04a8 1A0000EA 		b	.L34
 2251              	.L37:
 130:../uart.c     **** 		if (caracter - '0' < 10){
 2252              		.loc 1 130 0
 2253 04ac 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2254 04b0 303043E2 		sub	r3, r3, #48
 2255 04b4 090053E3 		cmp	r3, #9
 2256 04b8 060000CA 		bgt	.L35
 131:../uart.c     **** 			num = num*16 + (caracter - '0');
 2257              		.loc 1 131 0
 2258 04bc 10301BE5 		ldr	r3, [fp, #-16]
 2259 04c0 0322A0E1 		mov	r2, r3, asl #4
 2260 04c4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2261 04c8 303043E2 		sub	r3, r3, #48
 2262 04cc 033082E0 		add	r3, r2, r3
 2263 04d0 10300BE5 		str	r3, [fp, #-16]
 2264 04d4 0F0000EA 		b	.L34
 2265              	.L35:
 132:../uart.c     **** 		}
 133:../uart.c     **** 		else if(caracter<='Z'){
 2266              		.loc 1 133 0
 2267 04d8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2268 04dc 5A0053E3 		cmp	r3, #90
 2269 04e0 0600008A 		bhi	.L36
 134:../uart.c     **** 			num = num*16 + (caracter - 'A' + 10);
 2270              		.loc 1 134 0
 2271 04e4 10301BE5 		ldr	r3, [fp, #-16]
 2272 04e8 0322A0E1 		mov	r2, r3, asl #4
 2273 04ec 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2274 04f0 373043E2 		sub	r3, r3, #55
 2275 04f4 033082E0 		add	r3, r2, r3
 2276 04f8 10300BE5 		str	r3, [fp, #-16]
 2277 04fc 050000EA 		b	.L34
 2278              	.L36:
 135:../uart.c     **** 		}
 136:../uart.c     **** 		else{
 137:../uart.c     **** 			num = num*16 + (caracter - 'a' + 10);
 2279              		.loc 1 137 0
 2280 0500 10301BE5 		ldr	r3, [fp, #-16]
 2281 0504 0322A0E1 		mov	r2, r3, asl #4
 2282 0508 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2283 050c 573043E2 		sub	r3, r3, #87
 2284 0510 033082E0 		add	r3, r2, r3
 2285 0514 10300BE5 		str	r3, [fp, #-16]
 2286              	.L34:
 129:../uart.c     **** 	while((caracter = uart0_getchar()) != '\n'){
 2287              		.loc 1 129 0 discriminator 1
 2288 0518 FEFFFFEB 		bl	uart0_getchar
 2289 051c 0030A0E1 		mov	r3, r0
 2290 0520 11304BE5 		strb	r3, [fp, #-17]
 2291 0524 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2292 0528 0A0053E3 		cmp	r3, #10
 2293 052c DEFFFF1A 		bne	.L37
 138:../uart.c     **** 		}
 139:../uart.c     **** 
 140:../uart.c     **** 	}
 141:../uart.c     **** 	return num;
 2294              		.loc 1 141 0
 2295 0530 10301BE5 		ldr	r3, [fp, #-16]
 142:../uart.c     **** }
 2296              		.loc 1 142 0
 2297 0534 0300A0E1 		mov	r0, r3
 2298 0538 0CD04BE2 		sub	sp, fp, #12
 2299 053c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2300 0540 1EFF2FE1 		bx	lr
 2301              		.cfi_endproc
 2302              	.LFE8:
 2304              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 uart.c
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1682   .text:00000000 $a
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1685   .text:00000000 uart0_init
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1729   .text:00000054 $d
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1736   .text:00000064 $a
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1739   .text:00000064 uart0_putchar
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1779   .text:000000ac $d
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1784   .text:000000b4 $a
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1787   .text:000000b4 uart0_getchar
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1825   .text:000000f4 $d
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1830   .text:000000fc $a
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1833   .text:000000fc uart0_puts
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1886   .text:00000164 uart0_putint
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:1998   .text:00000290 $d
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:2002   .text:00000294 $a
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:2005   .text:00000294 uart0_puthex
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:2084   .text:0000034c uart0_gets
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:2137   .text:000003bc uart0_getint
C:\Users\guill\AppData\Local\Temp\ccVxduxc.s:2228   .text:00000490 uart0_gethex
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
