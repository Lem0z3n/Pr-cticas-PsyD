   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"proyecto.c"
  21              	.Ltext0:
  22              		.file 1 "../proyecto.c"
 2205              		.align	2
 2206              		.global	main
 2208              	main:
 2209              	.LFB0:
   1:../proyecto.c **** /*-------------------------------------------------------------------
   2:../proyecto.c **** **
   3:../proyecto.c **** **  Aplicacion demo bajo un kernel de planificacion no expropiativo
   4:../proyecto.c **** 
   5:../proyecto.c **** ** Proyecto desarrollado por Guillermo Lemonnier y Lucas Arranz,
   6:../proyecto.c **** **
   7:../proyecto.c **** ** basado en la demo inicial desarrollada por el profesor José Manuel Mendías Cuadros
   8:../proyecto.c **** **
   9:../proyecto.c **** **
  10:../proyecto.c **** **-----------------------------------------------------------------*/
  11:../proyecto.c **** #include "proyecto.h"
  12:../proyecto.c **** #include "pantalla.h"
  13:../proyecto.c **** /////////////////////////////////////////////////////////////////////////////
  14:../proyecto.c **** // Declaracion de recursos
  15:../proyecto.c **** /////////////////////////////////////////////////////////////////////////////
  16:../proyecto.c **** 
  17:../proyecto.c **** parking_t parking[MAXPLACES];
  18:../proyecto.c **** 
  19:../proyecto.c **** struct mbox1 {                /* mailbox donde la coinsAcceptorTask indica a mainTask la moneda int
  20:../proyecto.c ****     boolean flag;
  21:../proyecto.c ****     boolean licPlateInput;
  22:../proyecto.c ****     uint8   cents;
  23:../proyecto.c ****     uint8  keyPress;
  24:../proyecto.c **** } kpPressedMsg;
  25:../proyecto.c **** 
  26:../proyecto.c **** struct mbox2 {                /* mailbox donde la tsScanTask indica a mainTask la posicion de la pa
  27:../proyecto.c ****     boolean flag, langFlag;
  28:../proyecto.c ****     uint16  x, y;
  29:../proyecto.c **** } tsPressedMsg;
  30:../proyecto.c **** 
  31:../proyecto.c **** struct mbox3 {                 /* mailbox donde la mainTask indica a coinsMoverTask si debe aceptar
  32:../proyecto.c ****     boolean flag;
  33:../proyecto.c ****     boolean accept;
  34:../proyecto.c **** } coinsMoverMsg;
  35:../proyecto.c **** 
  36:../proyecto.c **** 
  37:../proyecto.c **** struct mbox5{
  38:../proyecto.c **** 	boolean flag;	  /* mailbox donde la mainTask indica a ticketPrintTask que imprima un ticket */
  39:../proyecto.c **** 	parking_t place;
  40:../proyecto.c **** }ticketMsg;
  41:../proyecto.c **** 
  42:../proyecto.c **** 
  43:../proyecto.c **** 
  44:../proyecto.c **** /*******************************************************************/
  45:../proyecto.c **** 
  46:../proyecto.c **** void main( void )
  47:../proyecto.c **** 
  48:../proyecto.c **** {
 2210              		.loc 1 48 0
 2211              		.cfi_startproc
 2212              		@ Function supports interworking.
 2213              		@ args = 0, pretend = 0, frame = 0
 2214              		@ frame_needed = 1, uses_anonymous_args = 0
 2215 0000 0DC0A0E1 		mov	ip, sp
 2216              	.LCFI0:
 2217              		.cfi_def_cfa_register 12
 2218 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2219 0008 04B04CE2 		sub	fp, ip, #4
 2220              		.cfi_offset 14, -8
 2221              		.cfi_offset 13, -12
 2222              		.cfi_offset 11, -16
 2223              	.LCFI1:
 2224              		.cfi_def_cfa 11, 4
  49:../proyecto.c ****     
  50:../proyecto.c ****     sys_init();      
 2225              		.loc 1 50 0
 2226 000c FEFFFFEB 		bl	sys_init
  51:../proyecto.c ****     leds_init();
 2227              		.loc 1 51 0
 2228 0010 FEFFFFEB 		bl	leds_init
  52:../proyecto.c ****     segs_init();
 2229              		.loc 1 52 0
 2230 0014 FEFFFFEB 		bl	segs_init
  53:../proyecto.c ****     uart0_init();
 2231              		.loc 1 53 0
 2232 0018 FEFFFFEB 		bl	uart0_init
  54:../proyecto.c ****     rtc_init();
 2233              		.loc 1 54 0
 2234 001c FEFFFFEB 		bl	rtc_init
  55:../proyecto.c ****     timers_init();
 2235              		.loc 1 55 0
 2236 0020 FEFFFFEB 		bl	timers_init
  56:../proyecto.c ****     keypad_init();
 2237              		.loc 1 56 0
 2238 0024 FEFFFFEB 		bl	keypad_init
  57:../proyecto.c ****     lcd_init();
 2239              		.loc 1 57 0
 2240 0028 FEFFFFEB 		bl	lcd_init
  58:../proyecto.c ****     ts_init();
 2241              		.loc 1 58 0
 2242 002c FEFFFFEB 		bl	ts_init
  59:../proyecto.c **** 
  60:../proyecto.c ****     lcd_on();
 2243              		.loc 1 60 0
 2244 0030 FEFFFFEB 		bl	lcd_on
  61:../proyecto.c ****     ts_on();
 2245              		.loc 1 61 0
 2246 0034 FEFFFFEB 		bl	ts_on
  62:../proyecto.c **** 
  63:../proyecto.c ****     setup();
 2247              		.loc 1 63 0
 2248 0038 FEFFFFEB 		bl	setup
  64:../proyecto.c **** 
  65:../proyecto.c ****     scheduler_init();                       /* Inicializa el kernel */
 2249              		.loc 1 65 0
 2250 003c FEFFFFEB 		bl	scheduler_init
  66:../proyecto.c **** 
  67:../proyecto.c ****     create_task( tsScanTask,          5 );    /* Crea las tareas de la aplicacion... */
 2251              		.loc 1 67 0
 2252 0040 58009FE5 		ldr	r0, .L3
 2253 0044 0510A0E3 		mov	r1, #5
 2254 0048 FEFFFFEB 		bl	create_task
  68:../proyecto.c ****     create_task( kpScanTask,   5 );    /* ... el kernel asigna la prioridad segun orden de creacion
 2255              		.loc 1 68 0
 2256 004c 50009FE5 		ldr	r0, .L3+4
 2257 0050 0510A0E3 		mov	r1, #5
 2258 0054 FEFFFFEB 		bl	create_task
  69:../proyecto.c ****     create_task( mainTask,           10 );    /* ... las tareas mas frecuentes tienen mayor priorid
 2259              		.loc 1 69 0
 2260 0058 48009FE5 		ldr	r0, .L3+8
 2261 005c 0A10A0E3 		mov	r1, #10
 2262 0060 FEFFFFEB 		bl	create_task
  70:../proyecto.c ****     create_task( coinsMoverTask,     10 );
 2263              		.loc 1 70 0
 2264 0064 40009FE5 		ldr	r0, .L3+12
 2265 0068 0A10A0E3 		mov	r1, #10
 2266 006c FEFFFFEB 		bl	create_task
  71:../proyecto.c ****     create_task( clockTask,          10 );
 2267              		.loc 1 71 0
 2268 0070 38009FE5 		ldr	r0, .L3+16
 2269 0074 0A10A0E3 		mov	r1, #10
 2270 0078 FEFFFFEB 		bl	create_task
  72:../proyecto.c ****     create_task( ticketPrinterTask,  10 );
 2271              		.loc 1 72 0
 2272 007c 30009FE5 		ldr	r0, .L3+20
 2273 0080 0A10A0E3 		mov	r1, #10
 2274 0084 FEFFFFEB 		bl	create_task
  73:../proyecto.c **** 
  74:../proyecto.c ****     timer0_open_tick( scheduler, TICKS_PER_SEC );  /* Instala scheduler como RTI del timer0  */
 2275              		.loc 1 74 0
 2276 0088 28009FE5 		ldr	r0, .L3+24
 2277 008c 6410A0E3 		mov	r1, #100
 2278 0090 FEFFFFEB 		bl	timer0_open_tick
 2279              	.L2:
  75:../proyecto.c **** 
  76:../proyecto.c ****     while( 1 )
  77:../proyecto.c ****     {
  78:../proyecto.c ****         sleep();                /* Entra en estado IDLE, sale por interrupcion */
 2280              		.loc 1 78 0 discriminator 1
 2281 0094 FEFFFFEB 		bl	sleep
  79:../proyecto.c ****         dispacher();            /* Las tareas preparadas se ejecutan en esta hebra (background) en 
 2282              		.loc 1 79 0 discriminator 1
 2283 0098 FEFFFFEB 		bl	dispacher
  80:../proyecto.c ****     }
 2284              		.loc 1 80 0 discriminator 1
 2285 009c FCFFFFEA 		b	.L2
 2286              	.L4:
 2287              		.align	2
 2288              	.L3:
 2289 00a0 00000000 		.word	tsScanTask
 2290 00a4 00000000 		.word	kpScanTask
 2291 00a8 00000000 		.word	mainTask
 2292 00ac 00000000 		.word	coinsMoverTask
 2293 00b0 00000000 		.word	clockTask
 2294 00b4 00000000 		.word	ticketPrinterTask
 2295 00b8 00000000 		.word	scheduler
 2296              		.cfi_endproc
 2297              	.LFE0:
 2299              		.align	2
 2300              		.global	mainTask
 2302              	mainTask:
 2303              	.LFB1:
  81:../proyecto.c **** 
  82:../proyecto.c **** }
  83:../proyecto.c **** 
  84:../proyecto.c **** /*******************************************************************/
  85:../proyecto.c **** 
  86:../proyecto.c **** /* 
  87:../proyecto.c **** ** Tarea principal, se activa cada 100 ms muestreando los mensajes enviados de otras tareas y actua
  88:../proyecto.c **** */
  89:../proyecto.c **** void mainTask( void )  
  90:../proyecto.c **** {
 2304              		.loc 1 90 0
 2305              		.cfi_startproc
 2306              		@ Function supports interworking.
 2307              		@ args = 0, pretend = 0, frame = 8
 2308              		@ frame_needed = 1, uses_anonymous_args = 0
 2309 00bc 0DC0A0E1 		mov	ip, sp
 2310              	.LCFI2:
 2311              		.cfi_def_cfa_register 12
 2312 00c0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2313 00c4 04B04CE2 		sub	fp, ip, #4
 2314              		.cfi_offset 14, -8
 2315              		.cfi_offset 13, -12
 2316              		.cfi_offset 11, -16
 2317              	.LCFI3:
 2318              		.cfi_def_cfa 11, 4
 2319 00c8 08D04DE2 		sub	sp, sp, #8
  91:../proyecto.c ****     static boolean init = TRUE;
  92:../proyecto.c ****     static uint16 ticks, licPlateComp;
  93:../proyecto.c ****     static uint8 placeSelected;
  94:../proyecto.c ****     static rtc_time_t og_deadline;
  95:../proyecto.c ****     static state_t state, prevState;
  96:../proyecto.c **** 
  97:../proyecto.c ****     if( init )
 2320              		.loc 1 97 0
 2321 00cc AC3D9FE5 		ldr	r3, .L69
 2322 00d0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2323 00d4 000053E3 		cmp	r3, #0
 2324 00d8 3B00000A 		beq	.L6
 2325              	.LBB2:
  98:../proyecto.c ****     {
  99:../proyecto.c ****         init   = FALSE;
 2326              		.loc 1 99 0
 2327 00dc 9C3D9FE5 		ldr	r3, .L69
 2328 00e0 0020A0E3 		mov	r2, #0
 2329 00e4 0020C3E5 		strb	r2, [r3, #0]
 100:../proyecto.c ****         init_screen_mens();
 2330              		.loc 1 100 0
 2331 00e8 FEFFFFEB 		bl	init_screen_mens
 101:../proyecto.c ****         plotWelcomeScreen();
 2332              		.loc 1 101 0
 2333 00ec FEFFFFEB 		bl	plotWelcomeScreen
 102:../proyecto.c ****         int i;
 103:../proyecto.c ****         for(i = 0; i < MAXPLACES; i++)
 2334              		.loc 1 103 0
 2335 00f0 0030A0E3 		mov	r3, #0
 2336 00f4 10300BE5 		str	r3, [fp, #-16]
 2337 00f8 290000EA 		b	.L7
 2338              	.L8:
 104:../proyecto.c ****         {
 105:../proyecto.c ****         	parking[i].id = i+1;
 2339              		.loc 1 105 0 discriminator 2
 2340 00fc 10301BE5 		ldr	r3, [fp, #-16]
 2341 0100 FF3003E2 		and	r3, r3, #255
 2342 0104 013083E2 		add	r3, r3, #1
 2343 0108 FF1003E2 		and	r1, r3, #255
 2344 010c 803D9FE5 		ldr	r3, .L69+20
 2345 0110 10201BE5 		ldr	r2, [fp, #-16]
 2346 0114 0212C3E7 		strb	r1, [r3, r2, asl #4]
 106:../proyecto.c ****         	parking[i].free = TRUE;
 2347              		.loc 1 106 0 discriminator 2
 2348 0118 741D9FE5 		ldr	r1, .L69+20
 2349 011c 10201BE5 		ldr	r2, [fp, #-16]
 2350 0120 0130A0E3 		mov	r3, #1
 2351 0124 0222A0E1 		mov	r2, r2, asl #4
 2352 0128 022081E0 		add	r2, r1, r2
 2353 012c 033082E0 		add	r3, r2, r3
 2354 0130 0120A0E3 		mov	r2, #1
 2355 0134 0020C3E5 		strb	r2, [r3, #0]
 107:../proyecto.c ****         	parking[i].licPlate = 0;
 2356              		.loc 1 107 0 discriminator 2
 2357 0138 541D9FE5 		ldr	r1, .L69+20
 2358 013c 10201BE5 		ldr	r2, [fp, #-16]
 2359 0140 0830A0E3 		mov	r3, #8
 2360 0144 0222A0E1 		mov	r2, r2, asl #4
 2361 0148 022081E0 		add	r2, r1, r2
 2362 014c 033082E0 		add	r3, r2, r3
 2363 0150 0020A0E3 		mov	r2, #0
 2364 0154 B220C3E1 		strh	r2, [r3, #2]	@ movhi
 108:../proyecto.c ****         	parking[i].credit = 0;
 2365              		.loc 1 108 0 discriminator 2
 2366 0158 341D9FE5 		ldr	r1, .L69+20
 2367 015c 10201BE5 		ldr	r2, [fp, #-16]
 2368 0160 0830A0E3 		mov	r3, #8
 2369 0164 0222A0E1 		mov	r2, r2, asl #4
 2370 0168 022081E0 		add	r2, r1, r2
 2371 016c 033082E0 		add	r3, r2, r3
 2372 0170 0020A0E3 		mov	r2, #0
 2373 0174 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 109:../proyecto.c ****         	parking[i].error = 0;
 2374              		.loc 1 109 0 discriminator 2
 2375 0178 141D9FE5 		ldr	r1, .L69+20
 2376 017c 10201BE5 		ldr	r2, [fp, #-16]
 2377 0180 0830A0E3 		mov	r3, #8
 2378 0184 0222A0E1 		mov	r2, r2, asl #4
 2379 0188 022081E0 		add	r2, r1, r2
 2380 018c 033082E0 		add	r3, r2, r3
 2381 0190 0020A0E3 		mov	r2, #0
 2382 0194 0620C3E5 		strb	r2, [r3, #6]
 103:../proyecto.c ****         for(i = 0; i < MAXPLACES; i++)
 2383              		.loc 1 103 0 discriminator 2
 2384 0198 10301BE5 		ldr	r3, [fp, #-16]
 2385 019c 013083E2 		add	r3, r3, #1
 2386 01a0 10300BE5 		str	r3, [fp, #-16]
 2387              	.L7:
 103:../proyecto.c ****         for(i = 0; i < MAXPLACES; i++)
 2388              		.loc 1 103 0 is_stmt 0 discriminator 1
 2389 01a4 10301BE5 		ldr	r3, [fp, #-16]
 2390 01a8 070053E3 		cmp	r3, #7
 2391 01ac D2FFFFDA 		ble	.L8
 110:../proyecto.c ****         }
 111:../proyecto.c ****         placeSelected = 0; //	valor para inicializar la variable se sobreescribirá antes de ser rel
 2392              		.loc 1 111 0 is_stmt 1
 2393 01b0 E03C9FE5 		ldr	r3, .L69+24
 2394 01b4 0020A0E3 		mov	r2, #0
 2395 01b8 0020C3E5 		strb	r2, [r3, #0]
 112:../proyecto.c ****         state = waiting;
 2396              		.loc 1 112 0
 2397 01bc E83C9FE5 		ldr	r3, .L69+44
 2398 01c0 0120A0E3 		mov	r2, #1
 2399 01c4 0020C3E5 		strb	r2, [r3, #0]
 2400 01c8 4A0400EA 		b	.L5
 2401              	.L6:
 2402              	.LBE2:
 113:../proyecto.c ****     }
 114:../proyecto.c ****     else switch( state )
 2403              		.loc 1 114 0
 2404 01cc D83C9FE5 		ldr	r3, .L69+44
 2405 01d0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2406 01d4 070053E3 		cmp	r3, #7
 2407 01d8 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2408 01dc 450400EA 		b	.L5
 2409              	.L18:
 2410 01e0 00020000 		.word	.L10
 2411 01e4 2C030000 		.word	.L11
 2412 01e8 1C040000 		.word	.L12
 2413 01ec 44060000 		.word	.L13
 2414 01f0 9C0A0000 		.word	.L14
 2415 01f4 400D0000 		.word	.L15
 2416 01f8 B00E0000 		.word	.L16
 2417 01fc 48100000 		.word	.L17
 2418              	.L10:
 115:../proyecto.c ****     {
 116:../proyecto.c ****     	case language:
 117:../proyecto.c ****     		if( !(--ticks) )                           /* Decrementa ticks y chequea si ha permanecido en
 2419              		.loc 1 117 0
 2420 0200 943C9FE5 		ldr	r3, .L69+28
 2421 0204 B030D3E1 		ldrh	r3, [r3, #0]
 2422 0208 013043E2 		sub	r3, r3, #1
 2423 020c 0338A0E1 		mov	r3, r3, asl #16
 2424 0210 2328A0E1 		mov	r2, r3, lsr #16
 2425 0214 803C9FE5 		ldr	r3, .L69+28
 2426 0218 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 2427 021c 783C9FE5 		ldr	r3, .L69+28
 2428 0220 B030D3E1 		ldrh	r3, [r3, #0]
 2429 0224 000053E3 		cmp	r3, #0
 2430 0228 0700001A 		bne	.L19
 118:../proyecto.c **** 			{
 119:../proyecto.c **** 				plotState(waiting,placeSelected);                     /* Visualiza pantalla inicial */
 2431              		.loc 1 119 0
 2432 022c 643C9FE5 		ldr	r3, .L69+24
 2433 0230 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2434 0234 0100A0E3 		mov	r0, #1
 2435 0238 0310A0E1 		mov	r1, r3
 2436 023c FEFFFFEB 		bl	plotState
 120:../proyecto.c **** 				state = waiting;                      /* Salta al estado demo_waiting */
 2437              		.loc 1 120 0
 2438 0240 643C9FE5 		ldr	r3, .L69+44
 2439 0244 0120A0E3 		mov	r2, #1
 2440 0248 0020C3E5 		strb	r2, [r3, #0]
 2441              	.L19:
 121:../proyecto.c **** 			}
 122:../proyecto.c ****     		if( tsPressedMsg.flag && !tsPressedMsg.langFlag )                    /* Chequea si se ha puls
 2442              		.loc 1 122 0
 2443 024c 503C9FE5 		ldr	r3, .L69+36
 2444 0250 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2445 0254 000053E3 		cmp	r3, #0
 2446 0258 1800000A 		beq	.L20
 2447              		.loc 1 122 0 is_stmt 0 discriminator 1
 2448 025c 403C9FE5 		ldr	r3, .L69+36
 2449 0260 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2450 0264 000053E3 		cmp	r3, #0
 2451 0268 1400001A 		bne	.L20
 123:../proyecto.c **** 			{
 124:../proyecto.c **** 				tsPressedMsg.flag = FALSE;                 /* Marca el mensaje como leido */
 2452              		.loc 1 124 0 is_stmt 1
 2453 026c 303C9FE5 		ldr	r3, .L69+36
 2454 0270 0020A0E3 		mov	r2, #0
 2455 0274 0020C3E5 		strb	r2, [r3, #0]
 125:../proyecto.c **** 				if( changeLang() >= 0)
 2456              		.loc 1 125 0
 2457 0278 FEFFFFEB 		bl	changeLang
 2458 027c 0030A0E1 		mov	r3, r0
 2459 0280 000053E3 		cmp	r3, #0
 2460 0284 0A0000BA 		blt	.L21
 126:../proyecto.c **** 				{									/* Borra pantalla */
 127:../proyecto.c **** 					plotState(prevState, placeSelected);
 2461              		.loc 1 127 0
 2462 0288 183C9FE5 		ldr	r3, .L69+40
 2463 028c 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2464 0290 003C9FE5 		ldr	r3, .L69+24
 2465 0294 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2466 0298 0200A0E1 		mov	r0, r2
 2467 029c 0310A0E1 		mov	r1, r3
 2468 02a0 FEFFFFEB 		bl	plotState
 128:../proyecto.c **** 					state = prevState;                  /* Salta al estado previo ... */
 2469              		.loc 1 128 0
 2470 02a4 FC3B9FE5 		ldr	r3, .L69+40
 2471 02a8 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2472 02ac F83B9FE5 		ldr	r3, .L69+44
 2473 02b0 0020C3E5 		strb	r2, [r3, #0]
 2474              	.L21:
 129:../proyecto.c **** 				}
 130:../proyecto.c **** 				ticks = 500;                               /* ... en el que debera permanecer un maximo de 500 
 2475              		.loc 1 130 0
 2476 02b4 E03B9FE5 		ldr	r3, .L69+28
 2477 02b8 7D2FA0E3 		mov	r2, #500
 2478 02bc B020C3E1 		strh	r2, [r3, #0]	@ movhi
 2479              	.L20:
 131:../proyecto.c **** 			}
 132:../proyecto.c ****     		if ( tsPressedMsg.langFlag )
 2480              		.loc 1 132 0
 2481 02c0 DC3B9FE5 		ldr	r3, .L69+36
 2482 02c4 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2483 02c8 000053E3 		cmp	r3, #0
 2484 02cc 0800000A 		beq	.L22
 133:../proyecto.c ****     		{
 134:../proyecto.c ****     			tsPressedMsg.flag = FALSE;
 2485              		.loc 1 134 0
 2486 02d0 CC3B9FE5 		ldr	r3, .L69+36
 2487 02d4 0020A0E3 		mov	r2, #0
 2488 02d8 0020C3E5 		strb	r2, [r3, #0]
 135:../proyecto.c ****     			tsPressedMsg.langFlag = FALSE;
 2489              		.loc 1 135 0
 2490 02dc C03B9FE5 		ldr	r3, .L69+36
 2491 02e0 0020A0E3 		mov	r2, #0
 2492 02e4 0120C3E5 		strb	r2, [r3, #1]
 136:../proyecto.c ****     			state = language;
 2493              		.loc 1 136 0
 2494 02e8 BC3B9FE5 		ldr	r3, .L69+44
 2495 02ec 0020A0E3 		mov	r2, #0
 2496 02f0 0020C3E5 		strb	r2, [r3, #0]
 2497              	.L22:
 137:../proyecto.c ****     		}
 138:../proyecto.c **** 			if( kpPressedMsg.flag )                /* Chequea si se ha introducido una moneda (mensaje recib
 2498              		.loc 1 138 0
 2499 02f4 A43B9FE5 		ldr	r3, .L69+32
 2500 02f8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2501 02fc 000053E3 		cmp	r3, #0
 2502 0300 EF03000A 		beq	.L62
 139:../proyecto.c **** 			{
 140:../proyecto.c **** 				kpPressedMsg.flag = FALSE;              /* Marca el mensaje como leido */
 2503              		.loc 1 140 0
 2504 0304 943B9FE5 		ldr	r3, .L69+32
 2505 0308 0020A0E3 		mov	r2, #0
 2506 030c 0020C3E5 		strb	r2, [r3, #0]
 141:../proyecto.c **** 				coinsMoverMsg.accept = FALSE;              /* Envia un mensaje para que la moneda se devuelva *
 2507              		.loc 1 141 0
 2508 0310 743B9FE5 		ldr	r3, .L69+12
 2509 0314 0020A0E3 		mov	r2, #0
 2510 0318 0120C3E5 		strb	r2, [r3, #1]
 142:../proyecto.c **** 				coinsMoverMsg.flag   = TRUE;
 2511              		.loc 1 142 0
 2512 031c 683B9FE5 		ldr	r3, .L69+12
 2513 0320 0120A0E3 		mov	r2, #1
 2514 0324 0020C3E5 		strb	r2, [r3, #0]
 143:../proyecto.c **** 			}
 144:../proyecto.c **** 			break;
 2515              		.loc 1 144 0
 2516 0328 F20300EA 		b	.L5
 2517              	.L11:
 145:../proyecto.c ****         case waiting:                        /* Estado en donde rechaza monedas y espera la pulsaci
 146:../proyecto.c ****             if( tsPressedMsg.flag && !tsPressedMsg.langFlag )                    /* Chequea si se h
 2518              		.loc 1 146 0
 2519 032c 703B9FE5 		ldr	r3, .L69+36
 2520 0330 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2521 0334 000053E3 		cmp	r3, #0
 2522 0338 1100000A 		beq	.L24
 2523              		.loc 1 146 0 is_stmt 0 discriminator 1
 2524 033c 603B9FE5 		ldr	r3, .L69+36
 2525 0340 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2526 0344 000053E3 		cmp	r3, #0
 2527 0348 0D00001A 		bne	.L24
 147:../proyecto.c ****             {
 148:../proyecto.c ****                 tsPressedMsg.flag = FALSE;                 /* Marca el mensaje como leido */
 2528              		.loc 1 148 0 is_stmt 1
 2529 034c 503B9FE5 		ldr	r3, .L69+36
 2530 0350 0020A0E3 		mov	r2, #0
 2531 0354 0020C3E5 		strb	r2, [r3, #0]
 149:../proyecto.c ****                 plotState(selection,placeSelected);
 2532              		.loc 1 149 0
 2533 0358 383B9FE5 		ldr	r3, .L69+24
 2534 035c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2535 0360 0200A0E3 		mov	r0, #2
 2536 0364 0310A0E1 		mov	r1, r3
 2537 0368 FEFFFFEB 		bl	plotState
 150:../proyecto.c ****                 state = selection;                  /* Salta al estado selection ... */
 2538              		.loc 1 150 0
 2539 036c 383B9FE5 		ldr	r3, .L69+44
 2540 0370 0220A0E3 		mov	r2, #2
 2541 0374 0020C3E5 		strb	r2, [r3, #0]
 151:../proyecto.c ****                 ticks = 1000;                               /* ... en el que debera permanecer un m
 2542              		.loc 1 151 0
 2543 0378 1C3B9FE5 		ldr	r3, .L69+28
 2544 037c FA2FA0E3 		mov	r2, #1000
 2545 0380 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 2546              	.L24:
 152:../proyecto.c ****             }
 153:../proyecto.c ****             if ( tsPressedMsg.langFlag )
 2547              		.loc 1 153 0
 2548 0384 183B9FE5 		ldr	r3, .L69+36
 2549 0388 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2550 038c 000053E3 		cmp	r3, #0
 2551 0390 1000000A 		beq	.L25
 154:../proyecto.c **** 			{
 155:../proyecto.c **** 				tsPressedMsg.flag = FALSE;
 2552              		.loc 1 155 0
 2553 0394 083B9FE5 		ldr	r3, .L69+36
 2554 0398 0020A0E3 		mov	r2, #0
 2555 039c 0020C3E5 		strb	r2, [r3, #0]
 156:../proyecto.c **** 				tsPressedMsg.langFlag = FALSE;
 2556              		.loc 1 156 0
 2557 03a0 FC3A9FE5 		ldr	r3, .L69+36
 2558 03a4 0020A0E3 		mov	r2, #0
 2559 03a8 0120C3E5 		strb	r2, [r3, #1]
 157:../proyecto.c **** 				prevState = waiting;
 2560              		.loc 1 157 0
 2561 03ac F43A9FE5 		ldr	r3, .L69+40
 2562 03b0 0120A0E3 		mov	r2, #1
 2563 03b4 0020C3E5 		strb	r2, [r3, #0]
 158:../proyecto.c **** 				plotState(language, placeSelected);
 2564              		.loc 1 158 0
 2565 03b8 D83A9FE5 		ldr	r3, .L69+24
 2566 03bc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2567 03c0 0000A0E3 		mov	r0, #0
 2568 03c4 0310A0E1 		mov	r1, r3
 2569 03c8 FEFFFFEB 		bl	plotState
 159:../proyecto.c **** 				state = language;
 2570              		.loc 1 159 0
 2571 03cc D83A9FE5 		ldr	r3, .L69+44
 2572 03d0 0020A0E3 		mov	r2, #0
 2573 03d4 0020C3E5 		strb	r2, [r3, #0]
 2574              	.L25:
 160:../proyecto.c **** 			}
 161:../proyecto.c ****             if( kpPressedMsg.flag )                /* Chequea si se ha introducido una moneda (mens
 2575              		.loc 1 161 0
 2576 03d8 C03A9FE5 		ldr	r3, .L69+32
 2577 03dc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2578 03e0 000053E3 		cmp	r3, #0
 2579 03e4 B803000A 		beq	.L63
 162:../proyecto.c ****             {
 163:../proyecto.c ****                 kpPressedMsg.flag = FALSE;              /* Marca el mensaje como leido */
 2580              		.loc 1 163 0
 2581 03e8 B03A9FE5 		ldr	r3, .L69+32
 2582 03ec 0020A0E3 		mov	r2, #0
 2583 03f0 0020C3E5 		strb	r2, [r3, #0]
 164:../proyecto.c ****                 coinsMoverMsg.accept = FALSE;              /* Envia un mensaje para que la moneda s
 2584              		.loc 1 164 0
 2585 03f4 903A9FE5 		ldr	r3, .L69+12
 2586 03f8 0020A0E3 		mov	r2, #0
 2587 03fc 0120C3E5 		strb	r2, [r3, #1]
 165:../proyecto.c ****                 coinsMoverMsg.flag   = TRUE;
 2588              		.loc 1 165 0
 2589 0400 843A9FE5 		ldr	r3, .L69+12
 2590 0404 0120A0E3 		mov	r2, #1
 2591 0408 0020C3E5 		strb	r2, [r3, #0]
 166:../proyecto.c ****                 ticks = 500;
 2592              		.loc 1 166 0
 2593 040c 883A9FE5 		ldr	r3, .L69+28
 2594 0410 7D2FA0E3 		mov	r2, #500
 2595 0414 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 167:../proyecto.c ****             }    
 168:../proyecto.c ****             break;
 2596              		.loc 1 168 0
 2597 0418 B60300EA 		b	.L5
 2598              	.L12:
 169:../proyecto.c ****         case selection:
 170:../proyecto.c ****         	if( !(--ticks) )                           /* Decrementa ticks y chequea si ha permanecido
 2599              		.loc 1 170 0
 2600 041c 783A9FE5 		ldr	r3, .L69+28
 2601 0420 B030D3E1 		ldrh	r3, [r3, #0]
 2602 0424 013043E2 		sub	r3, r3, #1
 2603 0428 0338A0E1 		mov	r3, r3, asl #16
 2604 042c 2328A0E1 		mov	r2, r3, lsr #16
 2605 0430 643A9FE5 		ldr	r3, .L69+28
 2606 0434 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 2607 0438 5C3A9FE5 		ldr	r3, .L69+28
 2608 043c B030D3E1 		ldrh	r3, [r3, #0]
 2609 0440 000053E3 		cmp	r3, #0
 2610 0444 0700001A 		bne	.L27
 171:../proyecto.c **** 			{
 172:../proyecto.c **** 				plotState(waiting,placeSelected);                      /* Visualiza pantalla inicial */
 2611              		.loc 1 172 0
 2612 0448 483A9FE5 		ldr	r3, .L69+24
 2613 044c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2614 0450 0100A0E3 		mov	r0, #1
 2615 0454 0310A0E1 		mov	r1, r3
 2616 0458 FEFFFFEB 		bl	plotState
 173:../proyecto.c **** 				state = waiting;                      /* Salta al estado demo_waiting */
 2617              		.loc 1 173 0
 2618 045c 483A9FE5 		ldr	r3, .L69+44
 2619 0460 0120A0E3 		mov	r2, #1
 2620 0464 0020C3E5 		strb	r2, [r3, #0]
 2621              	.L27:
 174:../proyecto.c **** 			}
 175:../proyecto.c ****         	if( kpPressedMsg.flag )                /* Chequea si se ha introducido una moneda (mensaje
 2622              		.loc 1 175 0
 2623 0468 303A9FE5 		ldr	r3, .L69+32
 2624 046c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2625 0470 000053E3 		cmp	r3, #0
 2626 0474 0800000A 		beq	.L28
 176:../proyecto.c **** 			{
 177:../proyecto.c **** 				kpPressedMsg.flag = FALSE;              /* Marca el mensaje como leido */
 2627              		.loc 1 177 0
 2628 0478 203A9FE5 		ldr	r3, .L69+32
 2629 047c 0020A0E3 		mov	r2, #0
 2630 0480 0020C3E5 		strb	r2, [r3, #0]
 178:../proyecto.c **** 				coinsMoverMsg.accept = FALSE;              /* Envia un mensaje para que la moneda se devuelva *
 2631              		.loc 1 178 0
 2632 0484 003A9FE5 		ldr	r3, .L69+12
 2633 0488 0020A0E3 		mov	r2, #0
 2634 048c 0120C3E5 		strb	r2, [r3, #1]
 179:../proyecto.c **** 				coinsMoverMsg.flag   = TRUE;
 2635              		.loc 1 179 0
 2636 0490 F4399FE5 		ldr	r3, .L69+12
 2637 0494 0120A0E3 		mov	r2, #1
 2638 0498 0020C3E5 		strb	r2, [r3, #0]
 2639              	.L28:
 180:../proyecto.c **** 			}
 181:../proyecto.c ****         	if( tsPressedMsg.flag && !tsPressedMsg.langFlag )
 2640              		.loc 1 181 0
 2641 049c 003A9FE5 		ldr	r3, .L69+36
 2642 04a0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2643 04a4 000053E3 		cmp	r3, #0
 2644 04a8 4F00000A 		beq	.L29
 2645              		.loc 1 181 0 is_stmt 0 discriminator 1
 2646 04ac F0399FE5 		ldr	r3, .L69+36
 2647 04b0 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2648 04b4 000053E3 		cmp	r3, #0
 2649 04b8 4B00001A 		bne	.L29
 182:../proyecto.c ****         	{
 183:../proyecto.c ****         		tsPressedMsg.flag = FALSE;                 /* Marca el mensaje como leido */
 2650              		.loc 1 183 0 is_stmt 1
 2651 04bc E0399FE5 		ldr	r3, .L69+36
 2652 04c0 0020A0E3 		mov	r2, #0
 2653 04c4 0020C3E5 		strb	r2, [r3, #0]
 184:../proyecto.c **** 				if(parking[(placeSelected = selectorTask())].free) //si se selecciona una plaza disponible vamo
 2654              		.loc 1 184 0
 2655 04c8 FEFFFFEB 		bl	selectorTask
 2656 04cc 0030A0E1 		mov	r3, r0
 2657 04d0 FF2003E2 		and	r2, r3, #255
 2658 04d4 BC399FE5 		ldr	r3, .L69+24
 2659 04d8 0020C3E5 		strb	r2, [r3, #0]
 2660 04dc B4399FE5 		ldr	r3, .L69+24
 2661 04e0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2662 04e4 0320A0E1 		mov	r2, r3
 2663 04e8 A4199FE5 		ldr	r1, .L69+20
 2664 04ec 0130A0E3 		mov	r3, #1
 2665 04f0 0222A0E1 		mov	r2, r2, asl #4
 2666 04f4 022081E0 		add	r2, r1, r2
 2667 04f8 033082E0 		add	r3, r2, r3
 2668 04fc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2669 0500 000053E3 		cmp	r3, #0
 2670 0504 1D00000A 		beq	.L30
 185:../proyecto.c **** 				{
 186:../proyecto.c **** 					rtc_gettime(&og_deadline);
 2671              		.loc 1 186 0
 2672 0508 74099FE5 		ldr	r0, .L69+4
 2673 050c FEFFFFEB 		bl	rtc_gettime
 187:../proyecto.c **** 					parking[placeSelected].deadline = og_deadline;	//establecer la fecha inicial de la plaza
 2674              		.loc 1 187 0
 2675 0510 80399FE5 		ldr	r3, .L69+24
 2676 0514 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2677 0518 0320A0E1 		mov	r2, r3
 2678 051c 70199FE5 		ldr	r1, .L69+20
 2679 0520 0230A0E3 		mov	r3, #2
 2680 0524 0222A0E1 		mov	r2, r2, asl #4
 2681 0528 022081E0 		add	r2, r1, r2
 2682 052c 032082E0 		add	r2, r2, r3
 2683 0530 4C399FE5 		ldr	r3, .L69+4
 2684 0534 0210A0E1 		mov	r1, r2
 2685 0538 0320A0E1 		mov	r2, r3
 2686 053c 0730A0E3 		mov	r3, #7
 2687 0540 0100A0E1 		mov	r0, r1
 2688 0544 0210A0E1 		mov	r1, r2
 2689 0548 0320A0E1 		mov	r2, r3
 2690 054c FEFFFFEB 		bl	memcpy
 188:../proyecto.c **** 					plotState(payment,placeSelected);
 2691              		.loc 1 188 0
 2692 0550 40399FE5 		ldr	r3, .L69+24
 2693 0554 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2694 0558 0300A0E3 		mov	r0, #3
 2695 055c 0310A0E1 		mov	r1, r3
 2696 0560 FEFFFFEB 		bl	plotState
 189:../proyecto.c **** 					state = payment;
 2697              		.loc 1 189 0
 2698 0564 40399FE5 		ldr	r3, .L69+44
 2699 0568 0320A0E3 		mov	r2, #3
 2700 056c 0020C3E5 		strb	r2, [r3, #0]
 190:../proyecto.c **** 					ticks = 500;
 2701              		.loc 1 190 0
 2702 0570 24399FE5 		ldr	r3, .L69+28
 2703 0574 7D2FA0E3 		mov	r2, #500
 2704 0578 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 2705 057c 1A0000EA 		b	.L29
 2706              	.L30:
 191:../proyecto.c **** 
 192:../proyecto.c **** 				} else if(placeSelected != 10){ // si no vamos a la pantalla de error
 2707              		.loc 1 192 0
 2708 0580 10399FE5 		ldr	r3, .L69+24
 2709 0584 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2710 0588 0A0053E3 		cmp	r3, #10
 2711 058c 1500000A 		beq	.L31
 193:../proyecto.c **** 
 194:../proyecto.c **** 					parking[placeSelected].error = SELEC_ERROR;
 2712              		.loc 1 194 0
 2713 0590 00399FE5 		ldr	r3, .L69+24
 2714 0594 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2715 0598 0320A0E1 		mov	r2, r3
 2716 059c F0189FE5 		ldr	r1, .L69+20
 2717 05a0 0830A0E3 		mov	r3, #8
 2718 05a4 0222A0E1 		mov	r2, r2, asl #4
 2719 05a8 022081E0 		add	r2, r1, r2
 2720 05ac 033082E0 		add	r3, r2, r3
 2721 05b0 0320A0E3 		mov	r2, #3
 2722 05b4 0620C3E5 		strb	r2, [r3, #6]
 195:../proyecto.c **** 					plotState(error,placeSelected);
 2723              		.loc 1 195 0
 2724 05b8 D8389FE5 		ldr	r3, .L69+24
 2725 05bc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2726 05c0 0600A0E3 		mov	r0, #6
 2727 05c4 0310A0E1 		mov	r1, r3
 2728 05c8 FEFFFFEB 		bl	plotState
 196:../proyecto.c **** 					state = error;
 2729              		.loc 1 196 0
 2730 05cc D8389FE5 		ldr	r3, .L69+44
 2731 05d0 0620A0E3 		mov	r2, #6
 2732 05d4 0020C3E5 		strb	r2, [r3, #0]
 197:../proyecto.c **** 					ticks = 300;
 2733              		.loc 1 197 0
 2734 05d8 BC389FE5 		ldr	r3, .L69+28
 2735 05dc 4B2FA0E3 		mov	r2, #300
 2736 05e0 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 2737 05e4 000000EA 		b	.L29
 2738              	.L31:
 198:../proyecto.c **** 				} else {
 199:../proyecto.c **** 					plotSelEnc();
 2739              		.loc 1 199 0
 2740 05e8 FEFFFFEB 		bl	plotSelEnc
 2741              	.L29:
 200:../proyecto.c **** 				}
 201:../proyecto.c ****         	}
 202:../proyecto.c ****         	if ( tsPressedMsg.langFlag )
 2742              		.loc 1 202 0
 2743 05ec B0389FE5 		ldr	r3, .L69+36
 2744 05f0 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2745 05f4 000053E3 		cmp	r3, #0
 2746 05f8 3503000A 		beq	.L64
 203:../proyecto.c **** 			{
 204:../proyecto.c **** 				tsPressedMsg.flag = FALSE;
 2747              		.loc 1 204 0
 2748 05fc A0389FE5 		ldr	r3, .L69+36
 2749 0600 0020A0E3 		mov	r2, #0
 2750 0604 0020C3E5 		strb	r2, [r3, #0]
 205:../proyecto.c **** 				tsPressedMsg.langFlag = FALSE;
 2751              		.loc 1 205 0
 2752 0608 94389FE5 		ldr	r3, .L69+36
 2753 060c 0020A0E3 		mov	r2, #0
 2754 0610 0120C3E5 		strb	r2, [r3, #1]
 206:../proyecto.c **** 				prevState = state;
 2755              		.loc 1 206 0
 2756 0614 90389FE5 		ldr	r3, .L69+44
 2757 0618 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2758 061c 84389FE5 		ldr	r3, .L69+40
 2759 0620 0020C3E5 		strb	r2, [r3, #0]
 207:../proyecto.c **** 				plotLangSelScreen();
 2760              		.loc 1 207 0
 2761 0624 FEFFFFEB 		bl	plotLangSelScreen
 208:../proyecto.c **** 				state = language;
 2762              		.loc 1 208 0
 2763 0628 7C389FE5 		ldr	r3, .L69+44
 2764 062c 0020A0E3 		mov	r2, #0
 2765 0630 0020C3E5 		strb	r2, [r3, #0]
 209:../proyecto.c **** 				ticks = 500;
 2766              		.loc 1 209 0
 2767 0634 60389FE5 		ldr	r3, .L69+28
 2768 0638 7D2FA0E3 		mov	r2, #500
 2769 063c B020C3E1 		strh	r2, [r3, #0]	@ movhi
 210:../proyecto.c **** 			}
 211:../proyecto.c ****         	break;
 2770              		.loc 1 211 0
 2771 0640 2C0300EA 		b	.L5
 2772              	.L13:
 212:../proyecto.c ****         case payment:
 213:../proyecto.c ****         	if( !(--ticks) )                           /* Decrementa ticks y chequea si ha permanecido
 2773              		.loc 1 213 0
 2774 0644 50389FE5 		ldr	r3, .L69+28
 2775 0648 B030D3E1 		ldrh	r3, [r3, #0]
 2776 064c 013043E2 		sub	r3, r3, #1
 2777 0650 0338A0E1 		mov	r3, r3, asl #16
 2778 0654 2328A0E1 		mov	r2, r3, lsr #16
 2779 0658 3C389FE5 		ldr	r3, .L69+28
 2780 065c B020C3E1 		strh	r2, [r3, #0]	@ movhi
 2781 0660 34389FE5 		ldr	r3, .L69+28
 2782 0664 B030D3E1 		ldrh	r3, [r3, #0]
 2783 0668 000053E3 		cmp	r3, #0
 2784 066c 1700001A 		bne	.L33
 214:../proyecto.c **** 			{
 215:../proyecto.c ****         		plotState(waiting,placeSelected);                         /* Visualiza pantalla inicial *
 2785              		.loc 1 215 0
 2786 0670 20389FE5 		ldr	r3, .L69+24
 2787 0674 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2788 0678 0100A0E3 		mov	r0, #1
 2789 067c 0310A0E1 		mov	r1, r3
 2790 0680 FEFFFFEB 		bl	plotState
 216:../proyecto.c **** 				state = waiting;                      /* Salta al estado demo_waiting */
 2791              		.loc 1 216 0
 2792 0684 20389FE5 		ldr	r3, .L69+44
 2793 0688 0120A0E3 		mov	r2, #1
 2794 068c 0020C3E5 		strb	r2, [r3, #0]
 217:../proyecto.c **** 				parking[placeSelected].credit=0;
 2795              		.loc 1 217 0
 2796 0690 00389FE5 		ldr	r3, .L69+24
 2797 0694 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2798 0698 0320A0E1 		mov	r2, r3
 2799 069c F0179FE5 		ldr	r1, .L69+20
 2800 06a0 0830A0E3 		mov	r3, #8
 2801 06a4 0222A0E1 		mov	r2, r2, asl #4
 2802 06a8 022081E0 		add	r2, r1, r2
 2803 06ac 033082E0 		add	r3, r2, r3
 2804 06b0 0020A0E3 		mov	r2, #0
 2805 06b4 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 218:../proyecto.c **** 				coinsMoverMsg.accept = FALSE;              /* Envia un mensaje para que la moneda se devuelva *
 2806              		.loc 1 218 0
 2807 06b8 CC379FE5 		ldr	r3, .L69+12
 2808 06bc 0020A0E3 		mov	r2, #0
 2809 06c0 0120C3E5 		strb	r2, [r3, #1]
 219:../proyecto.c **** 				coinsMoverMsg.flag   = TRUE;
 2810              		.loc 1 219 0
 2811 06c4 C0379FE5 		ldr	r3, .L69+12
 2812 06c8 0120A0E3 		mov	r2, #1
 2813 06cc 0020C3E5 		strb	r2, [r3, #0]
 2814              	.L33:
 220:../proyecto.c **** 			}
 221:../proyecto.c ****         	if( kpPressedMsg.flag )                /* Chequea si se ha introducido una moneda (mensaje
 2815              		.loc 1 221 0
 2816 06d0 C8379FE5 		ldr	r3, .L69+32
 2817 06d4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2818 06d8 000053E3 		cmp	r3, #0
 2819 06dc 8600000A 		beq	.L34
 222:../proyecto.c **** 			{
 223:../proyecto.c **** 				kpPressedMsg.flag   = FALSE;           /* Marca el mensaje como leido */
 2820              		.loc 1 223 0
 2821 06e0 B8379FE5 		ldr	r3, .L69+32
 2822 06e4 0020A0E3 		mov	r2, #0
 2823 06e8 0020C3E5 		strb	r2, [r3, #0]
 224:../proyecto.c **** 				parking[placeSelected].credit += kpPressedMsg.cents;          /* Incrementa el saldo */
 2824              		.loc 1 224 0
 2825 06ec A4379FE5 		ldr	r3, .L69+24
 2826 06f0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2827 06f4 0310A0E1 		mov	r1, r3
 2828 06f8 98379FE5 		ldr	r3, .L69+24
 2829 06fc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2830 0700 0320A0E1 		mov	r2, r3
 2831 0704 88079FE5 		ldr	r0, .L69+20
 2832 0708 0830A0E3 		mov	r3, #8
 2833 070c 0222A0E1 		mov	r2, r2, asl #4
 2834 0710 022080E0 		add	r2, r0, r2
 2835 0714 033082E0 		add	r3, r2, r3
 2836 0718 B420D3E1 		ldrh	r2, [r3, #4]
 2837 071c 7C379FE5 		ldr	r3, .L69+32
 2838 0720 0230D3E5 		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2839 0724 033082E0 		add	r3, r2, r3
 2840 0728 0338A0E1 		mov	r3, r3, asl #16
 2841 072c 2328A0E1 		mov	r2, r3, lsr #16
 2842 0730 5C079FE5 		ldr	r0, .L69+20
 2843 0734 0830A0E3 		mov	r3, #8
 2844 0738 0112A0E1 		mov	r1, r1, asl #4
 2845 073c 011080E0 		add	r1, r0, r1
 2846 0740 033081E0 		add	r3, r1, r3
 2847 0744 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 225:../proyecto.c **** 				ticks = 500;                              /* Restaura el tiempo maximo sin actividad que perman
 2848              		.loc 1 225 0
 2849 0748 4C379FE5 		ldr	r3, .L69+28
 2850 074c 7D2FA0E3 		mov	r2, #500
 2851 0750 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 226:../proyecto.c **** 				if(parking[placeSelected].credit > 240){
 2852              		.loc 1 226 0
 2853 0754 3C379FE5 		ldr	r3, .L69+24
 2854 0758 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2855 075c 0320A0E1 		mov	r2, r3
 2856 0760 2C179FE5 		ldr	r1, .L69+20
 2857 0764 0830A0E3 		mov	r3, #8
 2858 0768 0222A0E1 		mov	r2, r2, asl #4
 2859 076c 022081E0 		add	r2, r1, r2
 2860 0770 033082E0 		add	r3, r2, r3
 2861 0774 B430D3E1 		ldrh	r3, [r3, #4]
 2862 0778 F00053E3 		cmp	r3, #240
 2863 077c 2100009A 		bls	.L35
 2864              	.LBB3:
 227:../proyecto.c **** 					uint16 excess;
 228:../proyecto.c **** 					excess = parking[placeSelected].credit - 240;
 2865              		.loc 1 228 0
 2866 0780 10379FE5 		ldr	r3, .L69+24
 2867 0784 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2868 0788 0320A0E1 		mov	r2, r3
 2869 078c 00179FE5 		ldr	r1, .L69+20
 2870 0790 0830A0E3 		mov	r3, #8
 2871 0794 0222A0E1 		mov	r2, r2, asl #4
 2872 0798 022081E0 		add	r2, r1, r2
 2873 079c 033082E0 		add	r3, r2, r3
 2874 07a0 B430D3E1 		ldrh	r3, [r3, #4]
 2875 07a4 F03043E2 		sub	r3, r3, #240
 2876 07a8 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 229:../proyecto.c **** 					parking[placeSelected].credit = 240;
 2877              		.loc 1 229 0
 2878 07ac E4369FE5 		ldr	r3, .L69+24
 2879 07b0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2880 07b4 0320A0E1 		mov	r2, r3
 2881 07b8 D4169FE5 		ldr	r1, .L69+20
 2882 07bc 0830A0E3 		mov	r3, #8
 2883 07c0 0222A0E1 		mov	r2, r2, asl #4
 2884 07c4 022081E0 		add	r2, r1, r2
 2885 07c8 033082E0 		add	r3, r2, r3
 2886 07cc F020A0E3 		mov	r2, #240
 2887 07d0 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 230:../proyecto.c **** 					plotExcessReturn(excess);
 2888              		.loc 1 230 0
 2889 07d4 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 2890 07d8 FF3003E2 		and	r3, r3, #255
 2891 07dc 033CA0E1 		mov	r3, r3, asl #24
 2892 07e0 433CA0E1 		mov	r3, r3, asr #24
 2893 07e4 0300A0E1 		mov	r0, r3
 2894 07e8 FEFFFFEB 		bl	plotExcessReturn
 231:../proyecto.c **** 					coinsMoverMsg.accept = FALSE;              /* Envia un mensaje para que la moneda se devuelva 
 2895              		.loc 1 231 0
 2896 07ec 98369FE5 		ldr	r3, .L69+12
 2897 07f0 0020A0E3 		mov	r2, #0
 2898 07f4 0120C3E5 		strb	r2, [r3, #1]
 232:../proyecto.c **** 					coinsMoverMsg.flag   = TRUE;
 2899              		.loc 1 232 0
 2900 07f8 8C369FE5 		ldr	r3, .L69+12
 2901 07fc 0120A0E3 		mov	r2, #1
 2902 0800 0020C3E5 		strb	r2, [r3, #0]
 2903 0804 050000EA 		b	.L36
 2904              	.L35:
 2905              	.LBE3:
 233:../proyecto.c **** 				} else {
 234:../proyecto.c **** 					coinsMoverMsg.accept = TRUE;              /* Envia un mensaje para que las monedas se acepten 
 2906              		.loc 1 234 0
 2907 0808 7C369FE5 		ldr	r3, .L69+12
 2908 080c 0120A0E3 		mov	r2, #1
 2909 0810 0120C3E5 		strb	r2, [r3, #1]
 235:../proyecto.c **** 					coinsMoverMsg.flag   = TRUE;
 2910              		.loc 1 235 0
 2911 0814 70369FE5 		ldr	r3, .L69+12
 2912 0818 0120A0E3 		mov	r2, #1
 2913 081c 0020C3E5 		strb	r2, [r3, #0]
 2914              	.L36:
 236:../proyecto.c **** 				}
 237:../proyecto.c **** 				updateDeadline(parking[placeSelected].credit,&parking[placeSelected].deadline); // Actualiza la
 2915              		.loc 1 237 0
 2916 0820 70369FE5 		ldr	r3, .L69+24
 2917 0824 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2918 0828 0320A0E1 		mov	r2, r3
 2919 082c 60169FE5 		ldr	r1, .L69+20
 2920 0830 0830A0E3 		mov	r3, #8
 2921 0834 0222A0E1 		mov	r2, r2, asl #4
 2922 0838 022081E0 		add	r2, r1, r2
 2923 083c 033082E0 		add	r3, r2, r3
 2924 0840 B420D3E1 		ldrh	r2, [r3, #4]
 2925 0844 4C369FE5 		ldr	r3, .L69+24
 2926 0848 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2927 084c 0312A0E1 		mov	r1, r3, asl #4
 2928 0850 3C369FE5 		ldr	r3, .L69+20
 2929 0854 033081E0 		add	r3, r1, r3
 2930 0858 023083E2 		add	r3, r3, #2
 2931 085c 0200A0E1 		mov	r0, r2
 2932 0860 0310A0E1 		mov	r1, r3
 2933 0864 FEFFFFEB 		bl	updateDeadline
 238:../proyecto.c **** 				plotPayCredit(parking[placeSelected].credit);
 2934              		.loc 1 238 0
 2935 0868 28369FE5 		ldr	r3, .L69+24
 2936 086c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2937 0870 0320A0E1 		mov	r2, r3
 2938 0874 18169FE5 		ldr	r1, .L69+20
 2939 0878 0830A0E3 		mov	r3, #8
 2940 087c 0222A0E1 		mov	r2, r2, asl #4
 2941 0880 022081E0 		add	r2, r1, r2
 2942 0884 033082E0 		add	r3, r2, r3
 2943 0888 B430D3E1 		ldrh	r3, [r3, #4]
 2944 088c FF3003E2 		and	r3, r3, #255
 2945 0890 0300A0E1 		mov	r0, r3
 2946 0894 FEFFFFEB 		bl	plotPayCredit
 239:../proyecto.c **** 				plotPayDeadline(parking[placeSelected].deadline);
 2947              		.loc 1 239 0
 2948 0898 F8359FE5 		ldr	r3, .L69+24
 2949 089c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2950 08a0 0320A0E1 		mov	r2, r3
 2951 08a4 E8159FE5 		ldr	r1, .L69+20
 2952 08a8 0230A0E3 		mov	r3, #2
 2953 08ac 0222A0E1 		mov	r2, r2, asl #4
 2954 08b0 022081E0 		add	r2, r1, r2
 2955 08b4 033082E0 		add	r3, r2, r3
 2956 08b8 B020D3E1 		ldrh	r2, [r3, #0]
 2957 08bc B210D3E1 		ldrh	r1, [r3, #2]
 2958 08c0 0118A0E1 		mov	r1, r1, asl #16
 2959 08c4 021081E1 		orr	r1, r1, r2
 2960 08c8 0020A0E3 		mov	r2, #0
 2961 08cc 0120A0E1 		mov	r2, r1
 2962 08d0 B410D3E1 		ldrh	r1, [r3, #4]
 2963 08d4 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 2964 08d8 0338A0E1 		mov	r3, r3, asl #16
 2965 08dc 011083E1 		orr	r1, r3, r1
 2966 08e0 0030A0E3 		mov	r3, #0
 2967 08e4 FF14C1E3 		bic	r1, r1, #-16777216
 2968 08e8 FF3403E2 		and	r3, r3, #-16777216
 2969 08ec 033081E1 		orr	r3, r1, r3
 2970 08f0 0200A0E1 		mov	r0, r2
 2971 08f4 0310A0E1 		mov	r1, r3
 2972 08f8 FEFFFFEB 		bl	plotPayDeadline
 2973              	.L34:
 240:../proyecto.c **** 
 241:../proyecto.c **** 			}
 242:../proyecto.c ****         	if( tsPressedMsg.flag && !tsPressedMsg.langFlag )                    /* Chequea si se ha p
 2974              		.loc 1 242 0
 2975 08fc A0359FE5 		ldr	r3, .L69+36
 2976 0900 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2977 0904 000053E3 		cmp	r3, #0
 2978 0908 4900000A 		beq	.L37
 2979              		.loc 1 242 0 is_stmt 0 discriminator 1
 2980 090c 90359FE5 		ldr	r3, .L69+36
 2981 0910 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2982 0914 000053E3 		cmp	r3, #0
 2983 0918 4500001A 		bne	.L37
 243:../proyecto.c **** 			{
 244:../proyecto.c **** 				tsPressedMsg.flag = FALSE;                /* Marca el mensaje como leido */
 2984              		.loc 1 244 0 is_stmt 1
 2985 091c 80359FE5 		ldr	r3, .L69+36
 2986 0920 0020A0E3 		mov	r2, #0
 2987 0924 0020C3E5 		strb	r2, [r3, #0]
 245:../proyecto.c **** 				if(parking[placeSelected].credit < 20){
 2988              		.loc 1 245 0
 2989 0928 68359FE5 		ldr	r3, .L69+24
 2990 092c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2991 0930 0320A0E1 		mov	r2, r3
 2992 0934 58159FE5 		ldr	r1, .L69+20
 2993 0938 0830A0E3 		mov	r3, #8
 2994 093c 0222A0E1 		mov	r2, r2, asl #4
 2995 0940 022081E0 		add	r2, r1, r2
 2996 0944 033082E0 		add	r3, r2, r3
 2997 0948 B430D3E1 		ldrh	r3, [r3, #4]
 2998 094c 130053E3 		cmp	r3, #19
 2999 0950 1F00008A 		bhi	.L38
 246:../proyecto.c **** 					parking[placeSelected].credit = 0;
 3000              		.loc 1 246 0
 3001 0954 3C359FE5 		ldr	r3, .L69+24
 3002 0958 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3003 095c 0320A0E1 		mov	r2, r3
 3004 0960 2C159FE5 		ldr	r1, .L69+20
 3005 0964 0830A0E3 		mov	r3, #8
 3006 0968 0222A0E1 		mov	r2, r2, asl #4
 3007 096c 022081E0 		add	r2, r1, r2
 3008 0970 033082E0 		add	r3, r2, r3
 3009 0974 0020A0E3 		mov	r2, #0
 3010 0978 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 247:../proyecto.c **** 					parking[placeSelected].error = INSUF_ERROR;
 3011              		.loc 1 247 0
 3012 097c 14359FE5 		ldr	r3, .L69+24
 3013 0980 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3014 0984 0320A0E1 		mov	r2, r3
 3015 0988 04159FE5 		ldr	r1, .L69+20
 3016 098c 0830A0E3 		mov	r3, #8
 3017 0990 0222A0E1 		mov	r2, r2, asl #4
 3018 0994 022081E0 		add	r2, r1, r2
 3019 0998 033082E0 		add	r3, r2, r3
 3020 099c 0220A0E3 		mov	r2, #2
 3021 09a0 0620C3E5 		strb	r2, [r3, #6]
 248:../proyecto.c **** 					plotState(error,placeSelected);
 3022              		.loc 1 248 0
 3023 09a4 EC349FE5 		ldr	r3, .L69+24
 3024 09a8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3025 09ac 0600A0E3 		mov	r0, #6
 3026 09b0 0310A0E1 		mov	r1, r3
 3027 09b4 FEFFFFEB 		bl	plotState
 249:../proyecto.c **** 					state = error;
 3028              		.loc 1 249 0
 3029 09b8 EC349FE5 		ldr	r3, .L69+44
 3030 09bc 0620A0E3 		mov	r2, #6
 3031 09c0 0020C3E5 		strb	r2, [r3, #0]
 250:../proyecto.c **** 					ticks = 300;
 3032              		.loc 1 250 0
 3033 09c4 D0349FE5 		ldr	r3, .L69+28
 3034 09c8 4B2FA0E3 		mov	r2, #300
 3035 09cc B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3036 09d0 170000EA 		b	.L37
 3037              	.L38:
 251:../proyecto.c **** 				} else {
 252:../proyecto.c **** 					plotState(licPlateInput,placeSelected);
 3038              		.loc 1 252 0
 3039 09d4 BC349FE5 		ldr	r3, .L69+24
 3040 09d8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3041 09dc 0400A0E3 		mov	r0, #4
 3042 09e0 0310A0E1 		mov	r1, r3
 3043 09e4 FEFFFFEB 		bl	plotState
 253:../proyecto.c **** 					state = licPlateInput;
 3044              		.loc 1 253 0
 3045 09e8 BC349FE5 		ldr	r3, .L69+44
 3046 09ec 0420A0E3 		mov	r2, #4
 3047 09f0 0020C3E5 		strb	r2, [r3, #0]
 254:../proyecto.c **** 					kpPressedMsg.licPlateInput = TRUE;
 3048              		.loc 1 254 0
 3049 09f4 A4349FE5 		ldr	r3, .L69+32
 3050 09f8 0120A0E3 		mov	r2, #1
 3051 09fc 0120C3E5 		strb	r2, [r3, #1]
 255:../proyecto.c **** 					parking[placeSelected].credit = 0;
 3052              		.loc 1 255 0
 3053 0a00 90349FE5 		ldr	r3, .L69+24
 3054 0a04 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3055 0a08 0320A0E1 		mov	r2, r3
 3056 0a0c 80149FE5 		ldr	r1, .L69+20
 3057 0a10 0830A0E3 		mov	r3, #8
 3058 0a14 0222A0E1 		mov	r2, r2, asl #4
 3059 0a18 022081E0 		add	r2, r1, r2
 3060 0a1c 033082E0 		add	r3, r2, r3
 3061 0a20 0020A0E3 		mov	r2, #0
 3062 0a24 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 256:../proyecto.c **** 					ticks = 500;
 3063              		.loc 1 256 0
 3064 0a28 6C349FE5 		ldr	r3, .L69+28
 3065 0a2c 7D2FA0E3 		mov	r2, #500
 3066 0a30 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3067              	.L37:
 257:../proyecto.c **** 				}
 258:../proyecto.c **** 			}
 259:../proyecto.c ****         	if ( tsPressedMsg.langFlag )
 3068              		.loc 1 259 0
 3069 0a34 68349FE5 		ldr	r3, .L69+36
 3070 0a38 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3071 0a3c 000053E3 		cmp	r3, #0
 3072 0a40 2502000A 		beq	.L65
 260:../proyecto.c **** 			{
 261:../proyecto.c **** 				tsPressedMsg.flag = FALSE;
 3073              		.loc 1 261 0
 3074 0a44 58349FE5 		ldr	r3, .L69+36
 3075 0a48 0020A0E3 		mov	r2, #0
 3076 0a4c 0020C3E5 		strb	r2, [r3, #0]
 262:../proyecto.c **** 				tsPressedMsg.langFlag = FALSE;
 3077              		.loc 1 262 0
 3078 0a50 4C349FE5 		ldr	r3, .L69+36
 3079 0a54 0020A0E3 		mov	r2, #0
 3080 0a58 0120C3E5 		strb	r2, [r3, #1]
 263:../proyecto.c **** 				prevState = state;
 3081              		.loc 1 263 0
 3082 0a5c 48349FE5 		ldr	r3, .L69+44
 3083 0a60 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3084 0a64 3C349FE5 		ldr	r3, .L69+40
 3085 0a68 0020C3E5 		strb	r2, [r3, #0]
 264:../proyecto.c **** 				plotState(language,placeSelected);
 3086              		.loc 1 264 0
 3087 0a6c 24349FE5 		ldr	r3, .L69+24
 3088 0a70 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3089 0a74 0000A0E3 		mov	r0, #0
 3090 0a78 0310A0E1 		mov	r1, r3
 3091 0a7c FEFFFFEB 		bl	plotState
 265:../proyecto.c **** 				state = language;
 3092              		.loc 1 265 0
 3093 0a80 24349FE5 		ldr	r3, .L69+44
 3094 0a84 0020A0E3 		mov	r2, #0
 3095 0a88 0020C3E5 		strb	r2, [r3, #0]
 266:../proyecto.c **** 				ticks = 500;
 3096              		.loc 1 266 0
 3097 0a8c 08349FE5 		ldr	r3, .L69+28
 3098 0a90 7D2FA0E3 		mov	r2, #500
 3099 0a94 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 267:../proyecto.c **** 			}
 268:../proyecto.c ****         	break;
 3100              		.loc 1 268 0
 3101 0a98 160200EA 		b	.L5
 3102              	.L14:
 269:../proyecto.c ****         case licPlateInput:
 270:../proyecto.c ****         	kpPressedMsg.licPlateInput = TRUE;							//activa el modo matricula
 3103              		.loc 1 270 0
 3104 0a9c FC339FE5 		ldr	r3, .L69+32
 3105 0aa0 0120A0E3 		mov	r2, #1
 3106 0aa4 0120C3E5 		strb	r2, [r3, #1]
 271:../proyecto.c **** 			if( !(--ticks) )                           /* Decrementa ticks y chequea si ha permanecido en es
 3107              		.loc 1 271 0
 3108 0aa8 EC339FE5 		ldr	r3, .L69+28
 3109 0aac B030D3E1 		ldrh	r3, [r3, #0]
 3110 0ab0 013043E2 		sub	r3, r3, #1
 3111 0ab4 0338A0E1 		mov	r3, r3, asl #16
 3112 0ab8 2328A0E1 		mov	r2, r3, lsr #16
 3113 0abc D8339FE5 		ldr	r3, .L69+28
 3114 0ac0 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3115 0ac4 D0339FE5 		ldr	r3, .L69+28
 3116 0ac8 B030D3E1 		ldrh	r3, [r3, #0]
 3117 0acc 000053E3 		cmp	r3, #0
 3118 0ad0 1A00001A 		bne	.L40
 272:../proyecto.c **** 			{
 273:../proyecto.c **** 				plotState(waiting,placeSelected);                          /* Visualiza pantalla inicial */
 3119              		.loc 1 273 0
 3120 0ad4 BC339FE5 		ldr	r3, .L69+24
 3121 0ad8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3122 0adc 0100A0E3 		mov	r0, #1
 3123 0ae0 0310A0E1 		mov	r1, r3
 3124 0ae4 FEFFFFEB 		bl	plotState
 274:../proyecto.c **** 				parking[placeSelected].credit=0;
 3125              		.loc 1 274 0
 3126 0ae8 A8339FE5 		ldr	r3, .L69+24
 3127 0aec 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3128 0af0 0320A0E1 		mov	r2, r3
 3129 0af4 98139FE5 		ldr	r1, .L69+20
 3130 0af8 0830A0E3 		mov	r3, #8
 3131 0afc 0222A0E1 		mov	r2, r2, asl #4
 3132 0b00 022081E0 		add	r2, r1, r2
 3133 0b04 033082E0 		add	r3, r2, r3
 3134 0b08 0020A0E3 		mov	r2, #0
 3135 0b0c B420C3E1 		strh	r2, [r3, #4]	@ movhi
 275:../proyecto.c **** 				kpPressedMsg.licPlateInput = FALSE;			//limpio el flag del keypress porque voy a cambiar de est
 3136              		.loc 1 275 0
 3137 0b10 88339FE5 		ldr	r3, .L69+32
 3138 0b14 0020A0E3 		mov	r2, #0
 3139 0b18 0120C3E5 		strb	r2, [r3, #1]
 276:../proyecto.c **** 				coinsMoverMsg.accept = FALSE;              /* Envia un mensaje para que la moneda se devuelva *
 3140              		.loc 1 276 0
 3141 0b1c 68339FE5 		ldr	r3, .L69+12
 3142 0b20 0020A0E3 		mov	r2, #0
 3143 0b24 0120C3E5 		strb	r2, [r3, #1]
 277:../proyecto.c **** 				coinsMoverMsg.flag   = TRUE;
 3144              		.loc 1 277 0
 3145 0b28 5C339FE5 		ldr	r3, .L69+12
 3146 0b2c 0120A0E3 		mov	r2, #1
 3147 0b30 0020C3E5 		strb	r2, [r3, #0]
 278:../proyecto.c **** 				state = waiting;                      /* Salta al estado demo_waiting */
 3148              		.loc 1 278 0
 3149 0b34 70339FE5 		ldr	r3, .L69+44
 3150 0b38 0120A0E3 		mov	r2, #1
 3151 0b3c 0020C3E5 		strb	r2, [r3, #0]
 3152              	.L40:
 279:../proyecto.c **** 			}
 280:../proyecto.c **** 			if( kpPressedMsg.flag )                /* Chequea si se ha introducido una moneda (mensaje recib
 3153              		.loc 1 280 0
 3154 0b40 58339FE5 		ldr	r3, .L69+32
 3155 0b44 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3156 0b48 000053E3 		cmp	r3, #0
 3157 0b4c 2000000A 		beq	.L41
 281:../proyecto.c **** 			{
 282:../proyecto.c **** 				kpPressedMsg.flag = FALSE;             						 /* Marca el mensaje como leido */
 3158              		.loc 1 282 0
 3159 0b50 48339FE5 		ldr	r3, .L69+32
 3160 0b54 0020A0E3 		mov	r2, #0
 3161 0b58 0020C3E5 		strb	r2, [r3, #0]
 283:../proyecto.c **** 				if(getLicPlate(&parking[placeSelected].licPlate))
 3162              		.loc 1 283 0
 3163 0b5c 34339FE5 		ldr	r3, .L69+24
 3164 0b60 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3165 0b64 0332A0E1 		mov	r3, r3, asl #4
 3166 0b68 082083E2 		add	r2, r3, #8
 3167 0b6c 20339FE5 		ldr	r3, .L69+20
 3168 0b70 033082E0 		add	r3, r2, r3
 3169 0b74 023083E2 		add	r3, r3, #2
 3170 0b78 0300A0E1 		mov	r0, r3
 3171 0b7c FEFFFFEB 		bl	getLicPlate
 3172 0b80 0030A0E1 		mov	r3, r0
 3173 0b84 000053E3 		cmp	r3, #0
 3174 0b88 0E00000A 		beq	.L42
 284:../proyecto.c **** 				{
 285:../proyecto.c **** 					plotLicPlateUpdate(parking[placeSelected].licPlate);
 3175              		.loc 1 285 0
 3176 0b8c 04339FE5 		ldr	r3, .L69+24
 3177 0b90 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3178 0b94 0320A0E1 		mov	r2, r3
 3179 0b98 F4129FE5 		ldr	r1, .L69+20
 3180 0b9c 0830A0E3 		mov	r3, #8
 3181 0ba0 0222A0E1 		mov	r2, r2, asl #4
 3182 0ba4 022081E0 		add	r2, r1, r2
 3183 0ba8 033082E0 		add	r3, r2, r3
 3184 0bac B230D3E1 		ldrh	r3, [r3, #2]
 3185 0bb0 0338A0E1 		mov	r3, r3, asl #16
 3186 0bb4 2338A0E1 		mov	r3, r3, lsr #16
 3187 0bb8 0338A0E1 		mov	r3, r3, asl #16
 3188 0bbc 4338A0E1 		mov	r3, r3, asr #16
 3189 0bc0 0300A0E1 		mov	r0, r3
 3190 0bc4 FEFFFFEB 		bl	plotLicPlateUpdate
 3191              	.L42:
 286:../proyecto.c **** 				}
 287:../proyecto.c **** 				ticks = 500;
 3192              		.loc 1 287 0
 3193 0bc8 CC329FE5 		ldr	r3, .L69+28
 3194 0bcc 7D2FA0E3 		mov	r2, #500
 3195 0bd0 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3196              	.L41:
 288:../proyecto.c **** 			}
 289:../proyecto.c **** 			if( tsPressedMsg.flag && !tsPressedMsg.langFlag )                    /* Chequea si se ha pulsado
 3197              		.loc 1 289 0
 3198 0bd4 C8329FE5 		ldr	r3, .L69+36
 3199 0bd8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3200 0bdc 000053E3 		cmp	r3, #0
 3201 0be0 3C00000A 		beq	.L43
 3202              		.loc 1 289 0 is_stmt 0 discriminator 1
 3203 0be4 B8329FE5 		ldr	r3, .L69+36
 3204 0be8 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3205 0bec 000053E3 		cmp	r3, #0
 3206 0bf0 3800001A 		bne	.L43
 290:../proyecto.c **** 			{
 291:../proyecto.c **** 				tsPressedMsg.flag = FALSE;                 /* Marca el mensaje como leido */
 3207              		.loc 1 291 0 is_stmt 1
 3208 0bf4 A8329FE5 		ldr	r3, .L69+36
 3209 0bf8 0020A0E3 		mov	r2, #0
 3210 0bfc 0020C3E5 		strb	r2, [r3, #0]
 292:../proyecto.c **** 				parking[placeSelected].free = FALSE;
 3211              		.loc 1 292 0
 3212 0c00 90329FE5 		ldr	r3, .L69+24
 3213 0c04 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3214 0c08 0320A0E1 		mov	r2, r3
 3215 0c0c 80129FE5 		ldr	r1, .L69+20
 3216 0c10 0130A0E3 		mov	r3, #1
 3217 0c14 0222A0E1 		mov	r2, r2, asl #4
 3218 0c18 022081E0 		add	r2, r1, r2
 3219 0c1c 033082E0 		add	r3, r2, r3
 3220 0c20 0020A0E3 		mov	r2, #0
 3221 0c24 0020C3E5 		strb	r2, [r3, #0]
 293:../proyecto.c **** 				ticketMsg.place = parking[placeSelected]; //imprime el ticket
 3222              		.loc 1 293 0
 3223 0c28 68329FE5 		ldr	r3, .L69+24
 3224 0c2c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3225 0c30 50129FE5 		ldr	r1, .L69+8
 3226 0c34 58229FE5 		ldr	r2, .L69+20
 3227 0c38 021081E2 		add	r1, r1, #2
 3228 0c3c 0332A0E1 		mov	r3, r3, asl #4
 3229 0c40 033082E0 		add	r3, r2, r3
 3230 0c44 1020A0E3 		mov	r2, #16
 3231 0c48 0100A0E1 		mov	r0, r1
 3232 0c4c 0310A0E1 		mov	r1, r3
 3233 0c50 FEFFFFEB 		bl	memcpy
 294:../proyecto.c **** 				ticketMsg.flag = TRUE;
 3234              		.loc 1 294 0
 3235 0c54 2C329FE5 		ldr	r3, .L69+8
 3236 0c58 0120A0E3 		mov	r2, #1
 3237 0c5c 0020C3E5 		strb	r2, [r3, #0]
 295:../proyecto.c **** 				kpPressedMsg.licPlateInput = FALSE;			//limpio el flag del keypress porque voy a cambiar de est
 3238              		.loc 1 295 0
 3239 0c60 38329FE5 		ldr	r3, .L69+32
 3240 0c64 0020A0E3 		mov	r2, #0
 3241 0c68 0120C3E5 		strb	r2, [r3, #1]
 296:../proyecto.c **** 				state = success;      		 /* Salta al estado success */
 3242              		.loc 1 296 0
 3243 0c6c 38329FE5 		ldr	r3, .L69+44
 3244 0c70 0520A0E3 		mov	r2, #5
 3245 0c74 0020C3E5 		strb	r2, [r3, #0]
 297:../proyecto.c **** 				ticks = 500;
 3246              		.loc 1 297 0
 3247 0c78 1C329FE5 		ldr	r3, .L69+28
 3248 0c7c 7D2FA0E3 		mov	r2, #500
 3249 0c80 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 298:../proyecto.c **** 
 299:../proyecto.c **** 				if(!parking[placeSelected].licPlate){  //si hay un error en la matricula repite la operacion.
 3250              		.loc 1 299 0
 3251 0c84 0C329FE5 		ldr	r3, .L69+24
 3252 0c88 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3253 0c8c 0320A0E1 		mov	r2, r3
 3254 0c90 FC119FE5 		ldr	r1, .L69+20
 3255 0c94 0830A0E3 		mov	r3, #8
 3256 0c98 0222A0E1 		mov	r2, r2, asl #4
 3257 0c9c 022081E0 		add	r2, r1, r2
 3258 0ca0 033082E0 		add	r3, r2, r3
 3259 0ca4 B230D3E1 		ldrh	r3, [r3, #2]
 3260 0ca8 000053E3 		cmp	r3, #0
 3261 0cac 0400001A 		bne	.L44
 300:../proyecto.c **** 					state = licPlateInput;
 3262              		.loc 1 300 0
 3263 0cb0 F4319FE5 		ldr	r3, .L69+44
 3264 0cb4 0420A0E3 		mov	r2, #4
 3265 0cb8 0020C3E5 		strb	r2, [r3, #0]
 301:../proyecto.c **** 					plotLicPlateEnc();
 3266              		.loc 1 301 0
 3267 0cbc FEFFFFEB 		bl	plotLicPlateEnc
 3268 0cc0 040000EA 		b	.L43
 3269              	.L44:
 302:../proyecto.c **** 				} else
 303:../proyecto.c **** 					plotState(success,placeSelected);  /* Visualiza pantalla de exito */;
 3270              		.loc 1 303 0
 3271 0cc4 CC319FE5 		ldr	r3, .L69+24
 3272 0cc8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3273 0ccc 0500A0E3 		mov	r0, #5
 3274 0cd0 0310A0E1 		mov	r1, r3
 3275 0cd4 FEFFFFEB 		bl	plotState
 3276              	.L43:
 304:../proyecto.c **** 			}
 305:../proyecto.c **** 			if ( tsPressedMsg.langFlag )
 3277              		.loc 1 305 0
 3278 0cd8 C4319FE5 		ldr	r3, .L69+36
 3279 0cdc 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3280 0ce0 000053E3 		cmp	r3, #0
 3281 0ce4 7E01000A 		beq	.L66
 306:../proyecto.c **** 			{
 307:../proyecto.c **** 				tsPressedMsg.flag = FALSE;
 3282              		.loc 1 307 0
 3283 0ce8 B4319FE5 		ldr	r3, .L69+36
 3284 0cec 0020A0E3 		mov	r2, #0
 3285 0cf0 0020C3E5 		strb	r2, [r3, #0]
 308:../proyecto.c **** 				tsPressedMsg.langFlag = FALSE;
 3286              		.loc 1 308 0
 3287 0cf4 A8319FE5 		ldr	r3, .L69+36
 3288 0cf8 0020A0E3 		mov	r2, #0
 3289 0cfc 0120C3E5 		strb	r2, [r3, #1]
 309:../proyecto.c **** 				prevState = state;
 3290              		.loc 1 309 0
 3291 0d00 A4319FE5 		ldr	r3, .L69+44
 3292 0d04 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3293 0d08 98319FE5 		ldr	r3, .L69+40
 3294 0d0c 0020C3E5 		strb	r2, [r3, #0]
 310:../proyecto.c **** 				plotState(language,placeSelected);
 3295              		.loc 1 310 0
 3296 0d10 80319FE5 		ldr	r3, .L69+24
 3297 0d14 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3298 0d18 0000A0E3 		mov	r0, #0
 3299 0d1c 0310A0E1 		mov	r1, r3
 3300 0d20 FEFFFFEB 		bl	plotState
 311:../proyecto.c **** 				state = language;
 3301              		.loc 1 311 0
 3302 0d24 80319FE5 		ldr	r3, .L69+44
 3303 0d28 0020A0E3 		mov	r2, #0
 3304 0d2c 0020C3E5 		strb	r2, [r3, #0]
 312:../proyecto.c **** 				ticks = 500;
 3305              		.loc 1 312 0
 3306 0d30 64319FE5 		ldr	r3, .L69+28
 3307 0d34 7D2FA0E3 		mov	r2, #500
 3308 0d38 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 313:../proyecto.c **** 			}
 314:../proyecto.c **** 			break;
 3309              		.loc 1 314 0
 3310 0d3c 6D0100EA 		b	.L5
 3311              	.L15:
 315:../proyecto.c ****         case success:
 316:../proyecto.c **** 			if( !(--ticks) )                           /* Decrementa ticks y chequea si ha permanecido en es
 3312              		.loc 1 316 0
 3313 0d40 54319FE5 		ldr	r3, .L69+28
 3314 0d44 B030D3E1 		ldrh	r3, [r3, #0]
 3315 0d48 013043E2 		sub	r3, r3, #1
 3316 0d4c 0338A0E1 		mov	r3, r3, asl #16
 3317 0d50 2328A0E1 		mov	r2, r3, lsr #16
 3318 0d54 40319FE5 		ldr	r3, .L69+28
 3319 0d58 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3320 0d5c 38319FE5 		ldr	r3, .L69+28
 3321 0d60 B030D3E1 		ldrh	r3, [r3, #0]
 3322 0d64 000053E3 		cmp	r3, #0
 3323 0d68 0700001A 		bne	.L46
 317:../proyecto.c **** 			{
 318:../proyecto.c **** 				plotState(waiting,placeSelected);                        /* Visualiza pantalla inicial */
 3324              		.loc 1 318 0
 3325 0d6c 24319FE5 		ldr	r3, .L69+24
 3326 0d70 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3327 0d74 0100A0E3 		mov	r0, #1
 3328 0d78 0310A0E1 		mov	r1, r3
 3329 0d7c FEFFFFEB 		bl	plotState
 319:../proyecto.c **** 				state = waiting;                      /* Salta al estado demo_waiting */
 3330              		.loc 1 319 0
 3331 0d80 24319FE5 		ldr	r3, .L69+44
 3332 0d84 0120A0E3 		mov	r2, #1
 3333 0d88 0020C3E5 		strb	r2, [r3, #0]
 3334              	.L46:
 320:../proyecto.c **** 			}
 321:../proyecto.c **** 			if( kpPressedMsg.flag )                /* Chequea si se ha introducido una moneda (mensaje recib
 3335              		.loc 1 321 0
 3336 0d8c 0C319FE5 		ldr	r3, .L69+32
 3337 0d90 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3338 0d94 000053E3 		cmp	r3, #0
 3339 0d98 0800000A 		beq	.L47
 322:../proyecto.c **** 			{
 323:../proyecto.c **** 				kpPressedMsg.flag = FALSE;              /* Marca el mensaje como leido */
 3340              		.loc 1 323 0
 3341 0d9c FC309FE5 		ldr	r3, .L69+32
 3342 0da0 0020A0E3 		mov	r2, #0
 3343 0da4 0020C3E5 		strb	r2, [r3, #0]
 324:../proyecto.c **** 				coinsMoverMsg.accept = FALSE;              /* Envia un mensaje para que la moneda se devuelva *
 3344              		.loc 1 324 0
 3345 0da8 DC309FE5 		ldr	r3, .L69+12
 3346 0dac 0020A0E3 		mov	r2, #0
 3347 0db0 0120C3E5 		strb	r2, [r3, #1]
 325:../proyecto.c **** 				coinsMoverMsg.flag   = TRUE;
 3348              		.loc 1 325 0
 3349 0db4 D0309FE5 		ldr	r3, .L69+12
 3350 0db8 0120A0E3 		mov	r2, #1
 3351 0dbc 0020C3E5 		strb	r2, [r3, #0]
 3352              	.L47:
 326:../proyecto.c **** 			}
 327:../proyecto.c **** 			if( tsPressedMsg.flag && !tsPressedMsg.langFlag )                    /* Chequea si se ha pulsado
 3353              		.loc 1 327 0
 3354 0dc0 DC309FE5 		ldr	r3, .L69+36
 3355 0dc4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3356 0dc8 000053E3 		cmp	r3, #0
 3357 0dcc 1100000A 		beq	.L48
 3358              		.loc 1 327 0 is_stmt 0 discriminator 1
 3359 0dd0 CC309FE5 		ldr	r3, .L69+36
 3360 0dd4 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3361 0dd8 000053E3 		cmp	r3, #0
 3362 0ddc 0D00001A 		bne	.L48
 328:../proyecto.c **** 			{
 329:../proyecto.c **** 				tsPressedMsg.flag = FALSE;                 /* Marca el mensaje como leido */
 3363              		.loc 1 329 0 is_stmt 1
 3364 0de0 BC309FE5 		ldr	r3, .L69+36
 3365 0de4 0020A0E3 		mov	r2, #0
 3366 0de8 0020C3E5 		strb	r2, [r3, #0]
 330:../proyecto.c **** 				plotState(waiting,placeSelected);                                 /* Borra pantalla */
 3367              		.loc 1 330 0
 3368 0dec A4309FE5 		ldr	r3, .L69+24
 3369 0df0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3370 0df4 0100A0E3 		mov	r0, #1
 3371 0df8 0310A0E1 		mov	r1, r3
 3372 0dfc FEFFFFEB 		bl	plotState
 331:../proyecto.c **** 				state = waiting;                  /* Salta al estado selection ... */
 3373              		.loc 1 331 0
 3374 0e00 A4309FE5 		ldr	r3, .L69+44
 3375 0e04 0120A0E3 		mov	r2, #1
 3376 0e08 0020C3E5 		strb	r2, [r3, #0]
 332:../proyecto.c **** 				ticks = 500;                               /* ... en el que debera permanecer un maximo de 500 
 3377              		.loc 1 332 0
 3378 0e0c 88309FE5 		ldr	r3, .L69+28
 3379 0e10 7D2FA0E3 		mov	r2, #500
 3380 0e14 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3381              	.L48:
 333:../proyecto.c **** 			}
 334:../proyecto.c **** 			if ( tsPressedMsg.langFlag )
 3382              		.loc 1 334 0
 3383 0e18 84309FE5 		ldr	r3, .L69+36
 3384 0e1c 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3385 0e20 000053E3 		cmp	r3, #0
 3386 0e24 3001000A 		beq	.L67
 335:../proyecto.c **** 			{
 336:../proyecto.c **** 				tsPressedMsg.flag = FALSE;
 3387              		.loc 1 336 0
 3388 0e28 74309FE5 		ldr	r3, .L69+36
 3389 0e2c 0020A0E3 		mov	r2, #0
 3390 0e30 0020C3E5 		strb	r2, [r3, #0]
 337:../proyecto.c **** 				tsPressedMsg.langFlag = FALSE;
 3391              		.loc 1 337 0
 3392 0e34 68309FE5 		ldr	r3, .L69+36
 3393 0e38 0020A0E3 		mov	r2, #0
 3394 0e3c 0120C3E5 		strb	r2, [r3, #1]
 338:../proyecto.c **** 				prevState = state;
 3395              		.loc 1 338 0
 3396 0e40 64309FE5 		ldr	r3, .L69+44
 3397 0e44 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3398 0e48 58309FE5 		ldr	r3, .L69+40
 3399 0e4c 0020C3E5 		strb	r2, [r3, #0]
 339:../proyecto.c **** 				plotState(language,placeSelected);
 3400              		.loc 1 339 0
 3401 0e50 40309FE5 		ldr	r3, .L69+24
 3402 0e54 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3403 0e58 0000A0E3 		mov	r0, #0
 3404 0e5c 0310A0E1 		mov	r1, r3
 3405 0e60 FEFFFFEB 		bl	plotState
 340:../proyecto.c **** 				state = language;
 3406              		.loc 1 340 0
 3407 0e64 40309FE5 		ldr	r3, .L69+44
 3408 0e68 0020A0E3 		mov	r2, #0
 3409 0e6c 0020C3E5 		strb	r2, [r3, #0]
 341:../proyecto.c **** 				ticks = 500;
 3410              		.loc 1 341 0
 3411 0e70 24309FE5 		ldr	r3, .L69+28
 3412 0e74 7D2FA0E3 		mov	r2, #500
 3413 0e78 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 342:../proyecto.c **** 			}
 343:../proyecto.c **** 			break;
 3414              		.loc 1 343 0
 3415 0e7c 1D0100EA 		b	.L5
 3416              	.L70:
 3417              		.align	2
 3418              	.L69:
 3419 0e80 03000000 		.word	init.4361
 3420 0e84 10000000 		.word	og_deadline.4365
 3421 0e88 00000000 		.word	ticketMsg
 3422 0e8c 00000000 		.word	coinsMoverMsg
 3423 0e90 18000000 		.word	licPlateComp.4363
 3424 0e94 00000000 		.word	parking
 3425 0e98 0A000000 		.word	placeSelected.4364
 3426 0e9c 0C000000 		.word	ticks.4362
 3427 0ea0 00000000 		.word	kpPressedMsg
 3428 0ea4 00000000 		.word	tsPressedMsg
 3429 0ea8 0E000000 		.word	prevState.4367
 3430 0eac 0B000000 		.word	state.4366
 3431              	.L16:
 344:../proyecto.c ****         case error:
 345:../proyecto.c **** 			if( !(--ticks) )                           /* Decrementa ticks y chequea si ha permanecido en es
 3432              		.loc 1 345 0
 3433 0eb0 1C301FE5 		ldr	r3, .L69+28
 3434 0eb4 B030D3E1 		ldrh	r3, [r3, #0]
 3435 0eb8 013043E2 		sub	r3, r3, #1
 3436 0ebc 0338A0E1 		mov	r3, r3, asl #16
 3437 0ec0 2328A0E1 		mov	r2, r3, lsr #16
 3438 0ec4 30301FE5 		ldr	r3, .L69+28
 3439 0ec8 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3440 0ecc 38301FE5 		ldr	r3, .L69+28
 3441 0ed0 B030D3E1 		ldrh	r3, [r3, #0]
 3442 0ed4 000053E3 		cmp	r3, #0
 3443 0ed8 0700001A 		bne	.L50
 346:../proyecto.c **** 			{
 347:../proyecto.c **** 				plotState(waiting,placeSelected);                          /* Visualiza pantalla inicial */
 3444              		.loc 1 347 0
 3445 0edc 4C301FE5 		ldr	r3, .L69+24
 3446 0ee0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3447 0ee4 0100A0E3 		mov	r0, #1
 3448 0ee8 0310A0E1 		mov	r1, r3
 3449 0eec FEFFFFEB 		bl	plotState
 348:../proyecto.c **** 				state = waiting;                      /* Salta al estado demo_waiting */
 3450              		.loc 1 348 0
 3451 0ef0 4C301FE5 		ldr	r3, .L69+44
 3452 0ef4 0120A0E3 		mov	r2, #1
 3453 0ef8 0020C3E5 		strb	r2, [r3, #0]
 3454              	.L50:
 349:../proyecto.c **** 
 350:../proyecto.c **** 			}
 351:../proyecto.c **** 			if( kpPressedMsg.flag )                /* Chequea si se ha introducido una moneda (mensaje recib
 3455              		.loc 1 351 0
 3456 0efc 64301FE5 		ldr	r3, .L69+32
 3457 0f00 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3458 0f04 000053E3 		cmp	r3, #0
 3459 0f08 0800000A 		beq	.L51
 352:../proyecto.c **** 			{
 353:../proyecto.c **** 				kpPressedMsg.flag = FALSE;              /* Marca el mensaje como leido */
 3460              		.loc 1 353 0
 3461 0f0c 74301FE5 		ldr	r3, .L69+32
 3462 0f10 0020A0E3 		mov	r2, #0
 3463 0f14 0020C3E5 		strb	r2, [r3, #0]
 354:../proyecto.c **** 				coinsMoverMsg.accept = FALSE;              /* Envia un mensaje para que la moneda se devuelva *
 3464              		.loc 1 354 0
 3465 0f18 94301FE5 		ldr	r3, .L69+12
 3466 0f1c 0020A0E3 		mov	r2, #0
 3467 0f20 0120C3E5 		strb	r2, [r3, #1]
 355:../proyecto.c **** 				coinsMoverMsg.flag   = TRUE;
 3468              		.loc 1 355 0
 3469 0f24 A0301FE5 		ldr	r3, .L69+12
 3470 0f28 0120A0E3 		mov	r2, #1
 3471 0f2c 0020C3E5 		strb	r2, [r3, #0]
 3472              	.L51:
 356:../proyecto.c **** 			}
 357:../proyecto.c **** 			if( tsPressedMsg.flag && !tsPressedMsg.langFlag )                    /* Chequea si se ha pulsado
 3473              		.loc 1 357 0
 3474 0f30 94301FE5 		ldr	r3, .L69+36
 3475 0f34 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3476 0f38 000053E3 		cmp	r3, #0
 3477 0f3c 2E00000A 		beq	.L52
 3478              		.loc 1 357 0 is_stmt 0 discriminator 1
 3479 0f40 A4301FE5 		ldr	r3, .L69+36
 3480 0f44 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3481 0f48 000053E3 		cmp	r3, #0
 3482 0f4c 2A00001A 		bne	.L52
 358:../proyecto.c **** 			{
 359:../proyecto.c **** 				tsPressedMsg.flag = FALSE;    /* Marca el mensaje como leido */
 3483              		.loc 1 359 0 is_stmt 1
 3484 0f50 B4301FE5 		ldr	r3, .L69+36
 3485 0f54 0020A0E3 		mov	r2, #0
 3486 0f58 0020C3E5 		strb	r2, [r3, #0]
 360:../proyecto.c **** 				if(parking[placeSelected].error == SELEC_ERROR && exitSol()){
 3487              		.loc 1 360 0
 3488 0f5c CC301FE5 		ldr	r3, .L69+24
 3489 0f60 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3490 0f64 0320A0E1 		mov	r2, r3
 3491 0f68 DC101FE5 		ldr	r1, .L69+20
 3492 0f6c 0830A0E3 		mov	r3, #8
 3493 0f70 0222A0E1 		mov	r2, r2, asl #4
 3494 0f74 022081E0 		add	r2, r1, r2
 3495 0f78 033082E0 		add	r3, r2, r3
 3496 0f7c 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 3497 0f80 033CA0E1 		mov	r3, r3, asl #24
 3498 0f84 433CA0E1 		mov	r3, r3, asr #24
 3499 0f88 030053E3 		cmp	r3, #3
 3500 0f8c 0F00001A 		bne	.L53
 3501              		.loc 1 360 0 is_stmt 0 discriminator 1
 3502 0f90 FEFFFFEB 		bl	exitSol
 3503 0f94 0030A0E1 		mov	r3, r0
 3504 0f98 000053E3 		cmp	r3, #0
 3505 0f9c 0B00000A 		beq	.L53
 361:../proyecto.c **** 					licPlateComp = 0;
 3506              		.loc 1 361 0 is_stmt 1
 3507 0fa0 18311FE5 		ldr	r3, .L69+16
 3508 0fa4 0020A0E3 		mov	r2, #0
 3509 0fa8 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 362:../proyecto.c **** 					plotState(exit,placeSelected);
 3510              		.loc 1 362 0
 3511 0fac 1C311FE5 		ldr	r3, .L69+24
 3512 0fb0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3513 0fb4 0700A0E3 		mov	r0, #7
 3514 0fb8 0310A0E1 		mov	r1, r3
 3515 0fbc FEFFFFEB 		bl	plotState
 363:../proyecto.c **** 					state = exit;
 3516              		.loc 1 363 0
 3517 0fc0 1C311FE5 		ldr	r3, .L69+44
 3518 0fc4 0720A0E3 		mov	r2, #7
 3519 0fc8 0020C3E5 		strb	r2, [r3, #0]
 3520 0fcc 070000EA 		b	.L54
 3521              	.L53:
 364:../proyecto.c **** 				} else {
 365:../proyecto.c **** 					plotState(waiting,placeSelected);                              /* vuelve al welcome screen*/
 3522              		.loc 1 365 0
 3523 0fd0 40311FE5 		ldr	r3, .L69+24
 3524 0fd4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3525 0fd8 0100A0E3 		mov	r0, #1
 3526 0fdc 0310A0E1 		mov	r1, r3
 3527 0fe0 FEFFFFEB 		bl	plotState
 366:../proyecto.c **** 					state = waiting;
 3528              		.loc 1 366 0
 3529 0fe4 40311FE5 		ldr	r3, .L69+44
 3530 0fe8 0120A0E3 		mov	r2, #1
 3531 0fec 0020C3E5 		strb	r2, [r3, #0]
 3532              	.L54:
 367:../proyecto.c **** 				}
 368:../proyecto.c **** 				ticks = 500;                               /* ... en el que debera permanecer un maximo de 500 
 3533              		.loc 1 368 0
 3534 0ff0 5C311FE5 		ldr	r3, .L69+28
 3535 0ff4 7D2FA0E3 		mov	r2, #500
 3536 0ff8 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3537              	.L52:
 369:../proyecto.c **** 			}
 370:../proyecto.c **** 			if ( tsPressedMsg.langFlag )
 3538              		.loc 1 370 0
 3539 0ffc 60311FE5 		ldr	r3, .L69+36
 3540 1000 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3541 1004 000053E3 		cmp	r3, #0
 3542 1008 B900000A 		beq	.L68
 371:../proyecto.c **** 			{
 372:../proyecto.c **** 				tsPressedMsg.flag = FALSE;
 3543              		.loc 1 372 0
 3544 100c 70311FE5 		ldr	r3, .L69+36
 3545 1010 0020A0E3 		mov	r2, #0
 3546 1014 0020C3E5 		strb	r2, [r3, #0]
 373:../proyecto.c **** 				tsPressedMsg.langFlag = FALSE;
 3547              		.loc 1 373 0
 3548 1018 7C311FE5 		ldr	r3, .L69+36
 3549 101c 0020A0E3 		mov	r2, #0
 3550 1020 0120C3E5 		strb	r2, [r3, #1]
 374:../proyecto.c **** 				prevState = state;
 3551              		.loc 1 374 0
 3552 1024 80311FE5 		ldr	r3, .L69+44
 3553 1028 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3554 102c 8C311FE5 		ldr	r3, .L69+40
 3555 1030 0020C3E5 		strb	r2, [r3, #0]
 375:../proyecto.c **** 				plotLangSelScreen();
 3556              		.loc 1 375 0
 3557 1034 FEFFFFEB 		bl	plotLangSelScreen
 376:../proyecto.c **** 				state = language;
 3558              		.loc 1 376 0
 3559 1038 94311FE5 		ldr	r3, .L69+44
 3560 103c 0020A0E3 		mov	r2, #0
 3561 1040 0020C3E5 		strb	r2, [r3, #0]
 377:../proyecto.c **** 			}
 378:../proyecto.c **** 			break;
 3562              		.loc 1 378 0
 3563 1044 AB0000EA 		b	.L5
 3564              	.L17:
 379:../proyecto.c ****         case exit:
 380:../proyecto.c ****         	kpPressedMsg.licPlateInput = TRUE;							//activa el modo matricula
 3565              		.loc 1 380 0
 3566 1048 B0311FE5 		ldr	r3, .L69+32
 3567 104c 0120A0E3 		mov	r2, #1
 3568 1050 0120C3E5 		strb	r2, [r3, #1]
 381:../proyecto.c ****         	if( !(--ticks) )                           /* Decrementa ticks y chequea si ha permanecido
 3569              		.loc 1 381 0
 3570 1054 C0311FE5 		ldr	r3, .L69+28
 3571 1058 B030D3E1 		ldrh	r3, [r3, #0]
 3572 105c 013043E2 		sub	r3, r3, #1
 3573 1060 0338A0E1 		mov	r3, r3, asl #16
 3574 1064 2328A0E1 		mov	r2, r3, lsr #16
 3575 1068 D4311FE5 		ldr	r3, .L69+28
 3576 106c B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3577 1070 DC311FE5 		ldr	r3, .L69+28
 3578 1074 B030D3E1 		ldrh	r3, [r3, #0]
 3579 1078 000053E3 		cmp	r3, #0
 3580 107c 0A00001A 		bne	.L56
 382:../proyecto.c **** 			{
 383:../proyecto.c **** 				plotState(waiting,placeSelected);                          /* Visualiza pantalla inicial */
 3581              		.loc 1 383 0
 3582 1080 F0311FE5 		ldr	r3, .L69+24
 3583 1084 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3584 1088 0100A0E3 		mov	r0, #1
 3585 108c 0310A0E1 		mov	r1, r3
 3586 1090 FEFFFFEB 		bl	plotState
 384:../proyecto.c **** 				state = waiting;                      /* Salta al estado demo_waiting */
 3587              		.loc 1 384 0
 3588 1094 F0311FE5 		ldr	r3, .L69+44
 3589 1098 0120A0E3 		mov	r2, #1
 3590 109c 0020C3E5 		strb	r2, [r3, #0]
 385:../proyecto.c **** 				kpPressedMsg.licPlateInput = FALSE;			//limpio el flag del keypress porque voy a cambiar de est
 3591              		.loc 1 385 0
 3592 10a0 08321FE5 		ldr	r3, .L69+32
 3593 10a4 0020A0E3 		mov	r2, #0
 3594 10a8 0120C3E5 		strb	r2, [r3, #1]
 3595              	.L56:
 386:../proyecto.c **** 			}
 387:../proyecto.c **** 			if( kpPressedMsg.flag )                /* Chequea si se ha introducido una moneda (mensaje recib
 3596              		.loc 1 387 0
 3597 10ac 14321FE5 		ldr	r3, .L69+32
 3598 10b0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3599 10b4 000053E3 		cmp	r3, #0
 3600 10b8 1200000A 		beq	.L57
 388:../proyecto.c **** 			{
 389:../proyecto.c **** 				kpPressedMsg.flag = FALSE;              /* Marca el mensaje como leido */
 3601              		.loc 1 389 0
 3602 10bc 24321FE5 		ldr	r3, .L69+32
 3603 10c0 0020A0E3 		mov	r2, #0
 3604 10c4 0020C3E5 		strb	r2, [r3, #0]
 390:../proyecto.c **** 				if(getLicPlate(&licPlateComp))
 3605              		.loc 1 390 0
 3606 10c8 40021FE5 		ldr	r0, .L69+16
 3607 10cc FEFFFFEB 		bl	getLicPlate
 3608 10d0 0030A0E1 		mov	r3, r0
 3609 10d4 000053E3 		cmp	r3, #0
 3610 10d8 0700000A 		beq	.L58
 391:../proyecto.c **** 				{
 392:../proyecto.c **** 					plotLicPlateUpdate(licPlateComp);
 3611              		.loc 1 392 0
 3612 10dc 54321FE5 		ldr	r3, .L69+16
 3613 10e0 B030D3E1 		ldrh	r3, [r3, #0]
 3614 10e4 0338A0E1 		mov	r3, r3, asl #16
 3615 10e8 2338A0E1 		mov	r3, r3, lsr #16
 3616 10ec 0338A0E1 		mov	r3, r3, asl #16
 3617 10f0 4338A0E1 		mov	r3, r3, asr #16
 3618 10f4 0300A0E1 		mov	r0, r3
 3619 10f8 FEFFFFEB 		bl	plotLicPlateUpdate
 3620              	.L58:
 393:../proyecto.c **** 				}
 394:../proyecto.c **** 				ticks=500;
 3621              		.loc 1 394 0
 3622 10fc 68321FE5 		ldr	r3, .L69+28
 3623 1100 7D2FA0E3 		mov	r2, #500
 3624 1104 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3625              	.L57:
 395:../proyecto.c **** 			}
 396:../proyecto.c **** 			if( tsPressedMsg.flag && !tsPressedMsg.langFlag )                    /* Chequea si se ha pulsado
 3626              		.loc 1 396 0
 3627 1108 6C321FE5 		ldr	r3, .L69+36
 3628 110c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3629 1110 000053E3 		cmp	r3, #0
 3630 1114 5400000A 		beq	.L59
 3631              		.loc 1 396 0 is_stmt 0 discriminator 1
 3632 1118 7C321FE5 		ldr	r3, .L69+36
 3633 111c 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3634 1120 000053E3 		cmp	r3, #0
 3635 1124 5000001A 		bne	.L59
 397:../proyecto.c **** 			{
 398:../proyecto.c **** 				kpPressedMsg.licPlateInput = FALSE;			//limpio el flag del keypress porque voy a cambiar de est
 3636              		.loc 1 398 0 is_stmt 1
 3637 1128 90321FE5 		ldr	r3, .L69+32
 3638 112c 0020A0E3 		mov	r2, #0
 3639 1130 0120C3E5 		strb	r2, [r3, #1]
 399:../proyecto.c **** 				tsPressedMsg.flag = FALSE;
 3640              		.loc 1 399 0
 3641 1134 98321FE5 		ldr	r3, .L69+36
 3642 1138 0020A0E3 		mov	r2, #0
 3643 113c 0020C3E5 		strb	r2, [r3, #0]
 400:../proyecto.c **** 				if ( licPlateComp == parking[placeSelected].licPlate)
 3644              		.loc 1 400 0
 3645 1140 B0321FE5 		ldr	r3, .L69+24
 3646 1144 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3647 1148 0320A0E1 		mov	r2, r3
 3648 114c C0121FE5 		ldr	r1, .L69+20
 3649 1150 0830A0E3 		mov	r3, #8
 3650 1154 0222A0E1 		mov	r2, r2, asl #4
 3651 1158 022081E0 		add	r2, r1, r2
 3652 115c 033082E0 		add	r3, r2, r3
 3653 1160 B220D3E1 		ldrh	r2, [r3, #2]
 3654 1164 DC321FE5 		ldr	r3, .L69+16
 3655 1168 B030D3E1 		ldrh	r3, [r3, #0]
 3656 116c 030052E1 		cmp	r2, r3
 3657 1170 2800001A 		bne	.L60
 401:../proyecto.c **** 				{
 402:../proyecto.c **** 					parking[placeSelected].credit = 0;
 3658              		.loc 1 402 0
 3659 1174 E4321FE5 		ldr	r3, .L69+24
 3660 1178 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3661 117c 0320A0E1 		mov	r2, r3
 3662 1180 F4121FE5 		ldr	r1, .L69+20
 3663 1184 0830A0E3 		mov	r3, #8
 3664 1188 0222A0E1 		mov	r2, r2, asl #4
 3665 118c 022081E0 		add	r2, r1, r2
 3666 1190 033082E0 		add	r3, r2, r3
 3667 1194 0020A0E3 		mov	r2, #0
 3668 1198 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 403:../proyecto.c **** 					parking[placeSelected].free = TRUE;
 3669              		.loc 1 403 0
 3670 119c 0C331FE5 		ldr	r3, .L69+24
 3671 11a0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3672 11a4 0320A0E1 		mov	r2, r3
 3673 11a8 1C131FE5 		ldr	r1, .L69+20
 3674 11ac 0130A0E3 		mov	r3, #1
 3675 11b0 0222A0E1 		mov	r2, r2, asl #4
 3676 11b4 022081E0 		add	r2, r1, r2
 3677 11b8 033082E0 		add	r3, r2, r3
 3678 11bc 0120A0E3 		mov	r2, #1
 3679 11c0 0020C3E5 		strb	r2, [r3, #0]
 404:../proyecto.c **** 					parking[placeSelected].licPlate = 0;
 3680              		.loc 1 404 0
 3681 11c4 34331FE5 		ldr	r3, .L69+24
 3682 11c8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3683 11cc 0320A0E1 		mov	r2, r3
 3684 11d0 44131FE5 		ldr	r1, .L69+20
 3685 11d4 0830A0E3 		mov	r3, #8
 3686 11d8 0222A0E1 		mov	r2, r2, asl #4
 3687 11dc 022081E0 		add	r2, r1, r2
 3688 11e0 033082E0 		add	r3, r2, r3
 3689 11e4 0020A0E3 		mov	r2, #0
 3690 11e8 B220C3E1 		strh	r2, [r3, #2]	@ movhi
 405:../proyecto.c **** 					plotExitSuccess(parking[placeSelected]);            /* vuelve al welcome screen*/
 3691              		.loc 1 405 0
 3692 11ec 5C331FE5 		ldr	r3, .L69+24
 3693 11f0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3694 11f4 68231FE5 		ldr	r2, .L69+20
 3695 11f8 0332A0E1 		mov	r3, r3, asl #4
 3696 11fc 033082E0 		add	r3, r2, r3
 3697 1200 0F0093E8 		ldmia	r3, {r0, r1, r2, r3}
 3698 1204 FEFFFFEB 		bl	plotExitSuccess
 406:../proyecto.c **** 					state = success;
 3699              		.loc 1 406 0
 3700 1208 64331FE5 		ldr	r3, .L69+44
 3701 120c 0520A0E3 		mov	r2, #5
 3702 1210 0020C3E5 		strb	r2, [r3, #0]
 3703 1214 110000EA 		b	.L61
 3704              	.L60:
 407:../proyecto.c **** 				} else {
 408:../proyecto.c **** 					parking[placeSelected].error = EXIT_ERROR;
 3705              		.loc 1 408 0
 3706 1218 88331FE5 		ldr	r3, .L69+24
 3707 121c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3708 1220 0320A0E1 		mov	r2, r3
 3709 1224 98131FE5 		ldr	r1, .L69+20
 3710 1228 0830A0E3 		mov	r3, #8
 3711 122c 0222A0E1 		mov	r2, r2, asl #4
 3712 1230 022081E0 		add	r2, r1, r2
 3713 1234 033082E0 		add	r3, r2, r3
 3714 1238 0120A0E3 		mov	r2, #1
 3715 123c 0620C3E5 		strb	r2, [r3, #6]
 409:../proyecto.c **** 					plotState(error,placeSelected);                              /* vuelve al welcome screen*/
 3716              		.loc 1 409 0
 3717 1240 B0331FE5 		ldr	r3, .L69+24
 3718 1244 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3719 1248 0600A0E3 		mov	r0, #6
 3720 124c 0310A0E1 		mov	r1, r3
 3721 1250 FEFFFFEB 		bl	plotState
 410:../proyecto.c **** 					state = error;
 3722              		.loc 1 410 0
 3723 1254 B0331FE5 		ldr	r3, .L69+44
 3724 1258 0620A0E3 		mov	r2, #6
 3725 125c 0020C3E5 		strb	r2, [r3, #0]
 3726              	.L61:
 411:../proyecto.c **** 				}
 412:../proyecto.c **** 				ticks = 500;                               /* ... en el que debera permanecer un maximo de 500 
 3727              		.loc 1 412 0
 3728 1260 CC331FE5 		ldr	r3, .L69+28
 3729 1264 7D2FA0E3 		mov	r2, #500
 3730 1268 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3731              	.L59:
 413:../proyecto.c **** 			}
 414:../proyecto.c **** 			if ( tsPressedMsg.langFlag )
 3732              		.loc 1 414 0
 3733 126c D0331FE5 		ldr	r3, .L69+36
 3734 1270 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3735 1274 000053E3 		cmp	r3, #0
 3736 1278 1E00000A 		beq	.L5
 415:../proyecto.c **** 			{
 416:../proyecto.c **** 				kpPressedMsg.licPlateInput = FALSE;			//limpio el flag del keypress porque voy a cambiar de est
 3737              		.loc 1 416 0
 3738 127c E4331FE5 		ldr	r3, .L69+32
 3739 1280 0020A0E3 		mov	r2, #0
 3740 1284 0120C3E5 		strb	r2, [r3, #1]
 417:../proyecto.c **** 				tsPressedMsg.flag = FALSE;
 3741              		.loc 1 417 0
 3742 1288 EC331FE5 		ldr	r3, .L69+36
 3743 128c 0020A0E3 		mov	r2, #0
 3744 1290 0020C3E5 		strb	r2, [r3, #0]
 418:../proyecto.c **** 				tsPressedMsg.langFlag = FALSE;
 3745              		.loc 1 418 0
 3746 1294 F8331FE5 		ldr	r3, .L69+36
 3747 1298 0020A0E3 		mov	r2, #0
 3748 129c 0120C3E5 		strb	r2, [r3, #1]
 419:../proyecto.c **** 				prevState = state;
 3749              		.loc 1 419 0
 3750 12a0 FC331FE5 		ldr	r3, .L69+44
 3751 12a4 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3752 12a8 08341FE5 		ldr	r3, .L69+40
 3753 12ac 0020C3E5 		strb	r2, [r3, #0]
 420:../proyecto.c **** 				plotLangSelScreen();
 3754              		.loc 1 420 0
 3755 12b0 FEFFFFEB 		bl	plotLangSelScreen
 421:../proyecto.c **** 				state = language;
 3756              		.loc 1 421 0
 3757 12b4 10341FE5 		ldr	r3, .L69+44
 3758 12b8 0020A0E3 		mov	r2, #0
 3759 12bc 0020C3E5 		strb	r2, [r3, #0]
 3760 12c0 0C0000EA 		b	.L5
 3761              	.L62:
 144:../proyecto.c **** 			break;
 3762              		.loc 1 144 0
 3763 12c4 0000A0E1 		mov	r0, r0	@ nop
 3764 12c8 0A0000EA 		b	.L5
 3765              	.L63:
 168:../proyecto.c ****             break;
 3766              		.loc 1 168 0
 3767 12cc 0000A0E1 		mov	r0, r0	@ nop
 3768 12d0 080000EA 		b	.L5
 3769              	.L64:
 211:../proyecto.c ****         	break;
 3770              		.loc 1 211 0
 3771 12d4 0000A0E1 		mov	r0, r0	@ nop
 3772 12d8 060000EA 		b	.L5
 3773              	.L65:
 268:../proyecto.c ****         	break;
 3774              		.loc 1 268 0
 3775 12dc 0000A0E1 		mov	r0, r0	@ nop
 3776 12e0 040000EA 		b	.L5
 3777              	.L66:
 314:../proyecto.c **** 			break;
 3778              		.loc 1 314 0
 3779 12e4 0000A0E1 		mov	r0, r0	@ nop
 3780 12e8 020000EA 		b	.L5
 3781              	.L67:
 343:../proyecto.c **** 			break;
 3782              		.loc 1 343 0
 3783 12ec 0000A0E1 		mov	r0, r0	@ nop
 3784 12f0 000000EA 		b	.L5
 3785              	.L68:
 378:../proyecto.c **** 			break;
 3786              		.loc 1 378 0
 3787 12f4 0000A0E1 		mov	r0, r0	@ nop
 3788              	.L5:
 422:../proyecto.c **** 			}
 423:../proyecto.c ****     }
 424:../proyecto.c **** }
 3789              		.loc 1 424 0
 3790 12f8 0CD04BE2 		sub	sp, fp, #12
 3791 12fc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3792 1300 1EFF2FE1 		bx	lr
 3793              		.cfi_endproc
 3794              	.LFE1:
 3796              		.align	2
 3797              		.global	ticketPrinterTask
 3799              	ticketPrinterTask:
 3800              	.LFB2:
 425:../proyecto.c **** /* 
 426:../proyecto.c **** ** Emula el comportamiento de la impresora de tickets:
 427:../proyecto.c **** **   Cada segundo muestrea si ha recibido un mensaje de la tarea principal enviar a traves de la UA
 428:../proyecto.c **** */
 429:../proyecto.c **** void ticketPrinterTask( void )
 430:../proyecto.c **** {
 3801              		.loc 1 430 0
 3802              		.cfi_startproc
 3803              		@ Function supports interworking.
 3804              		@ args = 0, pretend = 0, frame = 0
 3805              		@ frame_needed = 1, uses_anonymous_args = 0
 3806 1304 0DC0A0E1 		mov	ip, sp
 3807              	.LCFI4:
 3808              		.cfi_def_cfa_register 12
 3809 1308 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3810 130c 04B04CE2 		sub	fp, ip, #4
 3811              		.cfi_offset 14, -8
 3812              		.cfi_offset 13, -12
 3813              		.cfi_offset 11, -16
 3814              	.LCFI5:
 3815              		.cfi_def_cfa 11, 4
 431:../proyecto.c ****    if(!ticketMsg.flag){
 3816              		.loc 1 431 0
 3817 1310 90309FE5 		ldr	r3, .L75
 3818 1314 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3819 1318 000053E3 		cmp	r3, #0
 3820 131c 1D00000A 		beq	.L74
 3821              	.L72:
 432:../proyecto.c **** 	   return;
 433:../proyecto.c ****    }
 434:../proyecto.c ****    ticketMsg.flag = FALSE;
 3822              		.loc 1 434 0
 3823 1320 80309FE5 		ldr	r3, .L75
 3824 1324 0020A0E3 		mov	r2, #0
 3825 1328 0020C3E5 		strb	r2, [r3, #0]
 435:../proyecto.c ****    makeTicket(ticketMsg.place);
 3826              		.loc 1 435 0
 3827 132c 74309FE5 		ldr	r3, .L75
 3828 1330 B220D3E1 		ldrh	r2, [r3, #2]
 3829 1334 B410D3E1 		ldrh	r1, [r3, #4]
 3830 1338 0118A0E1 		mov	r1, r1, asl #16
 3831 133c 022081E1 		orr	r2, r1, r2
 3832 1340 0000A0E3 		mov	r0, #0
 3833 1344 0200A0E1 		mov	r0, r2
 3834 1348 B620D3E1 		ldrh	r2, [r3, #6]
 3835 134c B810D3E1 		ldrh	r1, [r3, #8]
 3836 1350 0118A0E1 		mov	r1, r1, asl #16
 3837 1354 022081E1 		orr	r2, r1, r2
 3838 1358 0010A0E3 		mov	r1, #0
 3839 135c 0210A0E1 		mov	r1, r2
 3840 1360 BA20D3E1 		ldrh	r2, [r3, #10]
 3841 1364 BCC0D3E1 		ldrh	ip, [r3, #12]
 3842 1368 0CC8A0E1 		mov	ip, ip, asl #16
 3843 136c 02C08CE1 		orr	ip, ip, r2
 3844 1370 0020A0E3 		mov	r2, #0
 3845 1374 0C20A0E1 		mov	r2, ip
 3846 1378 BEC0D3E1 		ldrh	ip, [r3, #14]
 3847 137c B031D3E1 		ldrh	r3, [r3, #16]
 3848 1380 0338A0E1 		mov	r3, r3, asl #16
 3849 1384 0CC083E1 		orr	ip, r3, ip
 3850 1388 0030A0E3 		mov	r3, #0
 3851 138c 0C30A0E1 		mov	r3, ip
 3852 1390 FEFFFFEB 		bl	makeTicket
 3853 1394 000000EA 		b	.L71
 3854              	.L74:
 432:../proyecto.c **** 	   return;
 3855              		.loc 1 432 0
 3856 1398 0000A0E1 		mov	r0, r0	@ nop
 3857              	.L71:
 436:../proyecto.c **** }
 3858              		.loc 1 436 0
 3859 139c 0CD04BE2 		sub	sp, fp, #12
 3860 13a0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3861 13a4 1EFF2FE1 		bx	lr
 3862              	.L76:
 3863              		.align	2
 3864              	.L75:
 3865 13a8 00000000 		.word	ticketMsg
 3866              		.cfi_endproc
 3867              	.LFE2:
 3869              		.align	2
 3870              		.global	clockTask
 3872              	clockTask:
 3873              	.LFB3:
 437:../proyecto.c **** 
 438:../proyecto.c **** /* 
 439:../proyecto.c **** ** Cada segundo visualiza la fecha/hora en la pantalla y libera aquellas plazas cuya hora de finali
 440:../proyecto.c **** */
 441:../proyecto.c **** void clockTask( void )  
 442:../proyecto.c **** {
 3874              		.loc 1 442 0
 3875              		.cfi_startproc
 3876              		@ Function supports interworking.
 3877              		@ args = 0, pretend = 0, frame = 0
 3878              		@ frame_needed = 1, uses_anonymous_args = 0
 3879 13ac 0DC0A0E1 		mov	ip, sp
 3880              	.LCFI6:
 3881              		.cfi_def_cfa_register 12
 3882 13b0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3883 13b4 04B04CE2 		sub	fp, ip, #4
 3884              		.cfi_offset 14, -8
 3885              		.cfi_offset 13, -12
 3886              		.cfi_offset 11, -16
 3887              	.LCFI7:
 3888              		.cfi_def_cfa 11, 4
 443:../proyecto.c **** 	plotTime();
 3889              		.loc 1 443 0
 3890 13b8 FEFFFFEB 		bl	plotTime
 444:../proyecto.c **** }
 3891              		.loc 1 444 0
 3892 13bc 0CD04BE2 		sub	sp, fp, #12
 3893 13c0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3894 13c4 1EFF2FE1 		bx	lr
 3895              		.cfi_endproc
 3896              	.LFE3:
 3898              		.align	2
 3899              		.global	tsScanTask
 3901              	tsScanTask:
 3902              	.LFB4:
 445:../proyecto.c **** 
 446:../proyecto.c **** /* 
 447:../proyecto.c **** ** Cada 50 ms muestrea la touchscreen y envia un mensaje a la tarea principal con la posicion del l
 448:../proyecto.c **** */
 449:../proyecto.c **** void tsScanTask( void )  
 450:../proyecto.c **** {
 3903              		.loc 1 450 0
 3904              		.cfi_startproc
 3905              		@ Function supports interworking.
 3906              		@ args = 0, pretend = 0, frame = 0
 3907              		@ frame_needed = 1, uses_anonymous_args = 0
 3908 13c8 0DC0A0E1 		mov	ip, sp
 3909              	.LCFI8:
 3910              		.cfi_def_cfa_register 12
 3911 13cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3912 13d0 04B04CE2 		sub	fp, ip, #4
 3913              		.cfi_offset 14, -8
 3914              		.cfi_offset 13, -12
 3915              		.cfi_offset 11, -16
 3916              	.LCFI9:
 3917              		.cfi_def_cfa 11, 4
 451:../proyecto.c ****     static boolean init = TRUE;
 452:../proyecto.c ****     static enum { wait_keydown, scan, wait_keyup } state;
 453:../proyecto.c ****     
 454:../proyecto.c ****     if( init )
 3918              		.loc 1 454 0
 3919 13d4 F4309FE5 		ldr	r3, .L89
 3920 13d8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3921 13dc 000053E3 		cmp	r3, #0
 3922 13e0 0600000A 		beq	.L79
 455:../proyecto.c ****     {
 456:../proyecto.c ****         init  = FALSE;
 3923              		.loc 1 456 0
 3924 13e4 E4309FE5 		ldr	r3, .L89
 3925 13e8 0020A0E3 		mov	r2, #0
 3926 13ec 0020C3E5 		strb	r2, [r3, #0]
 457:../proyecto.c ****         state = wait_keydown;
 3927              		.loc 1 457 0
 3928 13f0 DC309FE5 		ldr	r3, .L89+4
 3929 13f4 0020A0E3 		mov	r2, #0
 3930 13f8 0020C3E5 		strb	r2, [r3, #0]
 3931 13fc 300000EA 		b	.L78
 3932              	.L79:
 458:../proyecto.c ****     }
 459:../proyecto.c ****     else switch( state )
 3933              		.loc 1 459 0
 3934 1400 CC309FE5 		ldr	r3, .L89+4
 3935 1404 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3936 1408 010053E3 		cmp	r3, #1
 3937 140c 0B00000A 		beq	.L82
 3938 1410 020053E3 		cmp	r3, #2
 3939 1414 1F00000A 		beq	.L83
 3940 1418 000053E3 		cmp	r3, #0
 3941 141c 2800001A 		bne	.L78
 3942              	.L81:
 460:../proyecto.c ****     {
 461:../proyecto.c ****         case wait_keydown:                        /* Estado esperando la presion de la pantalla */
 462:../proyecto.c ****             if( ts_pressed() )                        /* Chequea la pantalla esta presionada */
 3943              		.loc 1 462 0
 3944 1420 FEFFFFEB 		bl	ts_pressed
 3945 1424 0030A0E1 		mov	r3, r0
 3946 1428 000053E3 		cmp	r3, #0
 3947 142c 2100000A 		beq	.L87
 463:../proyecto.c ****                 state = scan;                         /* Salta al estado scan */
 3948              		.loc 1 463 0
 3949 1430 9C309FE5 		ldr	r3, .L89+4
 3950 1434 0120A0E3 		mov	r2, #1
 3951 1438 0020C3E5 		strb	r2, [r3, #0]
 464:../proyecto.c ****             break;
 3952              		.loc 1 464 0
 3953 143c 200000EA 		b	.L78
 3954              	.L82:
 465:../proyecto.c ****         case scan:                                /* Estado en que escanea la pantalla */
 466:../proyecto.c ****             ts_getpos( &tsPressedMsg.x, &tsPressedMsg.y );    /* Lee la pantalla */
 3955              		.loc 1 466 0
 3956 1440 90009FE5 		ldr	r0, .L89+8
 3957 1444 90109FE5 		ldr	r1, .L89+12
 3958 1448 FEFFFFEB 		bl	ts_getpos
 467:../proyecto.c ****             tsPressedMsg.flag = TRUE;                 /* Envia un mensaje con el valor de la posici
 3959              		.loc 1 467 0
 3960 144c 8C309FE5 		ldr	r3, .L89+16
 3961 1450 0120A0E3 		mov	r2, #1
 3962 1454 0020C3E5 		strb	r2, [r3, #0]
 468:../proyecto.c ****             if(tsPressedMsg.x > LCD_WIDTH-50 && tsPressedMsg.y < 50)
 3963              		.loc 1 468 0
 3964 1458 80309FE5 		ldr	r3, .L89+16
 3965 145c B220D3E1 		ldrh	r2, [r3, #2]
 3966 1460 7C309FE5 		ldr	r3, .L89+20
 3967 1464 030052E1 		cmp	r2, r3
 3968 1468 0600009A 		bls	.L85
 3969              		.loc 1 468 0 is_stmt 0 discriminator 1
 3970 146c 6C309FE5 		ldr	r3, .L89+16
 3971 1470 B430D3E1 		ldrh	r3, [r3, #4]
 3972 1474 310053E3 		cmp	r3, #49
 3973 1478 0200008A 		bhi	.L85
 469:../proyecto.c ****             	tsPressedMsg.langFlag = TRUE;
 3974              		.loc 1 469 0 is_stmt 1
 3975 147c 5C309FE5 		ldr	r3, .L89+16
 3976 1480 0120A0E3 		mov	r2, #1
 3977 1484 0120C3E5 		strb	r2, [r3, #1]
 3978              	.L85:
 470:../proyecto.c ****             state = wait_keyup;                       /* Salta al estado wait_keyup */
 3979              		.loc 1 470 0
 3980 1488 44309FE5 		ldr	r3, .L89+4
 3981 148c 0220A0E3 		mov	r2, #2
 3982 1490 0020C3E5 		strb	r2, [r3, #0]
 471:../proyecto.c ****             break;
 3983              		.loc 1 471 0
 3984 1494 0A0000EA 		b	.L78
 3985              	.L83:
 472:../proyecto.c ****         case wait_keyup:                          /* Estado esperando la depresion de la pantalla  
 473:../proyecto.c ****             if( !ts_pressed() )                       /* Chequea si la pantalla ya no esta presiona
 3986              		.loc 1 473 0
 3987 1498 FEFFFFEB 		bl	ts_pressed
 3988 149c 0030A0E1 		mov	r3, r0
 3989 14a0 000053E3 		cmp	r3, #0
 3990 14a4 0500001A 		bne	.L88
 474:../proyecto.c ****                 state = wait_keydown;                 /* Salta al estado wait_keydown */
 3991              		.loc 1 474 0
 3992 14a8 24309FE5 		ldr	r3, .L89+4
 3993 14ac 0020A0E3 		mov	r2, #0
 3994 14b0 0020C3E5 		strb	r2, [r3, #0]
 475:../proyecto.c ****             break;
 3995              		.loc 1 475 0
 3996 14b4 020000EA 		b	.L78
 3997              	.L87:
 464:../proyecto.c ****             break;
 3998              		.loc 1 464 0
 3999 14b8 0000A0E1 		mov	r0, r0	@ nop
 4000 14bc 000000EA 		b	.L78
 4001              	.L88:
 4002              		.loc 1 475 0
 4003 14c0 0000A0E1 		mov	r0, r0	@ nop
 4004              	.L78:
 476:../proyecto.c ****     }
 477:../proyecto.c **** }
 4005              		.loc 1 477 0
 4006 14c4 0CD04BE2 		sub	sp, fp, #12
 4007 14c8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4008 14cc 1EFF2FE1 		bx	lr
 4009              	.L90:
 4010              		.align	2
 4011              	.L89:
 4012 14d0 02000000 		.word	init.4391
 4013 14d4 09000000 		.word	state.4396
 4014 14d8 02000000 		.word	tsPressedMsg+2
 4015 14dc 04000000 		.word	tsPressedMsg+4
 4016 14e0 00000000 		.word	tsPressedMsg
 4017 14e4 0E010000 		.word	270
 4018              		.cfi_endproc
 4019              	.LFE4:
 4021              		.align	2
 4022              		.global	kpScanTask
 4024              	kpScanTask:
 4025              	.LFB5:
 478:../proyecto.c **** 
 479:../proyecto.c **** /* 
 480:../proyecto.c **** ** Emula el comportamiento de un reconocedor de monedas:
 481:../proyecto.c **** **   Cada 50 ms muestrea el keypad y envia un mensaje a la tarea principal con el valor de la moned
 482:../proyecto.c **** */
 483:../proyecto.c **** void kpScanTask( void )
 484:../proyecto.c **** {
 4026              		.loc 1 484 0
 4027              		.cfi_startproc
 4028              		@ Function supports interworking.
 4029              		@ args = 0, pretend = 0, frame = 0
 4030              		@ frame_needed = 1, uses_anonymous_args = 0
 4031 14e8 0DC0A0E1 		mov	ip, sp
 4032              	.LCFI10:
 4033              		.cfi_def_cfa_register 12
 4034 14ec 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4035 14f0 04B04CE2 		sub	fp, ip, #4
 4036              		.cfi_offset 14, -8
 4037              		.cfi_offset 13, -12
 4038              		.cfi_offset 11, -16
 4039              	.LCFI11:
 4040              		.cfi_def_cfa 11, 4
 485:../proyecto.c ****     static boolean init = TRUE;
 486:../proyecto.c ****     static enum { wait_keydown, coinInput, licenseInput, wait_keyup } state;
 487:../proyecto.c **** 
 488:../proyecto.c **** 
 489:../proyecto.c ****     
 490:../proyecto.c ****     if( init )
 4041              		.loc 1 490 0
 4042 14f4 A4319FE5 		ldr	r3, .L110
 4043 14f8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4044 14fc 000053E3 		cmp	r3, #0
 4045 1500 0600000A 		beq	.L92
 491:../proyecto.c ****     {
 492:../proyecto.c ****         init  = FALSE;
 4046              		.loc 1 492 0
 4047 1504 94319FE5 		ldr	r3, .L110
 4048 1508 0020A0E3 		mov	r2, #0
 4049 150c 0020C3E5 		strb	r2, [r3, #0]
 493:../proyecto.c ****         state = wait_keydown;
 4050              		.loc 1 493 0
 4051 1510 8C319FE5 		ldr	r3, .L110+4
 4052 1514 0020A0E3 		mov	r2, #0
 4053 1518 0020C3E5 		strb	r2, [r3, #0]
 4054 151c 5C0000EA 		b	.L91
 4055              	.L92:
 494:../proyecto.c ****     }
 495:../proyecto.c ****     else switch( state )
 4056              		.loc 1 495 0
 4057 1520 7C319FE5 		ldr	r3, .L110+4
 4058 1524 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4059 1528 030053E3 		cmp	r3, #3
 4060 152c 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 4061 1530 570000EA 		b	.L91
 4062              	.L98:
 4063 1534 44150000 		.word	.L94
 4064 1538 94150000 		.word	.L95
 4065 153c 38160000 		.word	.L96
 4066 1540 68160000 		.word	.L97
 4067              	.L94:
 496:../proyecto.c ****     {
 497:../proyecto.c ****         case wait_keydown:                        /* Estado esperando la presion teclas */
 498:../proyecto.c ****             if( keypad_pressed() && !kpPressedMsg.licPlateInput)                    /* Chequea si h
 4068              		.loc 1 498 0
 4069 1544 FEFFFFEB 		bl	keypad_pressed
 4070 1548 0030A0E1 		mov	r3, r0
 4071 154c 000053E3 		cmp	r3, #0
 4072 1550 0700000A 		beq	.L99
 4073              		.loc 1 498 0 is_stmt 0 discriminator 1
 4074 1554 4C319FE5 		ldr	r3, .L110+8
 4075 1558 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4076 155c 000053E3 		cmp	r3, #0
 4077 1560 0300001A 		bne	.L99
 499:../proyecto.c ****                 state = coinInput;                         /* Salta al estado scan */
 4078              		.loc 1 499 0 is_stmt 1
 4079 1564 38319FE5 		ldr	r3, .L110+4
 4080 1568 0120A0E3 		mov	r2, #1
 4081 156c 0020C3E5 		strb	r2, [r3, #0]
 500:../proyecto.c ****             else if(keypad_pressed())
 501:../proyecto.c ****             	state = licenseInput;
 502:../proyecto.c ****             break;
 4082              		.loc 1 502 0
 4083 1570 470000EA 		b	.L91
 4084              	.L99:
 500:../proyecto.c ****             else if(keypad_pressed())
 4085              		.loc 1 500 0
 4086 1574 FEFFFFEB 		bl	keypad_pressed
 4087 1578 0030A0E1 		mov	r3, r0
 4088 157c 000053E3 		cmp	r3, #0
 4089 1580 4000000A 		beq	.L108
 501:../proyecto.c ****             	state = licenseInput;
 4090              		.loc 1 501 0
 4091 1584 18319FE5 		ldr	r3, .L110+4
 4092 1588 0220A0E3 		mov	r2, #2
 4093 158c 0020C3E5 		strb	r2, [r3, #0]
 4094              		.loc 1 502 0
 4095 1590 3F0000EA 		b	.L91
 4096              	.L95:
 503:../proyecto.c ****         case coinInput:                                /* Estado en que escanea el teclado */
 504:../proyecto.c ****             switch( keypad_scan() )                   /* Lee el teclado */
 4097              		.loc 1 504 0
 4098 1594 FEFFFFEB 		bl	keypad_scan
 4099 1598 0030A0E1 		mov	r3, r0
 4100 159c 030053E3 		cmp	r3, #3
 4101 15a0 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 4102 15a4 1F0000EA 		b	.L101
 4103              	.L106:
 4104 15a8 B8150000 		.word	.L102
 4105 15ac D4150000 		.word	.L103
 4106 15b0 F0150000 		.word	.L104
 4107 15b4 0C160000 		.word	.L105
 4108              	.L102:
 505:../proyecto.c ****             {
 506:../proyecto.c ****                 case KEYPAD_KEY0:                         /* La tecla 0 esta asociada a la moneda d
 507:../proyecto.c ****                     kpPressedMsg.cents = 10;           /* Envia un mensaje con el valor de la moned
 4109              		.loc 1 507 0
 4110 15b8 E8309FE5 		ldr	r3, .L110+8
 4111 15bc 0A20A0E3 		mov	r2, #10
 4112 15c0 0220C3E5 		strb	r2, [r3, #2]
 508:../proyecto.c ****                     kpPressedMsg.flag  = TRUE;
 4113              		.loc 1 508 0
 4114 15c4 DC309FE5 		ldr	r3, .L110+8
 4115 15c8 0120A0E3 		mov	r2, #1
 4116 15cc 0020C3E5 		strb	r2, [r3, #0]
 509:../proyecto.c ****                     break;
 4117              		.loc 1 509 0
 4118 15d0 140000EA 		b	.L101
 4119              	.L103:
 510:../proyecto.c ****                 case KEYPAD_KEY1:                         /* La tecla 1 esta asociada a la moneda d
 511:../proyecto.c **** 				    kpPressedMsg.cents = 20;           /* Envia un mensaje con el valor de la moneda */
 4120              		.loc 1 511 0
 4121 15d4 CC309FE5 		ldr	r3, .L110+8
 4122 15d8 1420A0E3 		mov	r2, #20
 4123 15dc 0220C3E5 		strb	r2, [r3, #2]
 512:../proyecto.c **** 				    kpPressedMsg.flag  = TRUE;
 4124              		.loc 1 512 0
 4125 15e0 C0309FE5 		ldr	r3, .L110+8
 4126 15e4 0120A0E3 		mov	r2, #1
 4127 15e8 0020C3E5 		strb	r2, [r3, #0]
 513:../proyecto.c **** 				    break;
 4128              		.loc 1 513 0
 4129 15ec 0D0000EA 		b	.L101
 4130              	.L104:
 514:../proyecto.c ****                 case KEYPAD_KEY2:                         /* La tecla 2 esta asociada a la moneda d
 515:../proyecto.c **** 					kpPressedMsg.cents = 50;           /* Envia un mensaje con el valor de la moneda */
 4131              		.loc 1 515 0
 4132 15f0 B0309FE5 		ldr	r3, .L110+8
 4133 15f4 3220A0E3 		mov	r2, #50
 4134 15f8 0220C3E5 		strb	r2, [r3, #2]
 516:../proyecto.c **** 					kpPressedMsg.flag  = TRUE;
 4135              		.loc 1 516 0
 4136 15fc A4309FE5 		ldr	r3, .L110+8
 4137 1600 0120A0E3 		mov	r2, #1
 4138 1604 0020C3E5 		strb	r2, [r3, #0]
 517:../proyecto.c **** 					break;
 4139              		.loc 1 517 0
 4140 1608 060000EA 		b	.L101
 4141              	.L105:
 518:../proyecto.c ****                 case KEYPAD_KEY3:                         /* La tecla 3 esta asociada a la moneda d
 519:../proyecto.c **** 					kpPressedMsg.cents = 100;           /* Envia un mensaje con el valor de la moneda */
 4142              		.loc 1 519 0
 4143 160c 94309FE5 		ldr	r3, .L110+8
 4144 1610 6420A0E3 		mov	r2, #100
 4145 1614 0220C3E5 		strb	r2, [r3, #2]
 520:../proyecto.c **** 					kpPressedMsg.flag  = TRUE;
 4146              		.loc 1 520 0
 4147 1618 88309FE5 		ldr	r3, .L110+8
 4148 161c 0120A0E3 		mov	r2, #1
 4149 1620 0020C3E5 		strb	r2, [r3, #0]
 521:../proyecto.c **** 					break;
 4150              		.loc 1 521 0
 4151 1624 0000A0E1 		mov	r0, r0	@ nop
 4152              	.L101:
 522:../proyecto.c ****             }
 523:../proyecto.c ****             state = wait_keyup;                       /* Salta al estado wait_keyup */
 4153              		.loc 1 523 0
 4154 1628 74309FE5 		ldr	r3, .L110+4
 4155 162c 0320A0E3 		mov	r2, #3
 4156 1630 0020C3E5 		strb	r2, [r3, #0]
 524:../proyecto.c ****             break;
 4157              		.loc 1 524 0
 4158 1634 160000EA 		b	.L91
 4159              	.L96:
 525:../proyecto.c **** 		case licenseInput:
 526:../proyecto.c **** 			kpPressedMsg.keyPress = keypad_scan();
 4160              		.loc 1 526 0
 4161 1638 FEFFFFEB 		bl	keypad_scan
 4162 163c 0030A0E1 		mov	r3, r0
 4163 1640 0320A0E1 		mov	r2, r3
 4164 1644 5C309FE5 		ldr	r3, .L110+8
 4165 1648 0320C3E5 		strb	r2, [r3, #3]
 527:../proyecto.c **** 		    state = wait_keyup;
 4166              		.loc 1 527 0
 4167 164c 50309FE5 		ldr	r3, .L110+4
 4168 1650 0320A0E3 		mov	r2, #3
 4169 1654 0020C3E5 		strb	r2, [r3, #0]
 528:../proyecto.c **** 		    kpPressedMsg.flag  = TRUE;
 4170              		.loc 1 528 0
 4171 1658 48309FE5 		ldr	r3, .L110+8
 4172 165c 0120A0E3 		mov	r2, #1
 4173 1660 0020C3E5 		strb	r2, [r3, #0]
 529:../proyecto.c **** 			break;
 4174              		.loc 1 529 0
 4175 1664 0A0000EA 		b	.L91
 4176              	.L97:
 530:../proyecto.c ****         case wait_keyup:                          /* Estado esperando la depresion de teclas  */
 531:../proyecto.c ****             if( !keypad_pressed() )                   /* Chequea si la tecla ya no esta presionada 
 4177              		.loc 1 531 0
 4178 1668 FEFFFFEB 		bl	keypad_pressed
 4179 166c 0030A0E1 		mov	r3, r0
 4180 1670 000053E3 		cmp	r3, #0
 4181 1674 0500001A 		bne	.L109
 532:../proyecto.c ****                 state = wait_keydown;                     /* Salta al estado wait_keydown */
 4182              		.loc 1 532 0
 4183 1678 24309FE5 		ldr	r3, .L110+4
 4184 167c 0020A0E3 		mov	r2, #0
 4185 1680 0020C3E5 		strb	r2, [r3, #0]
 533:../proyecto.c ****             break;
 4186              		.loc 1 533 0
 4187 1684 020000EA 		b	.L91
 4188              	.L108:
 502:../proyecto.c ****             break;
 4189              		.loc 1 502 0
 4190 1688 0000A0E1 		mov	r0, r0	@ nop
 4191 168c 000000EA 		b	.L91
 4192              	.L109:
 4193              		.loc 1 533 0
 4194 1690 0000A0E1 		mov	r0, r0	@ nop
 4195              	.L91:
 534:../proyecto.c ****     }    
 535:../proyecto.c **** }
 4196              		.loc 1 535 0
 4197 1694 0CD04BE2 		sub	sp, fp, #12
 4198 1698 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4199 169c 1EFF2FE1 		bx	lr
 4200              	.L111:
 4201              		.align	2
 4202              	.L110:
 4203 16a0 01000000 		.word	init.4404
 4204 16a4 08000000 		.word	state.4410
 4205 16a8 00000000 		.word	kpPressedMsg
 4206              		.cfi_endproc
 4207              	.LFE5:
 4209              		.align	2
 4210              		.global	coinsMoverTask
 4212              	coinsMoverTask:
 4213              	.LFB6:
 536:../proyecto.c **** 
 537:../proyecto.c **** 
 538:../proyecto.c **** 
 539:../proyecto.c **** /* 
 540:../proyecto.c **** ** Emula el comportamiento del dispositivo que envia las monedas a la alcancia o al cajetin de devo
 541:../proyecto.c **** **   Cada 100 ms muestrea si ha recibido un mensaje de la tarea principal para mover monedas
 542:../proyecto.c **** **   Si van a la alcancia activa durante 1 s los leds y muestra una A en los segs
 543:../proyecto.c **** **   Si van al cajetin de devolucion activa durante 1 segundo los leds y muestra una D en los segs
 544:../proyecto.c **** */
 545:../proyecto.c **** void coinsMoverTask( void )
 546:../proyecto.c **** {
 4214              		.loc 1 546 0
 4215              		.cfi_startproc
 4216              		@ Function supports interworking.
 4217              		@ args = 0, pretend = 0, frame = 0
 4218              		@ frame_needed = 1, uses_anonymous_args = 0
 4219 16ac 0DC0A0E1 		mov	ip, sp
 4220              	.LCFI12:
 4221              		.cfi_def_cfa_register 12
 4222 16b0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4223 16b4 04B04CE2 		sub	fp, ip, #4
 4224              		.cfi_offset 14, -8
 4225              		.cfi_offset 13, -12
 4226              		.cfi_offset 11, -16
 4227              	.LCFI13:
 4228              		.cfi_def_cfa 11, 4
 547:../proyecto.c ****     static boolean init = TRUE;
 548:../proyecto.c ****     static enum { off, on } state;    
 549:../proyecto.c ****     static uint32 ticks;
 550:../proyecto.c ****     
 551:../proyecto.c ****     if( init )
 4229              		.loc 1 551 0
 4230 16b8 0C319FE5 		ldr	r3, .L123
 4231 16bc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4232 16c0 000053E3 		cmp	r3, #0
 4233 16c4 0600000A 		beq	.L113
 552:../proyecto.c ****     {
 553:../proyecto.c ****         init  = FALSE;
 4234              		.loc 1 553 0
 4235 16c8 FC309FE5 		ldr	r3, .L123
 4236 16cc 0020A0E3 		mov	r2, #0
 4237 16d0 0020C3E5 		strb	r2, [r3, #0]
 554:../proyecto.c ****         state = off;
 4238              		.loc 1 554 0
 4239 16d4 F4309FE5 		ldr	r3, .L123+4
 4240 16d8 0020A0E3 		mov	r2, #0
 4241 16dc 0020C3E5 		strb	r2, [r3, #0]
 4242 16e0 360000EA 		b	.L112
 4243              	.L113:
 555:../proyecto.c ****     }
 556:../proyecto.c ****     else switch( state )
 4244              		.loc 1 556 0
 4245 16e4 E4309FE5 		ldr	r3, .L123+4
 4246 16e8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4247 16ec 000053E3 		cmp	r3, #0
 4248 16f0 0200000A 		beq	.L115
 4249 16f4 010053E3 		cmp	r3, #1
 4250 16f8 1B00000A 		beq	.L116
 4251 16fc 2F0000EA 		b	.L112
 4252              	.L115:
 557:../proyecto.c ****     {
 558:../proyecto.c ****         case off:                                /* Estado con leds y 7-segs apagados */
 559:../proyecto.c ****             if( coinsMoverMsg.flag )                /* Chequea si ha recibido mensaje */
 4253              		.loc 1 559 0
 4254 1700 CC309FE5 		ldr	r3, .L123+8
 4255 1704 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4256 1708 000053E3 		cmp	r3, #0
 4257 170c 2800000A 		beq	.L121
 560:../proyecto.c ****             {
 561:../proyecto.c ****                 coinsMoverMsg.flag = FALSE;            /* Marca el mensaje como leido */
 4258              		.loc 1 561 0
 4259 1710 BC309FE5 		ldr	r3, .L123+8
 4260 1714 0020A0E3 		mov	r2, #0
 4261 1718 0020C3E5 		strb	r2, [r3, #0]
 562:../proyecto.c ****                 if( coinsMoverMsg.accept )             /* Muestra el mensaje que corresponda en seg
 4262              		.loc 1 562 0
 4263 171c B0309FE5 		ldr	r3, .L123+8
 4264 1720 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4265 1724 000053E3 		cmp	r3, #0
 4266 1728 0200000A 		beq	.L118
 563:../proyecto.c ****                     segs_putchar( 10 );
 4267              		.loc 1 563 0
 4268 172c 0A00A0E3 		mov	r0, #10
 4269 1730 FEFFFFEB 		bl	segs_putchar
 4270 1734 010000EA 		b	.L119
 4271              	.L118:
 564:../proyecto.c ****                 else
 565:../proyecto.c ****                     segs_putchar( 13 );
 4272              		.loc 1 565 0
 4273 1738 0D00A0E3 		mov	r0, #13
 4274 173c FEFFFFEB 		bl	segs_putchar
 4275              	.L119:
 566:../proyecto.c ****                 led_on( LEFT_LED );                    /* Enciende leds */
 4276              		.loc 1 566 0
 4277 1740 0100A0E3 		mov	r0, #1
 4278 1744 FEFFFFEB 		bl	led_on
 567:../proyecto.c ****                 led_on( RIGHT_LED );
 4279              		.loc 1 567 0
 4280 1748 0200A0E3 		mov	r0, #2
 4281 174c FEFFFFEB 		bl	led_on
 568:../proyecto.c ****                 state = on;                            /* Salta al estado on ... */
 4282              		.loc 1 568 0
 4283 1750 78309FE5 		ldr	r3, .L123+4
 4284 1754 0120A0E3 		mov	r2, #1
 4285 1758 0020C3E5 		strb	r2, [r3, #0]
 569:../proyecto.c ****                 ticks = 10;                            /* ... en el que debera permanecer 10 ticks 
 4286              		.loc 1 569 0
 4287 175c 74309FE5 		ldr	r3, .L123+12
 4288 1760 0A20A0E3 		mov	r2, #10
 4289 1764 002083E5 		str	r2, [r3, #0]
 570:../proyecto.c ****             }
 571:../proyecto.c ****             break;
 4290              		.loc 1 571 0
 4291 1768 140000EA 		b	.L112
 4292              	.L116:
 572:../proyecto.c ****         case on:                                /* Estado con leds y 7-segs encendidos */
 573:../proyecto.c ****             if( !(--ticks) )                        /* Decrementa ticks y chequea si ha permanecido
 4293              		.loc 1 573 0
 4294 176c 64309FE5 		ldr	r3, .L123+12
 4295 1770 003093E5 		ldr	r3, [r3, #0]
 4296 1774 012043E2 		sub	r2, r3, #1
 4297 1778 58309FE5 		ldr	r3, .L123+12
 4298 177c 002083E5 		str	r2, [r3, #0]
 4299 1780 50309FE5 		ldr	r3, .L123+12
 4300 1784 003093E5 		ldr	r3, [r3, #0]
 4301 1788 000053E3 		cmp	r3, #0
 4302 178c 0A00001A 		bne	.L122
 574:../proyecto.c ****             {  
 575:../proyecto.c ****                 segs_off();                            /* Apaga segs */
 4303              		.loc 1 575 0
 4304 1790 FEFFFFEB 		bl	segs_off
 576:../proyecto.c ****                 led_off( LEFT_LED );                   /* Apaga leds */
 4305              		.loc 1 576 0
 4306 1794 0100A0E3 		mov	r0, #1
 4307 1798 FEFFFFEB 		bl	led_off
 577:../proyecto.c ****                 led_off( RIGHT_LED );                                
 4308              		.loc 1 577 0
 4309 179c 0200A0E3 		mov	r0, #2
 4310 17a0 FEFFFFEB 		bl	led_off
 578:../proyecto.c ****                 state = off;                           /* Salta al estado off */
 4311              		.loc 1 578 0
 4312 17a4 24309FE5 		ldr	r3, .L123+4
 4313 17a8 0020A0E3 		mov	r2, #0
 4314 17ac 0020C3E5 		strb	r2, [r3, #0]
 579:../proyecto.c ****             }
 580:../proyecto.c ****             break;
 4315              		.loc 1 580 0
 4316 17b0 020000EA 		b	.L112
 4317              	.L121:
 571:../proyecto.c ****             break;
 4318              		.loc 1 571 0
 4319 17b4 0000A0E1 		mov	r0, r0	@ nop
 4320 17b8 000000EA 		b	.L112
 4321              	.L122:
 4322              		.loc 1 580 0
 4323 17bc 0000A0E1 		mov	r0, r0	@ nop
 4324              	.L112:
 581:../proyecto.c ****     }
 582:../proyecto.c **** }    
 4325              		.loc 1 582 0
 4326 17c0 0CD04BE2 		sub	sp, fp, #12
 4327 17c4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4328 17c8 1EFF2FE1 		bx	lr
 4329              	.L124:
 4330              		.align	2
 4331              	.L123:
 4332 17cc 00000000 		.word	init.4424
 4333 17d0 01000000 		.word	state.4428
 4334 17d4 00000000 		.word	coinsMoverMsg
 4335 17d8 04000000 		.word	ticks.4429
 4336              		.cfi_endproc
 4337              	.LFE6:
 4339              		.align	2
 4340              		.global	selectorTask
 4342              	selectorTask:
 4343              	.LFB7:
 583:../proyecto.c **** 
 584:../proyecto.c **** 
 585:../proyecto.c **** int8 selectorTask(void)
 586:../proyecto.c **** {
 4344              		.loc 1 586 0
 4345              		.cfi_startproc
 4346              		@ Function supports interworking.
 4347              		@ args = 0, pretend = 0, frame = 0
 4348              		@ frame_needed = 1, uses_anonymous_args = 0
 4349 17dc 0DC0A0E1 		mov	ip, sp
 4350              	.LCFI14:
 4351              		.cfi_def_cfa_register 12
 4352 17e0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4353 17e4 04B04CE2 		sub	fp, ip, #4
 4354              		.cfi_offset 14, -8
 4355              		.cfi_offset 13, -12
 4356              		.cfi_offset 11, -16
 4357              	.LCFI15:
 4358              		.cfi_def_cfa 11, 4
 587:../proyecto.c **** 
 588:../proyecto.c **** 	//PUESTO 1
 589:../proyecto.c **** 	if(tsPressedMsg.x < LCD_WIDTH/4 && 64 < tsPressedMsg.y && tsPressedMsg.y < 128)
 4359              		.loc 1 589 0
 4360 17e8 14329FE5 		ldr	r3, .L135
 4361 17ec B230D3E1 		ldrh	r3, [r3, #2]
 4362 17f0 4F0053E3 		cmp	r3, #79
 4363 17f4 0900008A 		bhi	.L126
 4364              		.loc 1 589 0 is_stmt 0 discriminator 1
 4365 17f8 04329FE5 		ldr	r3, .L135
 4366 17fc B430D3E1 		ldrh	r3, [r3, #4]
 4367 1800 400053E3 		cmp	r3, #64
 4368 1804 0500009A 		bls	.L126
 4369 1808 F4319FE5 		ldr	r3, .L135
 4370 180c B430D3E1 		ldrh	r3, [r3, #4]
 4371 1810 7F0053E3 		cmp	r3, #127
 4372 1814 0100008A 		bhi	.L126
 590:../proyecto.c **** 	{
 591:../proyecto.c **** 		return 0;
 4373              		.loc 1 591 0 is_stmt 1
 4374 1818 0030A0E3 		mov	r3, #0
 4375 181c 720000EA 		b	.L127
 4376              	.L126:
 592:../proyecto.c **** 	}
 593:../proyecto.c **** 	//PUESTO 2
 594:../proyecto.c **** 	else if(tsPressedMsg.x > LCD_WIDTH/4 && tsPressedMsg.x < LCD_WIDTH*2/4 &&  64 < tsPressedMsg.y && 
 4377              		.loc 1 594 0
 4378 1820 DC319FE5 		ldr	r3, .L135
 4379 1824 B230D3E1 		ldrh	r3, [r3, #2]
 4380 1828 500053E3 		cmp	r3, #80
 4381 182c 0D00009A 		bls	.L128
 4382              		.loc 1 594 0 is_stmt 0 discriminator 1
 4383 1830 CC319FE5 		ldr	r3, .L135
 4384 1834 B230D3E1 		ldrh	r3, [r3, #2]
 4385 1838 9F0053E3 		cmp	r3, #159
 4386 183c 0900008A 		bhi	.L128
 4387 1840 BC319FE5 		ldr	r3, .L135
 4388 1844 B430D3E1 		ldrh	r3, [r3, #4]
 4389 1848 400053E3 		cmp	r3, #64
 4390 184c 0500009A 		bls	.L128
 4391 1850 AC319FE5 		ldr	r3, .L135
 4392 1854 B430D3E1 		ldrh	r3, [r3, #4]
 4393 1858 7F0053E3 		cmp	r3, #127
 4394 185c 0100008A 		bhi	.L128
 595:../proyecto.c **** 	{
 596:../proyecto.c **** 		return 1;
 4395              		.loc 1 596 0 is_stmt 1
 4396 1860 0130A0E3 		mov	r3, #1
 4397 1864 600000EA 		b	.L127
 4398              	.L128:
 597:../proyecto.c **** 
 598:../proyecto.c **** 	}
 599:../proyecto.c **** 	//PUESTO 3
 600:../proyecto.c **** 	else if(tsPressedMsg.x > LCD_WIDTH*2/4 && tsPressedMsg.x < LCD_WIDTH*3/4 && 64 < tsPressedMsg.y &&
 4399              		.loc 1 600 0
 4400 1868 94319FE5 		ldr	r3, .L135
 4401 186c B230D3E1 		ldrh	r3, [r3, #2]
 4402 1870 A00053E3 		cmp	r3, #160
 4403 1874 0D00009A 		bls	.L129
 4404              		.loc 1 600 0 is_stmt 0 discriminator 1
 4405 1878 84319FE5 		ldr	r3, .L135
 4406 187c B230D3E1 		ldrh	r3, [r3, #2]
 4407 1880 EF0053E3 		cmp	r3, #239
 4408 1884 0900008A 		bhi	.L129
 4409 1888 74319FE5 		ldr	r3, .L135
 4410 188c B430D3E1 		ldrh	r3, [r3, #4]
 4411 1890 400053E3 		cmp	r3, #64
 4412 1894 0500009A 		bls	.L129
 4413 1898 64319FE5 		ldr	r3, .L135
 4414 189c B430D3E1 		ldrh	r3, [r3, #4]
 4415 18a0 7F0053E3 		cmp	r3, #127
 4416 18a4 0100008A 		bhi	.L129
 601:../proyecto.c **** 	{
 602:../proyecto.c **** 		return 2;
 4417              		.loc 1 602 0 is_stmt 1
 4418 18a8 0230A0E3 		mov	r3, #2
 4419 18ac 4E0000EA 		b	.L127
 4420              	.L129:
 603:../proyecto.c **** 
 604:../proyecto.c **** 	}
 605:../proyecto.c **** 	//PUESTO 4
 606:../proyecto.c **** 	else if(tsPressedMsg.x > LCD_WIDTH*3/4 && 64 < tsPressedMsg.y && tsPressedMsg.y < 128)
 4421              		.loc 1 606 0
 4422 18b0 4C319FE5 		ldr	r3, .L135
 4423 18b4 B230D3E1 		ldrh	r3, [r3, #2]
 4424 18b8 F00053E3 		cmp	r3, #240
 4425 18bc 0900009A 		bls	.L130
 4426              		.loc 1 606 0 is_stmt 0 discriminator 1
 4427 18c0 3C319FE5 		ldr	r3, .L135
 4428 18c4 B430D3E1 		ldrh	r3, [r3, #4]
 4429 18c8 400053E3 		cmp	r3, #64
 4430 18cc 0500009A 		bls	.L130
 4431 18d0 2C319FE5 		ldr	r3, .L135
 4432 18d4 B430D3E1 		ldrh	r3, [r3, #4]
 4433 18d8 7F0053E3 		cmp	r3, #127
 4434 18dc 0100008A 		bhi	.L130
 607:../proyecto.c **** 	{
 608:../proyecto.c **** 		return 3;
 4435              		.loc 1 608 0 is_stmt 1
 4436 18e0 0330A0E3 		mov	r3, #3
 4437 18e4 400000EA 		b	.L127
 4438              	.L130:
 609:../proyecto.c **** 
 610:../proyecto.c **** 	}
 611:../proyecto.c **** 	//PUESTO 5
 612:../proyecto.c **** 	else if(tsPressedMsg.x > LCD_WIDTH/4 && tsPressedMsg.x < LCD_WIDTH*2/4 && 128 < tsPressedMsg.y && 
 4439              		.loc 1 612 0
 4440 18e8 14319FE5 		ldr	r3, .L135
 4441 18ec B230D3E1 		ldrh	r3, [r3, #2]
 4442 18f0 500053E3 		cmp	r3, #80
 4443 18f4 0D00009A 		bls	.L131
 4444              		.loc 1 612 0 is_stmt 0 discriminator 1
 4445 18f8 04319FE5 		ldr	r3, .L135
 4446 18fc B230D3E1 		ldrh	r3, [r3, #2]
 4447 1900 9F0053E3 		cmp	r3, #159
 4448 1904 0900008A 		bhi	.L131
 4449 1908 F4309FE5 		ldr	r3, .L135
 4450 190c B430D3E1 		ldrh	r3, [r3, #4]
 4451 1910 800053E3 		cmp	r3, #128
 4452 1914 0500009A 		bls	.L131
 4453 1918 E4309FE5 		ldr	r3, .L135
 4454 191c B430D3E1 		ldrh	r3, [r3, #4]
 4455 1920 BF0053E3 		cmp	r3, #191
 4456 1924 0100008A 		bhi	.L131
 613:../proyecto.c **** 	{
 614:../proyecto.c **** 		return 4;
 4457              		.loc 1 614 0 is_stmt 1
 4458 1928 0430A0E3 		mov	r3, #4
 4459 192c 2E0000EA 		b	.L127
 4460              	.L131:
 615:../proyecto.c **** 
 616:../proyecto.c **** 	}
 617:../proyecto.c **** 	//PUESTO 6
 618:../proyecto.c **** 	else if(tsPressedMsg.x > LCD_WIDTH*2/4 && tsPressedMsg.x < LCD_WIDTH*3/4 && 128 < tsPressedMsg.y &
 4461              		.loc 1 618 0
 4462 1930 CC309FE5 		ldr	r3, .L135
 4463 1934 B230D3E1 		ldrh	r3, [r3, #2]
 4464 1938 A00053E3 		cmp	r3, #160
 4465 193c 0D00009A 		bls	.L132
 4466              		.loc 1 618 0 is_stmt 0 discriminator 1
 4467 1940 BC309FE5 		ldr	r3, .L135
 4468 1944 B230D3E1 		ldrh	r3, [r3, #2]
 4469 1948 EF0053E3 		cmp	r3, #239
 4470 194c 0900008A 		bhi	.L132
 4471 1950 AC309FE5 		ldr	r3, .L135
 4472 1954 B430D3E1 		ldrh	r3, [r3, #4]
 4473 1958 800053E3 		cmp	r3, #128
 4474 195c 0500009A 		bls	.L132
 4475 1960 9C309FE5 		ldr	r3, .L135
 4476 1964 B430D3E1 		ldrh	r3, [r3, #4]
 4477 1968 BF0053E3 		cmp	r3, #191
 4478 196c 0100008A 		bhi	.L132
 619:../proyecto.c **** 	{
 620:../proyecto.c **** 		return 5;
 4479              		.loc 1 620 0 is_stmt 1
 4480 1970 0530A0E3 		mov	r3, #5
 4481 1974 1C0000EA 		b	.L127
 4482              	.L132:
 621:../proyecto.c **** 
 622:../proyecto.c **** 	}
 623:../proyecto.c **** 	//PUESTO 7
 624:../proyecto.c **** 	else if(tsPressedMsg.x < LCD_WIDTH*3/4 && 128 < tsPressedMsg.y && tsPressedMsg.y < 192)
 4483              		.loc 1 624 0
 4484 1978 84309FE5 		ldr	r3, .L135
 4485 197c B230D3E1 		ldrh	r3, [r3, #2]
 4486 1980 EF0053E3 		cmp	r3, #239
 4487 1984 0900008A 		bhi	.L133
 4488              		.loc 1 624 0 is_stmt 0 discriminator 1
 4489 1988 74309FE5 		ldr	r3, .L135
 4490 198c B430D3E1 		ldrh	r3, [r3, #4]
 4491 1990 800053E3 		cmp	r3, #128
 4492 1994 0500009A 		bls	.L133
 4493 1998 64309FE5 		ldr	r3, .L135
 4494 199c B430D3E1 		ldrh	r3, [r3, #4]
 4495 19a0 BF0053E3 		cmp	r3, #191
 4496 19a4 0100008A 		bhi	.L133
 625:../proyecto.c **** 	{
 626:../proyecto.c **** 		return 6;
 4497              		.loc 1 626 0 is_stmt 1
 4498 19a8 0630A0E3 		mov	r3, #6
 4499 19ac 0E0000EA 		b	.L127
 4500              	.L133:
 627:../proyecto.c **** 
 628:../proyecto.c **** 	}
 629:../proyecto.c **** 	//PUESTO 8
 630:../proyecto.c **** 	else if( tsPressedMsg.x > LCD_WIDTH*3/4 && 128 < tsPressedMsg.y && tsPressedMsg.y < 192 )
 4501              		.loc 1 630 0
 4502 19b0 4C309FE5 		ldr	r3, .L135
 4503 19b4 B230D3E1 		ldrh	r3, [r3, #2]
 4504 19b8 F00053E3 		cmp	r3, #240
 4505 19bc 0900009A 		bls	.L134
 4506              		.loc 1 630 0 is_stmt 0 discriminator 1
 4507 19c0 3C309FE5 		ldr	r3, .L135
 4508 19c4 B430D3E1 		ldrh	r3, [r3, #4]
 4509 19c8 800053E3 		cmp	r3, #128
 4510 19cc 0500009A 		bls	.L134
 4511 19d0 2C309FE5 		ldr	r3, .L135
 4512 19d4 B430D3E1 		ldrh	r3, [r3, #4]
 4513 19d8 BF0053E3 		cmp	r3, #191
 4514 19dc 0100008A 		bhi	.L134
 631:../proyecto.c **** 	{
 632:../proyecto.c **** 		return 7;
 4515              		.loc 1 632 0 is_stmt 1
 4516 19e0 0730A0E3 		mov	r3, #7
 4517 19e4 000000EA 		b	.L127
 4518              	.L134:
 633:../proyecto.c **** 	}
 634:../proyecto.c **** 	return -1;
 4519              		.loc 1 634 0
 4520 19e8 FF30A0E3 		mov	r3, #255
 4521              	.L127:
 4522 19ec 033CA0E1 		mov	r3, r3, asl #24
 4523 19f0 433CA0E1 		mov	r3, r3, asr #24
 635:../proyecto.c **** 
 636:../proyecto.c **** }
 4524              		.loc 1 636 0
 4525 19f4 0300A0E1 		mov	r0, r3
 4526 19f8 0CD04BE2 		sub	sp, fp, #12
 4527 19fc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4528 1a00 1EFF2FE1 		bx	lr
 4529              	.L136:
 4530              		.align	2
 4531              	.L135:
 4532 1a04 00000000 		.word	tsPressedMsg
 4533              		.cfi_endproc
 4534              	.LFE7:
 4536              		.align	2
 4537              		.global	setup
 4539              	setup:
 4540              	.LFB8:
 637:../proyecto.c **** 
 638:../proyecto.c **** 
 639:../proyecto.c **** /*******************************************************************/
 640:../proyecto.c **** 
 641:../proyecto.c **** /*
 642:../proyecto.c **** ** Inicializa flags, mailboxes y variables globales
 643:../proyecto.c **** */
 644:../proyecto.c **** void setup( void )
 645:../proyecto.c **** {
 4541              		.loc 1 645 0
 4542              		.cfi_startproc
 4543              		@ Function supports interworking.
 4544              		@ args = 0, pretend = 0, frame = 0
 4545              		@ frame_needed = 1, uses_anonymous_args = 0
 4546 1a08 0DC0A0E1 		mov	ip, sp
 4547              	.LCFI16:
 4548              		.cfi_def_cfa_register 12
 4549 1a0c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4550 1a10 04B04CE2 		sub	fp, ip, #4
 4551              		.cfi_offset 14, -8
 4552              		.cfi_offset 13, -12
 4553              		.cfi_offset 11, -16
 4554              	.LCFI17:
 4555              		.cfi_def_cfa 11, 4
 646:../proyecto.c ****     kpPressedMsg.flag  = FALSE;
 4556              		.loc 1 646 0
 4557 1a14 7C309FE5 		ldr	r3, .L138
 4558 1a18 0020A0E3 		mov	r2, #0
 4559 1a1c 0020C3E5 		strb	r2, [r3, #0]
 647:../proyecto.c ****     kpPressedMsg.licPlateInput = FALSE;
 4560              		.loc 1 647 0
 4561 1a20 70309FE5 		ldr	r3, .L138
 4562 1a24 0020A0E3 		mov	r2, #0
 4563 1a28 0120C3E5 		strb	r2, [r3, #1]
 648:../proyecto.c ****     kpPressedMsg.cents = 0;
 4564              		.loc 1 648 0
 4565 1a2c 64309FE5 		ldr	r3, .L138
 4566 1a30 0020A0E3 		mov	r2, #0
 4567 1a34 0220C3E5 		strb	r2, [r3, #2]
 649:../proyecto.c **** 
 650:../proyecto.c ****     tsPressedMsg.flag     = FALSE;
 4568              		.loc 1 650 0
 4569 1a38 5C309FE5 		ldr	r3, .L138+4
 4570 1a3c 0020A0E3 		mov	r2, #0
 4571 1a40 0020C3E5 		strb	r2, [r3, #0]
 651:../proyecto.c ****     tsPressedMsg.langFlag = FALSE;
 4572              		.loc 1 651 0
 4573 1a44 50309FE5 		ldr	r3, .L138+4
 4574 1a48 0020A0E3 		mov	r2, #0
 4575 1a4c 0120C3E5 		strb	r2, [r3, #1]
 652:../proyecto.c ****     tsPressedMsg.x        = 0;
 4576              		.loc 1 652 0
 4577 1a50 44309FE5 		ldr	r3, .L138+4
 4578 1a54 0020A0E3 		mov	r2, #0
 4579 1a58 B220C3E1 		strh	r2, [r3, #2]	@ movhi
 653:../proyecto.c ****     tsPressedMsg.y        = 0;
 4580              		.loc 1 653 0
 4581 1a5c 38309FE5 		ldr	r3, .L138+4
 4582 1a60 0020A0E3 		mov	r2, #0
 4583 1a64 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 654:../proyecto.c **** 
 655:../proyecto.c ****     coinsMoverMsg.flag    = FALSE;
 4584              		.loc 1 655 0
 4585 1a68 30309FE5 		ldr	r3, .L138+8
 4586 1a6c 0020A0E3 		mov	r2, #0
 4587 1a70 0020C3E5 		strb	r2, [r3, #0]
 656:../proyecto.c ****     coinsMoverMsg.accept  = FALSE;
 4588              		.loc 1 656 0
 4589 1a74 24309FE5 		ldr	r3, .L138+8
 4590 1a78 0020A0E3 		mov	r2, #0
 4591 1a7c 0120C3E5 		strb	r2, [r3, #1]
 657:../proyecto.c **** 
 658:../proyecto.c ****     ticketMsg.flag       = FALSE;
 4592              		.loc 1 658 0
 4593 1a80 1C309FE5 		ldr	r3, .L138+12
 4594 1a84 0020A0E3 		mov	r2, #0
 4595 1a88 0020C3E5 		strb	r2, [r3, #0]
 659:../proyecto.c **** }
 4596              		.loc 1 659 0
 4597 1a8c 0CD04BE2 		sub	sp, fp, #12
 4598 1a90 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4599 1a94 1EFF2FE1 		bx	lr
 4600              	.L139:
 4601              		.align	2
 4602              	.L138:
 4603 1a98 00000000 		.word	kpPressedMsg
 4604 1a9c 00000000 		.word	tsPressedMsg
 4605 1aa0 00000000 		.word	coinsMoverMsg
 4606 1aa4 00000000 		.word	ticketMsg
 4607              		.cfi_endproc
 4608              	.LFE8:
 4610              		.align	2
 4611              		.global	plotState
 4613              	plotState:
 4614              	.LFB9:
 660:../proyecto.c **** 
 661:../proyecto.c **** void plotState(state_t state, uint8 placeSelected)
 662:../proyecto.c **** {
 4615              		.loc 1 662 0
 4616              		.cfi_startproc
 4617              		@ Function supports interworking.
 4618              		@ args = 0, pretend = 0, frame = 8
 4619              		@ frame_needed = 1, uses_anonymous_args = 0
 4620 1aa8 0DC0A0E1 		mov	ip, sp
 4621              	.LCFI18:
 4622              		.cfi_def_cfa_register 12
 4623 1aac 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4624 1ab0 04B04CE2 		sub	fp, ip, #4
 4625              		.cfi_offset 14, -8
 4626              		.cfi_offset 13, -12
 4627              		.cfi_offset 11, -16
 4628              	.LCFI19:
 4629              		.cfi_def_cfa 11, 4
 4630 1ab4 10D04DE2 		sub	sp, sp, #16
 4631 1ab8 0020A0E1 		mov	r2, r0
 4632 1abc 0130A0E1 		mov	r3, r1
 4633 1ac0 0D204BE5 		strb	r2, [fp, #-13]
 4634 1ac4 0E304BE5 		strb	r3, [fp, #-14]
 663:../proyecto.c **** 	switch(state)
 4635              		.loc 1 663 0
 4636 1ac8 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 4637 1acc 070053E3 		cmp	r3, #7
 4638 1ad0 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 4639 1ad4 350000EA 		b	.L140
 4640              	.L150:
 4641 1ad8 F81A0000 		.word	.L142
 4642 1adc 001B0000 		.word	.L143
 4643 1ae0 081B0000 		.word	.L144
 4644 1ae4 141B0000 		.word	.L145
 4645 1ae8 541B0000 		.word	.L146
 4646 1aec 701B0000 		.word	.L147
 4647 1af0 8C1B0000 		.word	.L148
 4648 1af4 A81B0000 		.word	.L149
 4649              	.L142:
 664:../proyecto.c **** 	{
 665:../proyecto.c **** 	case language:
 666:../proyecto.c **** 		plotLangSelScreen();
 4650              		.loc 1 666 0
 4651 1af8 FEFFFFEB 		bl	plotLangSelScreen
 667:../proyecto.c **** 		break;
 4652              		.loc 1 667 0
 4653 1afc 2B0000EA 		b	.L140
 4654              	.L143:
 668:../proyecto.c **** 	case waiting:
 669:../proyecto.c **** 		plotWelcomeScreen();
 4655              		.loc 1 669 0
 4656 1b00 FEFFFFEB 		bl	plotWelcomeScreen
 670:../proyecto.c **** 		break;
 4657              		.loc 1 670 0
 4658 1b04 290000EA 		b	.L140
 4659              	.L144:
 671:../proyecto.c **** 	case selection:
 672:../proyecto.c **** 		plotSelectionScreen(parking);
 4660              		.loc 1 672 0
 4661 1b08 AC009FE5 		ldr	r0, .L151
 4662 1b0c FEFFFFEB 		bl	plotSelectionScreen
 673:../proyecto.c **** 		break;
 4663              		.loc 1 673 0
 4664 1b10 260000EA 		b	.L140
 4665              	.L145:
 674:../proyecto.c **** 	case payment:
 675:../proyecto.c **** 		plotPaymentScreen(parking[placeSelected],parking[placeSelected].credit);
 4666              		.loc 1 675 0
 4667 1b14 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 4668 1b18 0E105BE5 		ldrb	r1, [fp, #-14]	@ zero_extendqisi2
 4669 1b1c 98009FE5 		ldr	r0, .L151
 4670 1b20 0820A0E3 		mov	r2, #8
 4671 1b24 0112A0E1 		mov	r1, r1, asl #4
 4672 1b28 011080E0 		add	r1, r0, r1
 4673 1b2c 022081E0 		add	r2, r1, r2
 4674 1b30 B420D2E1 		ldrh	r2, [r2, #4]
 4675 1b34 FF1002E2 		and	r1, r2, #255
 4676 1b38 7C209FE5 		ldr	r2, .L151
 4677 1b3c 00108DE5 		str	r1, [sp, #0]
 4678 1b40 0332A0E1 		mov	r3, r3, asl #4
 4679 1b44 033082E0 		add	r3, r2, r3
 4680 1b48 0F0093E8 		ldmia	r3, {r0, r1, r2, r3}
 4681 1b4c FEFFFFEB 		bl	plotPaymentScreen
 676:../proyecto.c **** 		break;
 4682              		.loc 1 676 0
 4683 1b50 160000EA 		b	.L140
 4684              	.L146:
 677:../proyecto.c **** 	case licPlateInput:
 678:../proyecto.c **** 		plotLicPlateScreen(parking[placeSelected]);
 4685              		.loc 1 678 0
 4686 1b54 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 4687 1b58 5C209FE5 		ldr	r2, .L151
 4688 1b5c 0332A0E1 		mov	r3, r3, asl #4
 4689 1b60 033082E0 		add	r3, r2, r3
 4690 1b64 0F0093E8 		ldmia	r3, {r0, r1, r2, r3}
 4691 1b68 FEFFFFEB 		bl	plotLicPlateScreen
 679:../proyecto.c **** 		break;
 4692              		.loc 1 679 0
 4693 1b6c 0F0000EA 		b	.L140
 4694              	.L147:
 680:../proyecto.c **** 	case success:
 681:../proyecto.c **** 		plotSucScreen(parking[placeSelected]);
 4695              		.loc 1 681 0
 4696 1b70 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 4697 1b74 40209FE5 		ldr	r2, .L151
 4698 1b78 0332A0E1 		mov	r3, r3, asl #4
 4699 1b7c 033082E0 		add	r3, r2, r3
 4700 1b80 0F0093E8 		ldmia	r3, {r0, r1, r2, r3}
 4701 1b84 FEFFFFEB 		bl	plotSucScreen
 682:../proyecto.c **** 		break;
 4702              		.loc 1 682 0
 4703 1b88 080000EA 		b	.L140
 4704              	.L148:
 683:../proyecto.c **** 	case error:
 684:../proyecto.c **** 		plotErrorScreen(parking[placeSelected]);
 4705              		.loc 1 684 0
 4706 1b8c 0E305BE5 		ldrb	r3, [fp, #-14]	@ zero_extendqisi2
 4707 1b90 24209FE5 		ldr	r2, .L151
 4708 1b94 0332A0E1 		mov	r3, r3, asl #4
 4709 1b98 033082E0 		add	r3, r2, r3
 4710 1b9c 0F0093E8 		ldmia	r3, {r0, r1, r2, r3}
 4711 1ba0 FEFFFFEB 		bl	plotErrorScreen
 685:../proyecto.c **** 		break;
 4712              		.loc 1 685 0
 4713 1ba4 010000EA 		b	.L140
 4714              	.L149:
 686:../proyecto.c **** 	case exit:
 687:../proyecto.c **** 		plotLicPlateDemand();
 4715              		.loc 1 687 0
 4716 1ba8 FEFFFFEB 		bl	plotLicPlateDemand
 688:../proyecto.c **** 		break;
 4717              		.loc 1 688 0
 4718 1bac 0000A0E1 		mov	r0, r0	@ nop
 4719              	.L140:
 689:../proyecto.c **** 	}
 690:../proyecto.c **** }
 4720              		.loc 1 690 0
 4721 1bb0 0CD04BE2 		sub	sp, fp, #12
 4722 1bb4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4723 1bb8 1EFF2FE1 		bx	lr
 4724              	.L152:
 4725              		.align	2
 4726              	.L151:
 4727 1bbc 00000000 		.word	parking
 4728              		.cfi_endproc
 4729              	.LFE9:
 4731              		.align	2
 4732              		.global	getMonthdays
 4734              	getMonthdays:
 4735              	.LFB10:
 691:../proyecto.c **** 
 692:../proyecto.c **** uint8 getMonthdays(uint8 month){
 4736              		.loc 1 692 0
 4737              		.cfi_startproc
 4738              		@ Function supports interworking.
 4739              		@ args = 0, pretend = 0, frame = 16
 4740              		@ frame_needed = 1, uses_anonymous_args = 0
 4741 1bc0 0DC0A0E1 		mov	ip, sp
 4742              	.LCFI20:
 4743              		.cfi_def_cfa_register 12
 4744 1bc4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4745 1bc8 04B04CE2 		sub	fp, ip, #4
 4746              		.cfi_offset 14, -8
 4747              		.cfi_offset 13, -12
 4748              		.cfi_offset 11, -16
 4749              	.LCFI21:
 4750              		.cfi_def_cfa 11, 4
 4751 1bcc 10D04DE2 		sub	sp, sp, #16
 4752 1bd0 0030A0E1 		mov	r3, r0
 4753 1bd4 15304BE5 		strb	r3, [fp, #-21]
 693:../proyecto.c **** 	uint8 totdays;
 694:../proyecto.c **** 	if(month == 2)
 4754              		.loc 1 694 0
 4755 1bd8 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 4756 1bdc 020053E3 		cmp	r3, #2
 4757 1be0 0200001A 		bne	.L154
 695:../proyecto.c **** 		totdays = 28;
 4758              		.loc 1 695 0
 4759 1be4 1C30A0E3 		mov	r3, #28
 4760 1be8 0D304BE5 		strb	r3, [fp, #-13]
 4761 1bec 120000EA 		b	.L155
 4762              	.L154:
 696:../proyecto.c **** 	else if((month < 8 && month%2) || (month <= 8 && !month%2))
 4763              		.loc 1 696 0
 4764 1bf0 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 4765 1bf4 070053E3 		cmp	r3, #7
 4766 1bf8 0400008A 		bhi	.L156
 4767              		.loc 1 696 0 is_stmt 0 discriminator 1
 4768 1bfc 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 4769 1c00 013003E2 		and	r3, r3, #1
 4770 1c04 FF3003E2 		and	r3, r3, #255
 4771 1c08 000053E3 		cmp	r3, #0
 4772 1c0c 0500001A 		bne	.L157
 4773              	.L156:
 4774              		.loc 1 696 0 discriminator 2
 4775 1c10 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 4776 1c14 080053E3 		cmp	r3, #8
 4777 1c18 0500008A 		bhi	.L158
 4778              		.loc 1 696 0 discriminator 1
 4779 1c1c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 4780 1c20 000053E3 		cmp	r3, #0
 4781 1c24 0200001A 		bne	.L158
 4782              	.L157:
 697:../proyecto.c **** 		totdays = 31;
 4783              		.loc 1 697 0 is_stmt 1
 4784 1c28 1F30A0E3 		mov	r3, #31
 4785 1c2c 0D304BE5 		strb	r3, [fp, #-13]
 4786 1c30 010000EA 		b	.L155
 4787              	.L158:
 698:../proyecto.c **** 	else
 699:../proyecto.c **** 		totdays = 30;
 4788              		.loc 1 699 0
 4789 1c34 1E30A0E3 		mov	r3, #30
 4790 1c38 0D304BE5 		strb	r3, [fp, #-13]
 4791              	.L155:
 700:../proyecto.c **** 
 701:../proyecto.c **** 	return totdays;
 4792              		.loc 1 701 0
 4793 1c3c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 702:../proyecto.c **** }
 4794              		.loc 1 702 0
 4795 1c40 0300A0E1 		mov	r0, r3
 4796 1c44 0CD04BE2 		sub	sp, fp, #12
 4797 1c48 00689DE8 		ldmfd	sp, {fp, sp, lr}
 4798 1c4c 1EFF2FE1 		bx	lr
 4799              		.cfi_endproc
 4800              	.LFE10:
 4802              		.align	2
 4803              		.global	updateDeadline
 4805              	updateDeadline:
 4806              	.LFB11:
 703:../proyecto.c **** 
 704:../proyecto.c **** 
 705:../proyecto.c **** void updateDeadline(uint16 credit, rtc_time_t * deadline)
 706:../proyecto.c **** {
 4807              		.loc 1 706 0
 4808              		.cfi_startproc
 4809              		@ Function supports interworking.
 4810              		@ args = 0, pretend = 0, frame = 16
 4811              		@ frame_needed = 1, uses_anonymous_args = 0
 4812 1c50 0DC0A0E1 		mov	ip, sp
 4813              	.LCFI22:
 4814              		.cfi_def_cfa_register 12
 4815 1c54 10D82DE9 		stmfd	sp!, {r4, fp, ip, lr, pc}
 4816 1c58 04B04CE2 		sub	fp, ip, #4
 4817              		.cfi_offset 14, -8
 4818              		.cfi_offset 13, -12
 4819              		.cfi_offset 11, -16
 4820              		.cfi_offset 4, -20
 4821              	.LCFI23:
 4822              		.cfi_def_cfa 11, 4
 4823 1c5c 14D04DE2 		sub	sp, sp, #20
 4824 1c60 0030A0E1 		mov	r3, r0
 4825 1c64 24100BE5 		str	r1, [fp, #-36]
 4826 1c68 BE314BE1 		strh	r3, [fp, #-30]	@ movhi
 707:../proyecto.c **** 	uint8 hours = credit/60;
 4827              		.loc 1 707 0
 4828 1c6c BE215BE1 		ldrh	r2, [fp, #-30]
 4829 1c70 C4319FE5 		ldr	r3, .L164
 4830 1c74 921383E0 		umull	r1, r3, r2, r3
 4831 1c78 A332A0E1 		mov	r3, r3, lsr #5
 4832 1c7c 0338A0E1 		mov	r3, r3, asl #16
 4833 1c80 2338A0E1 		mov	r3, r3, lsr #16
 4834 1c84 15304BE5 		strb	r3, [fp, #-21]
 708:../proyecto.c **** 	uint8 mins = credit%60;
 4835              		.loc 1 708 0
 4836 1c88 BE215BE1 		ldrh	r2, [fp, #-30]
 4837 1c8c A8319FE5 		ldr	r3, .L164
 4838 1c90 921383E0 		umull	r1, r3, r2, r3
 4839 1c94 A312A0E1 		mov	r1, r3, lsr #5
 4840 1c98 0130A0E1 		mov	r3, r1
 4841 1c9c 0332A0E1 		mov	r3, r3, asl #4
 4842 1ca0 033061E0 		rsb	r3, r1, r3
 4843 1ca4 0331A0E1 		mov	r3, r3, asl #2
 4844 1ca8 023063E0 		rsb	r3, r3, r2
 4845 1cac 0338A0E1 		mov	r3, r3, asl #16
 4846 1cb0 2338A0E1 		mov	r3, r3, lsr #16
 4847 1cb4 16304BE5 		strb	r3, [fp, #-22]
 709:../proyecto.c **** 
 710:../proyecto.c **** 	if((deadline->min += mins) >= 60){
 4848              		.loc 1 710 0
 4849 1cb8 24301BE5 		ldr	r3, [fp, #-36]
 4850 1cbc 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 4851 1cc0 16305BE5 		ldrb	r3, [fp, #-22]
 4852 1cc4 033082E0 		add	r3, r2, r3
 4853 1cc8 FF2003E2 		and	r2, r3, #255
 4854 1ccc 24301BE5 		ldr	r3, [fp, #-36]
 4855 1cd0 0120C3E5 		strb	r2, [r3, #1]
 4856 1cd4 24301BE5 		ldr	r3, [fp, #-36]
 4857 1cd8 0130D3E5 		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4858 1cdc 3B0053E3 		cmp	r3, #59
 4859 1ce0 1200009A 		bls	.L160
 711:../proyecto.c **** 		deadline->hour++;
 4860              		.loc 1 711 0
 4861 1ce4 24301BE5 		ldr	r3, [fp, #-36]
 4862 1ce8 0230D3E5 		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4863 1cec 013083E2 		add	r3, r3, #1
 4864 1cf0 FF2003E2 		and	r2, r3, #255
 4865 1cf4 24301BE5 		ldr	r3, [fp, #-36]
 4866 1cf8 0220C3E5 		strb	r2, [r3, #2]
 712:../proyecto.c **** 		deadline->min %= 60;
 4867              		.loc 1 712 0
 4868 1cfc 24301BE5 		ldr	r3, [fp, #-36]
 4869 1d00 0120D3E5 		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 4870 1d04 30319FE5 		ldr	r3, .L164
 4871 1d08 921383E0 		umull	r1, r3, r2, r3
 4872 1d0c A312A0E1 		mov	r1, r3, lsr #5
 4873 1d10 0130A0E1 		mov	r3, r1
 4874 1d14 0332A0E1 		mov	r3, r3, asl #4
 4875 1d18 033061E0 		rsb	r3, r1, r3
 4876 1d1c 0331A0E1 		mov	r3, r3, asl #2
 4877 1d20 023063E0 		rsb	r3, r3, r2
 4878 1d24 FF2003E2 		and	r2, r3, #255
 4879 1d28 24301BE5 		ldr	r3, [fp, #-36]
 4880 1d2c 0120C3E5 		strb	r2, [r3, #1]
 4881              	.L160:
 713:../proyecto.c **** 	}
 714:../proyecto.c **** 	if((deadline->hour += hours) >= 24){
 4882              		.loc 1 714 0
 4883 1d30 24301BE5 		ldr	r3, [fp, #-36]
 4884 1d34 0220D3E5 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 4885 1d38 15305BE5 		ldrb	r3, [fp, #-21]
 4886 1d3c 033082E0 		add	r3, r2, r3
 4887 1d40 FF2003E2 		and	r2, r3, #255
 4888 1d44 24301BE5 		ldr	r3, [fp, #-36]
 4889 1d48 0220C3E5 		strb	r2, [r3, #2]
 4890 1d4c 24301BE5 		ldr	r3, [fp, #-36]
 4891 1d50 0230D3E5 		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 4892 1d54 170053E3 		cmp	r3, #23
 4893 1d58 1800009A 		bls	.L161
 715:../proyecto.c **** 		deadline->hour %= 24;
 4894              		.loc 1 715 0
 4895 1d5c 24301BE5 		ldr	r3, [fp, #-36]
 4896 1d60 0220D3E5 		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 4897 1d64 D4309FE5 		ldr	r3, .L164+4
 4898 1d68 921383E0 		umull	r1, r3, r2, r3
 4899 1d6c 2312A0E1 		mov	r1, r3, lsr #4
 4900 1d70 0130A0E1 		mov	r3, r1
 4901 1d74 8330A0E1 		mov	r3, r3, asl #1
 4902 1d78 013083E0 		add	r3, r3, r1
 4903 1d7c 8331A0E1 		mov	r3, r3, asl #3
 4904 1d80 023063E0 		rsb	r3, r3, r2
 4905 1d84 FF2003E2 		and	r2, r3, #255
 4906 1d88 24301BE5 		ldr	r3, [fp, #-36]
 4907 1d8c 0220C3E5 		strb	r2, [r3, #2]
 716:../proyecto.c **** 		deadline->mday++;
 4908              		.loc 1 716 0
 4909 1d90 24301BE5 		ldr	r3, [fp, #-36]
 4910 1d94 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4911 1d98 013083E2 		add	r3, r3, #1
 4912 1d9c FF2003E2 		and	r2, r3, #255
 4913 1da0 24301BE5 		ldr	r3, [fp, #-36]
 4914 1da4 0320C3E5 		strb	r2, [r3, #3]
 717:../proyecto.c **** 		deadline->wday++;
 4915              		.loc 1 717 0
 4916 1da8 24301BE5 		ldr	r3, [fp, #-36]
 4917 1dac 0430D3E5 		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4918 1db0 013083E2 		add	r3, r3, #1
 4919 1db4 FF2003E2 		and	r2, r3, #255
 4920 1db8 24301BE5 		ldr	r3, [fp, #-36]
 4921 1dbc 0420C3E5 		strb	r2, [r3, #4]
 4922              	.L161:
 718:../proyecto.c **** 	}
 719:../proyecto.c **** 	if(deadline->mday > getMonthdays(deadline->mon)){
 4923              		.loc 1 719 0
 4924 1dc0 24301BE5 		ldr	r3, [fp, #-36]
 4925 1dc4 0340D3E5 		ldrb	r4, [r3, #3]	@ zero_extendqisi2
 4926 1dc8 24301BE5 		ldr	r3, [fp, #-36]
 4927 1dcc 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4928 1dd0 0300A0E1 		mov	r0, r3
 4929 1dd4 FEFFFFEB 		bl	getMonthdays
 4930 1dd8 0030A0E1 		mov	r3, r0
 4931 1ddc 030054E1 		cmp	r4, r3
 4932 1de0 0800009A 		bls	.L162
 720:../proyecto.c **** 		deadline->mon++;
 4933              		.loc 1 720 0
 4934 1de4 24301BE5 		ldr	r3, [fp, #-36]
 4935 1de8 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4936 1dec 013083E2 		add	r3, r3, #1
 4937 1df0 FF2003E2 		and	r2, r3, #255
 4938 1df4 24301BE5 		ldr	r3, [fp, #-36]
 4939 1df8 0520C3E5 		strb	r2, [r3, #5]
 721:../proyecto.c **** 		deadline->mday = 1;
 4940              		.loc 1 721 0
 4941 1dfc 24301BE5 		ldr	r3, [fp, #-36]
 4942 1e00 0120A0E3 		mov	r2, #1
 4943 1e04 0320C3E5 		strb	r2, [r3, #3]
 4944              	.L162:
 722:../proyecto.c **** 	}
 723:../proyecto.c **** 	if(deadline->mon > 12)
 4945              		.loc 1 723 0
 4946 1e08 24301BE5 		ldr	r3, [fp, #-36]
 4947 1e0c 0530D3E5 		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4948 1e10 0C0053E3 		cmp	r3, #12
 4949 1e14 0500009A 		bls	.L159
 724:../proyecto.c **** 		deadline->year++;
 4950              		.loc 1 724 0
 4951 1e18 24301BE5 		ldr	r3, [fp, #-36]
 4952 1e1c 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 4953 1e20 013083E2 		add	r3, r3, #1
 4954 1e24 FF2003E2 		and	r2, r3, #255
 4955 1e28 24301BE5 		ldr	r3, [fp, #-36]
 4956 1e2c 0620C3E5 		strb	r2, [r3, #6]
 4957              	.L159:
 725:../proyecto.c **** 
 726:../proyecto.c **** 
 727:../proyecto.c **** }
 4958              		.loc 1 727 0
 4959 1e30 10D04BE2 		sub	sp, fp, #16
 4960 1e34 10689DE8 		ldmfd	sp, {r4, fp, sp, lr}
 4961 1e38 1EFF2FE1 		bx	lr
 4962              	.L165:
 4963              		.align	2
 4964              	.L164:
 4965 1e3c 89888888 		.word	-2004318071
 4966 1e40 ABAAAAAA 		.word	-1431655765
 4967              		.cfi_endproc
 4968              	.LFE11:
 4970              		.align	2
 4971              		.global	getLicPlate
 4973              	getLicPlate:
 4974              	.LFB12:
 728:../proyecto.c **** 
 729:../proyecto.c **** uint8 getLicPlate(uint16 * licPlate)
 730:../proyecto.c **** {
 4975              		.loc 1 730 0
 4976              		.cfi_startproc
 4977              		@ Function supports interworking.
 4978              		@ args = 0, pretend = 0, frame = 8
 4979              		@ frame_needed = 1, uses_anonymous_args = 0
 4980 1e44 0DC0A0E1 		mov	ip, sp
 4981              	.LCFI24:
 4982              		.cfi_def_cfa_register 12
 4983 1e48 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 4984 1e4c 04B04CE2 		sub	fp, ip, #4
 4985              		.cfi_offset 14, -8
 4986              		.cfi_offset 13, -12
 4987              		.cfi_offset 11, -16
 4988              	.LCFI25:
 4989              		.cfi_def_cfa 11, 4
 4990 1e50 08D04DE2 		sub	sp, sp, #8
 4991 1e54 10000BE5 		str	r0, [fp, #-16]
 731:../proyecto.c **** 	static uint8 licPlatePoint =0;
 732:../proyecto.c **** 
 733:../proyecto.c **** 	if(kpPressedMsg.keyPress == KEYPAD_FAILURE)
 4992              		.loc 1 733 0
 4993 1e58 D0309FE5 		ldr	r3, .L171
 4994 1e5c 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4995 1e60 FF0053E3 		cmp	r3, #255
 4996 1e64 0100001A 		bne	.L167
 734:../proyecto.c **** 		return 0;
 4997              		.loc 1 734 0
 4998 1e68 0030A0E3 		mov	r3, #0
 4999 1e6c 2B0000EA 		b	.L168
 5000              	.L167:
 735:../proyecto.c **** 	if(licPlatePoint == 4 && *licPlate != 0)
 5001              		.loc 1 735 0
 5002 1e70 BC309FE5 		ldr	r3, .L171+4
 5003 1e74 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 5004 1e78 040053E3 		cmp	r3, #4
 5005 1e7c 0500001A 		bne	.L169
 5006              		.loc 1 735 0 is_stmt 0 discriminator 1
 5007 1e80 10301BE5 		ldr	r3, [fp, #-16]
 5008 1e84 B030D3E1 		ldrh	r3, [r3, #0]
 5009 1e88 000053E3 		cmp	r3, #0
 5010 1e8c 0100000A 		beq	.L169
 736:../proyecto.c **** 		return 0;
 5011              		.loc 1 736 0 is_stmt 1
 5012 1e90 0030A0E3 		mov	r3, #0
 5013 1e94 210000EA 		b	.L168
 5014              	.L169:
 737:../proyecto.c **** 	else if(*licPlate == 0)
 5015              		.loc 1 737 0
 5016 1e98 10301BE5 		ldr	r3, [fp, #-16]
 5017 1e9c B030D3E1 		ldrh	r3, [r3, #0]
 5018 1ea0 000053E3 		cmp	r3, #0
 5019 1ea4 0200001A 		bne	.L170
 738:../proyecto.c **** 		licPlatePoint = 0;
 5020              		.loc 1 738 0
 5021 1ea8 84309FE5 		ldr	r3, .L171+4
 5022 1eac 0020A0E3 		mov	r2, #0
 5023 1eb0 0020C3E5 		strb	r2, [r3, #0]
 5024              	.L170:
 739:../proyecto.c **** 
 740:../proyecto.c **** 	*licPlate |= ( kpPressedMsg.keyPress << (licPlatePoint*4)); //hacemos un OR entre licPlate y la te
 5025              		.loc 1 740 0
 5026 1eb4 10301BE5 		ldr	r3, [fp, #-16]
 5027 1eb8 B030D3E1 		ldrh	r3, [r3, #0]
 5028 1ebc 0338A0E1 		mov	r3, r3, asl #16
 5029 1ec0 2328A0E1 		mov	r2, r3, lsr #16
 5030 1ec4 64309FE5 		ldr	r3, .L171
 5031 1ec8 0330D3E5 		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 5032 1ecc 0310A0E1 		mov	r1, r3
 5033 1ed0 5C309FE5 		ldr	r3, .L171+4
 5034 1ed4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 5035 1ed8 0331A0E1 		mov	r3, r3, asl #2
 5036 1edc 1133A0E1 		mov	r3, r1, asl r3
 5037 1ee0 0338A0E1 		mov	r3, r3, asl #16
 5038 1ee4 2338A0E1 		mov	r3, r3, lsr #16
 5039 1ee8 033082E1 		orr	r3, r2, r3
 5040 1eec 0338A0E1 		mov	r3, r3, asl #16
 5041 1ef0 2338A0E1 		mov	r3, r3, lsr #16
 5042 1ef4 0338A0E1 		mov	r3, r3, asl #16
 5043 1ef8 2328A0E1 		mov	r2, r3, lsr #16
 5044 1efc 10301BE5 		ldr	r3, [fp, #-16]
 5045 1f00 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 741:../proyecto.c **** 	licPlatePoint++;
 5046              		.loc 1 741 0
 5047 1f04 28309FE5 		ldr	r3, .L171+4
 5048 1f08 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 5049 1f0c 013083E2 		add	r3, r3, #1
 5050 1f10 FF2003E2 		and	r2, r3, #255
 5051 1f14 18309FE5 		ldr	r3, .L171+4
 5052 1f18 0020C3E5 		strb	r2, [r3, #0]
 742:../proyecto.c **** 	return 1;
 5053              		.loc 1 742 0
 5054 1f1c 0130A0E3 		mov	r3, #1
 5055              	.L168:
 743:../proyecto.c **** }
 5056              		.loc 1 743 0
 5057 1f20 0300A0E1 		mov	r0, r3
 5058 1f24 0CD04BE2 		sub	sp, fp, #12
 5059 1f28 00689DE8 		ldmfd	sp, {fp, sp, lr}
 5060 1f2c 1EFF2FE1 		bx	lr
 5061              	.L172:
 5062              		.align	2
 5063              	.L171:
 5064 1f30 00000000 		.word	kpPressedMsg
 5065 1f34 00000000 		.word	licPlatePoint.4465
 5066              		.cfi_endproc
 5067              	.LFE12:
 5069              		.align	2
 5070              		.global	changeLang
 5072              	changeLang:
 5073              	.LFB13:
 744:../proyecto.c **** 
 745:../proyecto.c **** int8 changeLang()
 746:../proyecto.c **** {
 5074              		.loc 1 746 0
 5075              		.cfi_startproc
 5076              		@ Function supports interworking.
 5077              		@ args = 0, pretend = 0, frame = 8
 5078              		@ frame_needed = 1, uses_anonymous_args = 0
 5079 1f38 0DC0A0E1 		mov	ip, sp
 5080              	.LCFI26:
 5081              		.cfi_def_cfa_register 12
 5082 1f3c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 5083 1f40 04B04CE2 		sub	fp, ip, #4
 5084              		.cfi_offset 14, -8
 5085              		.cfi_offset 13, -12
 5086              		.cfi_offset 11, -16
 5087              	.LCFI27:
 5088              		.cfi_def_cfa 11, 4
 5089 1f44 08D04DE2 		sub	sp, sp, #8
 747:../proyecto.c **** 	int8 lang;
 748:../proyecto.c **** 	lang = -1;
 5090              		.loc 1 748 0
 5091 1f48 0030E0E3 		mvn	r3, #0
 5092 1f4c 0D304BE5 		strb	r3, [fp, #-13]
 749:../proyecto.c **** 	if(tsPressedMsg.x > LCD_WIDTH/4-24 && tsPressedMsg.x < LCD_WIDTH/4 + 24 && tsPressedMsg.y > 76 && 
 5093              		.loc 1 749 0
 5094 1f50 10319FE5 		ldr	r3, .L178
 5095 1f54 B230D3E1 		ldrh	r3, [r3, #2]
 5096 1f58 380053E3 		cmp	r3, #56
 5097 1f5c 0E00009A 		bls	.L174
 5098              		.loc 1 749 0 is_stmt 0 discriminator 1
 5099 1f60 00319FE5 		ldr	r3, .L178
 5100 1f64 B230D3E1 		ldrh	r3, [r3, #2]
 5101 1f68 670053E3 		cmp	r3, #103
 5102 1f6c 0A00008A 		bhi	.L174
 5103 1f70 F0309FE5 		ldr	r3, .L178
 5104 1f74 B430D3E1 		ldrh	r3, [r3, #4]
 5105 1f78 4C0053E3 		cmp	r3, #76
 5106 1f7c 0600009A 		bls	.L174
 5107 1f80 E0309FE5 		ldr	r3, .L178
 5108 1f84 B430D3E1 		ldrh	r3, [r3, #4]
 5109 1f88 7D0053E3 		cmp	r3, #125
 5110 1f8c 0200008A 		bhi	.L174
 750:../proyecto.c **** 		lang = ESP;
 5111              		.loc 1 750 0 is_stmt 1
 5112 1f90 0030A0E3 		mov	r3, #0
 5113 1f94 0D304BE5 		strb	r3, [fp, #-13]
 5114 1f98 250000EA 		b	.L175
 5115              	.L174:
 751:../proyecto.c **** 	else if(tsPressedMsg.x > LCD_WIDTH*3/4-24 && tsPressedMsg.x < LCD_WIDTH*3/4 +24 && tsPressedMsg.y 
 5116              		.loc 1 751 0
 5117 1f9c C4309FE5 		ldr	r3, .L178
 5118 1fa0 B230D3E1 		ldrh	r3, [r3, #2]
 5119 1fa4 D80053E3 		cmp	r3, #216
 5120 1fa8 0F00009A 		bls	.L176
 5121              		.loc 1 751 0 is_stmt 0 discriminator 1
 5122 1fac B4309FE5 		ldr	r3, .L178
 5123 1fb0 B220D3E1 		ldrh	r2, [r3, #2]
 5124 1fb4 B0309FE5 		ldr	r3, .L178+4
 5125 1fb8 030052E1 		cmp	r2, r3
 5126 1fbc 0A00008A 		bhi	.L176
 5127 1fc0 A0309FE5 		ldr	r3, .L178
 5128 1fc4 B430D3E1 		ldrh	r3, [r3, #4]
 5129 1fc8 4C0053E3 		cmp	r3, #76
 5130 1fcc 0600009A 		bls	.L176
 5131 1fd0 90309FE5 		ldr	r3, .L178
 5132 1fd4 B430D3E1 		ldrh	r3, [r3, #4]
 5133 1fd8 7D0053E3 		cmp	r3, #125
 5134 1fdc 0200008A 		bhi	.L176
 752:../proyecto.c **** 		lang = ENG;
 5135              		.loc 1 752 0 is_stmt 1
 5136 1fe0 0130A0E3 		mov	r3, #1
 5137 1fe4 0D304BE5 		strb	r3, [fp, #-13]
 5138 1fe8 110000EA 		b	.L175
 5139              	.L176:
 753:../proyecto.c **** 	else if(tsPressedMsg.x > LCD_WIDTH/2-24 && tsPressedMsg.x < LCD_WIDTH/2 + 24 && tsPressedMsg.y > 1
 5140              		.loc 1 753 0
 5141 1fec 74309FE5 		ldr	r3, .L178
 5142 1ff0 B230D3E1 		ldrh	r3, [r3, #2]
 5143 1ff4 880053E3 		cmp	r3, #136
 5144 1ff8 0D00009A 		bls	.L175
 5145              		.loc 1 753 0 is_stmt 0 discriminator 1
 5146 1ffc 64309FE5 		ldr	r3, .L178
 5147 2000 B230D3E1 		ldrh	r3, [r3, #2]
 5148 2004 B70053E3 		cmp	r3, #183
 5149 2008 0900008A 		bhi	.L175
 5150 200c 54309FE5 		ldr	r3, .L178
 5151 2010 B430D3E1 		ldrh	r3, [r3, #4]
 5152 2014 920053E3 		cmp	r3, #146
 5153 2018 0500009A 		bls	.L175
 5154 201c 44309FE5 		ldr	r3, .L178
 5155 2020 B430D3E1 		ldrh	r3, [r3, #4]
 5156 2024 D50053E3 		cmp	r3, #213
 5157 2028 0100008A 		bhi	.L175
 754:../proyecto.c **** 		lang = LAT;
 5158              		.loc 1 754 0 is_stmt 1
 5159 202c 0230A0E3 		mov	r3, #2
 5160 2030 0D304BE5 		strb	r3, [fp, #-13]
 5161              	.L175:
 755:../proyecto.c **** 
 756:../proyecto.c **** 	if(lang >= 0)
 5162              		.loc 1 756 0
 5163 2034 DD305BE1 		ldrsb	r3, [fp, #-13]
 5164 2038 000053E3 		cmp	r3, #0
 5165 203c 020000BA 		blt	.L177
 757:../proyecto.c **** 		changeScreenLang(lang);
 5166              		.loc 1 757 0
 5167 2040 DD305BE1 		ldrsb	r3, [fp, #-13]
 5168 2044 0300A0E1 		mov	r0, r3
 5169 2048 FEFFFFEB 		bl	changeScreenLang
 5170              	.L177:
 758:../proyecto.c **** 
 759:../proyecto.c **** 	return lang;
 5171              		.loc 1 759 0
 5172 204c 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 5173 2050 033CA0E1 		mov	r3, r3, asl #24
 5174 2054 433CA0E1 		mov	r3, r3, asr #24
 760:../proyecto.c **** }
 5175              		.loc 1 760 0
 5176 2058 0300A0E1 		mov	r0, r3
 5177 205c 0CD04BE2 		sub	sp, fp, #12
 5178 2060 00689DE8 		ldmfd	sp, {fp, sp, lr}
 5179 2064 1EFF2FE1 		bx	lr
 5180              	.L179:
 5181              		.align	2
 5182              	.L178:
 5183 2068 00000000 		.word	tsPressedMsg
 5184 206c 07010000 		.word	263
 5185              		.cfi_endproc
 5186              	.LFE13:
 5188              		.align	2
 5189              		.global	exitSol
 5191              	exitSol:
 5192              	.LFB14:
 761:../proyecto.c **** 
 762:../proyecto.c **** int8 exitSol()
 763:../proyecto.c **** {
 5193              		.loc 1 763 0
 5194              		.cfi_startproc
 5195              		@ Function supports interworking.
 5196              		@ args = 0, pretend = 0, frame = 0
 5197              		@ frame_needed = 1, uses_anonymous_args = 0
 5198 2070 0DC0A0E1 		mov	ip, sp
 5199              	.LCFI28:
 5200              		.cfi_def_cfa_register 12
 5201 2074 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 5202 2078 04B04CE2 		sub	fp, ip, #4
 5203              		.cfi_offset 14, -8
 5204              		.cfi_offset 13, -12
 5205              		.cfi_offset 11, -16
 5206              	.LCFI29:
 5207              		.cfi_def_cfa 11, 4
 764:../proyecto.c **** 
 765:../proyecto.c **** 	if(tsPressedMsg.x > LCD_WIDTH/2-80 && tsPressedMsg.x < LCD_WIDTH/2+80 && tsPressedMsg.y > LCD_HEIG
 5208              		.loc 1 765 0
 5209 207c 5C309FE5 		ldr	r3, .L183
 5210 2080 B230D3E1 		ldrh	r3, [r3, #2]
 5211 2084 500053E3 		cmp	r3, #80
 5212 2088 0D00009A 		bls	.L181
 5213              		.loc 1 765 0 is_stmt 0 discriminator 1
 5214 208c 4C309FE5 		ldr	r3, .L183
 5215 2090 B230D3E1 		ldrh	r3, [r3, #2]
 5216 2094 EF0053E3 		cmp	r3, #239
 5217 2098 0900008A 		bhi	.L181
 5218 209c 3C309FE5 		ldr	r3, .L183
 5219 20a0 B430D3E1 		ldrh	r3, [r3, #4]
 5220 20a4 B00053E3 		cmp	r3, #176
 5221 20a8 0500009A 		bls	.L181
 5222 20ac 2C309FE5 		ldr	r3, .L183
 5223 20b0 B430D3E1 		ldrh	r3, [r3, #4]
 5224 20b4 EF0053E3 		cmp	r3, #239
 5225 20b8 0100008A 		bhi	.L181
 766:../proyecto.c **** 		return 1;
 5226              		.loc 1 766 0 is_stmt 1
 5227 20bc 0130A0E3 		mov	r3, #1
 5228 20c0 000000EA 		b	.L182
 5229              	.L181:
 767:../proyecto.c **** 	return 0;
 5230              		.loc 1 767 0
 5231 20c4 0030A0E3 		mov	r3, #0
 5232              	.L182:
 5233 20c8 033CA0E1 		mov	r3, r3, asl #24
 5234 20cc 433CA0E1 		mov	r3, r3, asr #24
 768:../proyecto.c **** }
 5235              		.loc 1 768 0
 5236 20d0 0300A0E1 		mov	r0, r3
 5237 20d4 0CD04BE2 		sub	sp, fp, #12
 5238 20d8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 5239 20dc 1EFF2FE1 		bx	lr
 5240              	.L184:
 5241              		.align	2
 5242              	.L183:
 5243 20e0 00000000 		.word	tsPressedMsg
 5244              		.cfi_endproc
 5245              	.LFE14:
 5247              		.bss
 5248              	licPlatePoint.4465:
 5249 0000 00       		.space	1
 5250              		.data
 5253              	init.4424:
 5254 0000 01       		.byte	1
 5255              		.bss
 5256              	state.4428:
 5257 0001 00       		.space	1
 5258 0002 0000     		.align	2
 5259              	ticks.4429:
 5260 0004 00000000 		.space	4
 5261              		.data
 5264              	init.4404:
 5265 0001 01       		.byte	1
 5266              		.bss
 5267              	state.4410:
 5268 0008 00       		.space	1
 5269              		.data
 5272              	init.4391:
 5273 0002 01       		.byte	1
 5274              		.bss
 5275              	state.4396:
 5276 0009 00       		.space	1
 5277              		.data
 5280              	init.4361:
 5281 0003 01       		.byte	1
 5282              		.bss
 5283              	placeSelected.4364:
 5284 000a 00       		.space	1
 5285              	state.4366:
 5286 000b 00       		.space	1
 5287              		.align	1
 5288              	ticks.4362:
 5289 000c 0000     		.space	2
 5290              	prevState.4367:
 5291 000e 00       		.space	1
 5292 000f 00       		.align	2
 5293              	og_deadline.4365:
 5294 0010 00000000 		.space	7
 5294      000000
 5295 0017 00       		.align	1
 5296              	licPlateComp.4363:
 5297 0018 0000     		.space	2
 5298 001a 0000     		.text
 5299              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 proyecto.c
                            *COM*:00000080 parking
                            *COM*:00000004 kpPressedMsg
                            *COM*:00000006 tsPressedMsg
                            *COM*:00000002 coinsMoverMsg
                            *COM*:00000012 ticketMsg
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:2205   .text:00000000 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:2208   .text:00000000 main
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4539   .text:00001a08 setup
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:2289   .text:000000a0 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:3901   .text:000013c8 tsScanTask
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4024   .text:000014e8 kpScanTask
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:2302   .text:000000bc mainTask
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4212   .text:000016ac coinsMoverTask
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:3872   .text:000013ac clockTask
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:3799   .text:00001304 ticketPrinterTask
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:2299   .text:000000bc $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:2410   .text:000001e0 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:2420   .text:00000200 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4613   .text:00001aa8 plotState
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5072   .text:00001f38 changeLang
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4342   .text:000017dc selectorTask
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4805   .text:00001c50 updateDeadline
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4973   .text:00001e44 getLicPlate
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:3419   .text:00000e80 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5280   .data:00000003 init.4361
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5293   .bss:00000010 og_deadline.4365
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5296   .bss:00000018 licPlateComp.4363
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5283   .bss:0000000a placeSelected.4364
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5288   .bss:0000000c ticks.4362
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5290   .bss:0000000e prevState.4367
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5285   .bss:0000000b state.4366
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:3433   .text:00000eb0 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5191   .text:00002070 exitSol
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:3865   .text:000013a8 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:3869   .text:000013ac $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4012   .text:000014d0 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5272   .data:00000002 init.4391
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5275   .bss:00000009 state.4396
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4021   .text:000014e8 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4063   .text:00001534 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4069   .text:00001544 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4104   .text:000015a8 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4110   .text:000015b8 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4203   .text:000016a0 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5264   .data:00000001 init.4404
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5267   .bss:00000008 state.4410
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4209   .text:000016ac $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4332   .text:000017cc $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5253   .data:00000000 init.4424
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5256   .bss:00000001 state.4428
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5259   .bss:00000004 ticks.4429
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4339   .text:000017dc $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4532   .text:00001a04 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4536   .text:00001a08 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4603   .text:00001a98 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4610   .text:00001aa8 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4641   .text:00001ad8 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4651   .text:00001af8 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4727   .text:00001bbc $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4731   .text:00001bc0 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4734   .text:00001bc0 getMonthdays
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4965   .text:00001e3c $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:4970   .text:00001e44 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5064   .text:00001f30 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5248   .bss:00000000 licPlatePoint.4465
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5069   .text:00001f38 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5183   .text:00002068 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5188   .text:00002070 $a
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5243   .text:000020e0 $d
C:\Users\guill\AppData\Local\Temp\ccrjfI7c.s:5249   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sys_init
leds_init
segs_init
uart0_init
rtc_init
timers_init
keypad_init
lcd_init
ts_init
lcd_on
ts_on
scheduler_init
create_task
timer0_open_tick
sleep
dispacher
scheduler
init_screen_mens
plotWelcomeScreen
rtc_gettime
memcpy
plotSelEnc
plotLangSelScreen
plotExcessReturn
plotPayCredit
plotPayDeadline
plotLicPlateUpdate
plotLicPlateEnc
plotExitSuccess
makeTicket
plotTime
ts_pressed
ts_getpos
keypad_pressed
keypad_scan
segs_putchar
led_on
segs_off
led_off
plotSelectionScreen
plotPaymentScreen
plotLicPlateScreen
plotSucScreen
plotErrorScreen
plotLicPlateDemand
changeScreenLang
